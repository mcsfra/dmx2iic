

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Feb 05 08:24:44 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.35
    47                           ; Generated 05/05/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F14K22 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  000434                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _bAllChannelsOff
    87  000434  01                 	db	1
    88                           
    89                           	psect	mediumconst
    90  003DFE                     __pmediumconst:
    91                           	callstack 0
    92  003DFE  00                 	db	0
    93  003DFF                     _lookup:
    94                           	callstack 0
    95  003DFF  0000               	dw	0
    96  003E01  0001               	dw	1
    97  003E03  0002               	dw	2
    98  003E05  0003               	dw	3
    99  003E07  0004               	dw	4
   100  003E09  0005               	dw	5
   101  003E0B  0006               	dw	6
   102  003E0D  0007               	dw	7
   103  003E0F  0008               	dw	8
   104  003E11  0009               	dw	9
   105  003E13  000A               	dw	10
   106  003E15  000B               	dw	11
   107  003E17  000C               	dw	12
   108  003E19  000D               	dw	13
   109  003E1B  000E               	dw	14
   110  003E1D  000F               	dw	15
   111  003E1F  0010               	dw	16
   112  003E21  0012               	dw	18
   113  003E23  0013               	dw	19
   114  003E25  0014               	dw	20
   115  003E27  0015               	dw	21
   116  003E29  0017               	dw	23
   117  003E2B  0018               	dw	24
   118  003E2D  0019               	dw	25
   119  003E2F  001A               	dw	26
   120  003E31  001C               	dw	28
   121  003E33  001D               	dw	29
   122  003E35  001F               	dw	31
   123  003E37  0020               	dw	32
   124  003E39  0021               	dw	33
   125  003E3B  0023               	dw	35
   126  003E3D  0024               	dw	36
   127  003E3F  0026               	dw	38
   128  003E41  0028               	dw	40
   129  003E43  0029               	dw	41
   130  003E45  002B               	dw	43
   131  003E47  002C               	dw	44
   132  003E49  002E               	dw	46
   133  003E4B  0030               	dw	48
   134  003E4D  0031               	dw	49
   135  003E4F  0033               	dw	51
   136  003E51  0035               	dw	53
   137  003E53  0037               	dw	55
   138  003E55  0039               	dw	57
   139  003E57  003B               	dw	59
   140  003E59  003C               	dw	60
   141  003E5B  003E               	dw	62
   142  003E5D  0040               	dw	64
   143  003E5F  0042               	dw	66
   144  003E61  0044               	dw	68
   145  003E63  0047               	dw	71
   146  003E65  0049               	dw	73
   147  003E67  004B               	dw	75
   148  003E69  004D               	dw	77
   149  003E6B  004F               	dw	79
   150  003E6D  0052               	dw	82
   151  003E6F  0054               	dw	84
   152  003E71  0056               	dw	86
   153  003E73  0059               	dw	89
   154  003E75  005B               	dw	91
   155  003E77  005E               	dw	94
   156  003E79  0060               	dw	96
   157  003E7B  0063               	dw	99
   158  003E7D  0065               	dw	101
   159  003E7F  0068               	dw	104
   160  003E81  006B               	dw	107
   161  003E83  006D               	dw	109
   162  003E85  0070               	dw	112
   163  003E87  0073               	dw	115
   164  003E89  0076               	dw	118
   165  003E8B  0079               	dw	121
   166  003E8D  007C               	dw	124
   167  003E8F  007F               	dw	127
   168  003E91  0082               	dw	130
   169  003E93  0085               	dw	133
   170  003E95  0088               	dw	136
   171  003E97  008C               	dw	140
   172  003E99  008F               	dw	143
   173  003E9B  0092               	dw	146
   174  003E9D  0096               	dw	150
   175  003E9F  0099               	dw	153
   176  003EA1  009D               	dw	157
   177  003EA3  00A0               	dw	160
   178  003EA5  00A4               	dw	164
   179  003EA7  00A8               	dw	168
   180  003EA9  00AC               	dw	172
   181  003EAB  00AF               	dw	175
   182  003EAD  00B3               	dw	179
   183  003EAF  00B7               	dw	183
   184  003EB1  00BB               	dw	187
   185  003EB3  00C0               	dw	192
   186  003EB5  00C4               	dw	196
   187  003EB7  00C8               	dw	200
   188  003EB9  00CC               	dw	204
   189  003EBB  00D1               	dw	209
   190  003EBD  00D5               	dw	213
   191  003EBF  00DA               	dw	218
   192  003EC1  00DF               	dw	223
   193  003EC3  00E3               	dw	227
   194  003EC5  00E8               	dw	232
   195  003EC7  00ED               	dw	237
   196  003EC9  00F2               	dw	242
   197  003ECB  00F7               	dw	247
   198  003ECD  00FC               	dw	252
   199  003ECF  0102               	dw	258
   200  003ED1  0107               	dw	263
   201  003ED3  010D               	dw	269
   202  003ED5  0112               	dw	274
   203  003ED7  0118               	dw	280
   204  003ED9  011E               	dw	286
   205  003EDB  0123               	dw	291
   206  003EDD  0129               	dw	297
   207  003EDF  012F               	dw	303
   208  003EE1  0136               	dw	310
   209  003EE3  013C               	dw	316
   210  003EE5  0142               	dw	322
   211  003EE7  0149               	dw	329
   212  003EE9  014F               	dw	335
   213  003EEB  0156               	dw	342
   214  003EED  015D               	dw	349
   215  003EEF  0164               	dw	356
   216  003EF1  016B               	dw	363
   217  003EF3  0172               	dw	370
   218  003EF5  0179               	dw	377
   219  003EF7  0181               	dw	385
   220  003EF9  0188               	dw	392
   221  003EFB  0190               	dw	400
   222  003EFD  0198               	dw	408
   223  003EFF  01A0               	dw	416
   224  003F01  01A8               	dw	424
   225  003F03  01B0               	dw	432
   226  003F05  01B9               	dw	441
   227  003F07  01C1               	dw	449
   228  003F09  01CA               	dw	458
   229  003F0B  01D3               	dw	467
   230  003F0D  01DC               	dw	476
   231  003F0F  01E5               	dw	485
   232  003F11  01EE               	dw	494
   233  003F13  01F7               	dw	503
   234  003F15  0201               	dw	513
   235  003F17  020B               	dw	523
   236  003F19  0215               	dw	533
   237  003F1B  021F               	dw	543
   238  003F1D  0229               	dw	553
   239  003F1F  0234               	dw	564
   240  003F21  023E               	dw	574
   241  003F23  0249               	dw	585
   242  003F25  0254               	dw	596
   243  003F27  0260               	dw	608
   244  003F29  026B               	dw	619
   245  003F2B  0277               	dw	631
   246  003F2D  0282               	dw	642
   247  003F2F  028F               	dw	655
   248  003F31  029B               	dw	667
   249  003F33  02A7               	dw	679
   250  003F35  02B4               	dw	692
   251  003F37  02C1               	dw	705
   252  003F39  02CE               	dw	718
   253  003F3B  02DB               	dw	731
   254  003F3D  02E9               	dw	745
   255  003F3F  02F7               	dw	759
   256  003F41  0305               	dw	773
   257  003F43  0313               	dw	787
   258  003F45  0321               	dw	801
   259  003F47  0330               	dw	816
   260  003F49  033F               	dw	831
   261  003F4B  034F               	dw	847
   262  003F4D  035E               	dw	862
   263  003F4F  036E               	dw	878
   264  003F51  037E               	dw	894
   265  003F53  038F               	dw	911
   266  003F55  039F               	dw	927
   267  003F57  03B0               	dw	944
   268  003F59  03C1               	dw	961
   269  003F5B  03D3               	dw	979
   270  003F5D  03E5               	dw	997
   271  003F5F  03F7               	dw	1015
   272  003F61  040A               	dw	1034
   273  003F63  041C               	dw	1052
   274  003F65  0430               	dw	1072
   275  003F67  0443               	dw	1091
   276  003F69  0457               	dw	1111
   277  003F6B  046B               	dw	1131
   278  003F6D  047F               	dw	1151
   279  003F6F  0494               	dw	1172
   280  003F71  04AA               	dw	1194
   281  003F73  04BF               	dw	1215
   282  003F75  04D5               	dw	1237
   283  003F77  04EB               	dw	1259
   284  003F79  0502               	dw	1282
   285  003F7B  0519               	dw	1305
   286  003F7D  0531               	dw	1329
   287  003F7F  0549               	dw	1353
   288  003F81  0561               	dw	1377
   289  003F83  057A               	dw	1402
   290  003F85  0593               	dw	1427
   291  003F87  05AD               	dw	1453
   292  003F89  05C7               	dw	1479
   293  003F8B  05E1               	dw	1505
   294  003F8D  05FC               	dw	1532
   295  003F8F  0618               	dw	1560
   296  003F91  0634               	dw	1588
   297  003F93  0650               	dw	1616
   298  003F95  066D               	dw	1645
   299  003F97  068A               	dw	1674
   300  003F99  06A8               	dw	1704
   301  003F9B  06C7               	dw	1735
   302  003F9D  06E6               	dw	1766
   303  003F9F  0705               	dw	1797
   304  003FA1  0725               	dw	1829
   305  003FA3  0746               	dw	1862
   306  003FA5  0767               	dw	1895
   307  003FA7  0789               	dw	1929
   308  003FA9  07AB               	dw	1963
   309  003FAB  07CE               	dw	1998
   310  003FAD  07F2               	dw	2034
   311  003FAF  0816               	dw	2070
   312  003FB1  083B               	dw	2107
   313  003FB3  0860               	dw	2144
   314  003FB5  0886               	dw	2182
   315  003FB7  08AD               	dw	2221
   316  003FB9  08D4               	dw	2260
   317  003FBB  08FC               	dw	2300
   318  003FBD  0925               	dw	2341
   319  003FBF  094E               	dw	2382
   320  003FC1  0979               	dw	2425
   321  003FC3  09A4               	dw	2468
   322  003FC5  09CF               	dw	2511
   323  003FC7  09FC               	dw	2556
   324  003FC9  0A29               	dw	2601
   325  003FCB  0A57               	dw	2647
   326  003FCD  0A86               	dw	2694
   327  003FCF  0AB5               	dw	2741
   328  003FD1  0AE6               	dw	2790
   329  003FD3  0B17               	dw	2839
   330  003FD5  0B49               	dw	2889
   331  003FD7  0B7C               	dw	2940
   332  003FD9  0BB0               	dw	2992
   333  003FDB  0BE4               	dw	3044
   334  003FDD  0C1A               	dw	3098
   335  003FDF  0C51               	dw	3153
   336  003FE1  0C88               	dw	3208
   337  003FE3  0CC1               	dw	3265
   338  003FE5  0CFA               	dw	3322
   339  003FE7  0D35               	dw	3381
   340  003FE9  0D70               	dw	3440
   341  003FEB  0DAD               	dw	3501
   342  003FED  0DEA               	dw	3562
   343  003FEF  0E29               	dw	3625
   344  003FF1  0E69               	dw	3689
   345  003FF3  0EAA               	dw	3754
   346  003FF5  0EEC               	dw	3820
   347  003FF7  0F2F               	dw	3887
   348  003FF9  0F73               	dw	3955
   349  003FFB  0FB8               	dw	4024
   350  003FFD  0FFF               	dw	4095
   351  003FFF                     __end_of_lookup:
   352                           	callstack 0
   353  0000                     _LATAbits	set	3977
   354  0000                     _INTCONbits	set	4082
   355  0000                     _RCONbits	set	4048
   356  0000                     _PIR1bits	set	3998
   357  0000                     _SSPBUF	set	4041
   358  0000                     _SSPCON2	set	4037
   359  0000                     _SSPCON2bits	set	4037
   360  0000                     _SSPSTAT	set	4039
   361  0000                     _SSPCON1	set	4038
   362  0000                     _SSPADD	set	4040
   363  0000                     _SSPCON1bits	set	4038
   364  0000                     _TRISBbits	set	3987
   365  0000                     _TRISC	set	3988
   366  0000                     _LATC	set	3979
   367  0000                     _TRISB	set	3987
   368  0000                     _LATB	set	3978
   369  0000                     _PORTB	set	3969
   370  0000                     _TRISA	set	3986
   371  0000                     _PORTA	set	3968
   372  0000                     _LATA	set	3977
   373  0000                     _ANSELH	set	3967
   374  0000                     _ANSEL	set	3966
   375  0000                     _CM2CON0	set	3947
   376  0000                     _CM1CON0	set	3949
   377  0000                     _OSCTUNEbits	set	3995
   378  0000                     _OSCCONbits	set	4051
   379  0000                     _LATCbits	set	3979
   380  0000                     _RCREG	set	4014
   381  0000                     _PORTC	set	3970
   382  0000                     _IPR1bits	set	3999
   383  0000                     _PIE1bits	set	3997
   384  0000                     _RCSTA1bits	set	4011
   385  0000                     _SPBRGH	set	4016
   386  0000                     _SPBRG1	set	4015
   387  0000                     _BAUDCONbits	set	4024
   388  0000                     _CREN	set	32092
   389  0000                     _OERR	set	32089
   390  0000                     _PEIE	set	32662
   391  0000                     _BF	set	32312
   392  0000                     _FERR	set	32090
   393  0000                     _SYNC	set	32100
   394  003FFF  00                 	db	0	; dummy byte at the end
   395  0000                     
   396                           ; #config settings
   397                           
   398                           	psect	cinit
   399  00022A                     __pcinit:
   400                           	callstack 0
   401  00022A                     start_initialization:
   402                           	callstack 0
   403  00022A                     __initialization:
   404                           	callstack 0
   405                           
   406                           ; Initialize objects allocated to COMRAM (1 bytes)
   407                           ; load TBLPTR registers with __pidataCOMRAM
   408  00022A  0E34               	movlw	low __pidataCOMRAM
   409  00022C  6EF6               	movwf	tblptrl,c
   410  00022E  0E04               	movlw	high __pidataCOMRAM
   411  000230  6EF7               	movwf	tblptrh,c
   412  000232  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   413  000234  6EF8               	movwf	tblptru,c
   414  000236  0009               	tblrd		*+	;fetch initializer
   415  000238  CFF5 F025          	movff	tablat,__pdataCOMRAM
   416                           
   417                           ; Clear objects allocated to BANK0 (64 bytes)
   418  00023C  EE00  F060         	lfsr	0,__pbssBANK0
   419  000240  0E40               	movlw	64
   420  000242                     clear_0:
   421  000242  6AEE               	clrf	postinc0,c
   422  000244  06E8               	decf	wreg,f,c
   423  000246  E1FD               	bnz	clear_0
   424                           
   425                           ; Clear objects allocated to COMRAM (12 bytes)
   426  000248  EE00  F019         	lfsr	0,__pbssCOMRAM
   427  00024C  0E0C               	movlw	12
   428  00024E                     clear_1:
   429  00024E  6AEE               	clrf	postinc0,c
   430  000250  06E8               	decf	wreg,f,c
   431  000252  E1FD               	bnz	clear_1
   432  000254                     end_of_initialization:
   433                           	callstack 0
   434  000254                     __end_of__initialization:
   435                           	callstack 0
   436  000254  9026               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   437  000256  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   438  000258  0E00               	movlw	low (__Lmediumconst shr (0+16))
   439  00025A  6EF8               	movwf	tblptru,c
   440  00025C  0100               	movlb	0
   441  00025E  EF51  F000         	goto	_main	;jump to C main() function
   442                           
   443                           	psect	bssCOMRAM
   444  000019                     __pbssCOMRAM:
   445                           	callstack 0
   446  000019                     _framingErrorWatchdog:
   447                           	callstack 0
   448  000019                     	ds	2
   449  00001B                     _signalWatchdog:
   450                           	callstack 0
   451  00001B                     	ds	2
   452  00001D                     _dataWatchdog:
   453                           	callstack 0
   454  00001D                     	ds	2
   455  00001F                     _errorCounter:
   456                           	callstack 0
   457  00001F                     	ds	1
   458  000020                     _bI2CTimeout:
   459                           	callstack 0
   460  000020                     	ds	1
   461  000021                     _topAddress:
   462                           	callstack 0
   463  000021                     	ds	1
   464  000022                     _baseAddress:
   465                           	callstack 0
   466  000022                     	ds	1
   467  000023                     _currentAdress:
   468                           	callstack 0
   469  000023                     	ds	1
   470  000024                     _dmxState:
   471                           	callstack 0
   472  000024                     	ds	1
   473                           
   474                           	psect	dataCOMRAM
   475  000025                     __pdataCOMRAM:
   476                           	callstack 0
   477  000025                     	ds	1
   478                           
   479                           	psect	bssBANK0
   480  000060                     __pbssBANK0:
   481                           	callstack 0
   482  000060                     _channels:
   483                           	callstack 0
   484  000060                     	ds	64
   485                           
   486                           	psect	cstackCOMRAM
   487  000001                     __pcstackCOMRAM:
   488                           	callstack 0
   489  000001                     setChannelLevel@level:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x0
   493  000001                     	ds	1
   494  000002                     
   495                           ; 1 bytes @ 0x1
   496  000002                     	ds	1
   497  000003                     setChannelLevel@channel:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x2
   501  000003                     	ds	1
   502  000004                     handleDMX@eFraming:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x3
   506  000004                     	ds	1
   507  000005                     handleDMX@received:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x4
   511  000005                     	ds	1
   512  000006                     ??_high_isr:
   513                           
   514                           ; 1 bytes @ 0x5
   515  000006                     	ds	4
   516  00000A                     ??_low_isr:
   517                           
   518                           ; 1 bytes @ 0x9
   519  00000A                     	ds	1
   520  00000B                     ?_getLookup:
   521                           	callstack 0
   522  00000B                     initChannels@i:
   523                           	callstack 0
   524  00000B                     i2cSend@dat:
   525                           	callstack 0
   526  00000B                     pcaGetAddress@which:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0xA
   530  00000B                     	ds	1
   531  00000C                     _pcaGetAddress$943:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xB
   535  00000C                     	ds	1
   536  00000D                     getLookup@value:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0xC
   540  00000D                     	ds	1
   541  00000E                     pcaSetChannelRaw@channel:
   542                           	callstack 0
   543  00000E                     pcaWakeUp@which:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0xD
   547  00000E                     	ds	1
   548  00000F                     pcaInit@which:
   549                           	callstack 0
   550  00000F                     pcaSetChannelRaw@level:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xE
   554  00000F                     	ds	2
   555  000011                     pcaSetChannelRaw@which:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x10
   559  000011                     	ds	1
   560  000012                     pcaSetChannelLog@channel:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x11
   564  000012                     	ds	1
   565  000013                     pcaSetChannelLog@value:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x12
   569  000013                     	ds	1
   570  000014                     pcaSetChannelLog@which:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x13
   574  000014                     	ds	1
   575  000015                     
   576                           ; 1 bytes @ 0x14
   577  000015                     	ds	1
   578  000016                     sendChangedChannels@device:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x15
   582  000016                     	ds	1
   583  000017                     sendChangedChannels@channel:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x16
   587  000017                     	ds	1
   588  000018                     sendChangedChannels@i:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x17
   592  000018                     	ds	1
   593  000019                     
   594                           ; 1 bytes @ 0x18
   595 ;;
   596 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   597 ;;
   598 ;; *************** function _main *****************
   599 ;; Defined at:
   600 ;;		line 40 in file "main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1
   614 ;;      Params:         0       0       0
   615 ;;      Locals:         0       0       0
   616 ;;      Temps:          0       0       0
   617 ;;      Totals:         0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels required when called: 9
   620 ;; This function calls:
   621 ;;		_decrementDataWatchdog
   622 ;;		_decrementFramingWatchdog
   623 ;;		_decrementSignalWatchdog
   624 ;;		_i2cInit
   625 ;;		_initChannels
   626 ;;		_initDMX
   627 ;;		_initHardware
   628 ;;		_pcaInit
   629 ;;		_pcaWakeUp
   630 ;;		_resetDMX
   631 ;;		_sendChangedChannels
   632 ;; This function is called by:
   633 ;;		Startup code after reset
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text0
   638  0000A2                     __ptext0:
   639                           	callstack 0
   640  0000A2                     _main:
   641                           	callstack 22
   642                           
   643                           ;main.c: 42: initHardware();
   644                           
   645                           ;incstack = 0
   646  0000A2  ECB5  F000         	call	_initHardware	;wreg free
   647                           
   648                           ;main.c: 43: initChannels();
   649  0000A6  EC31  F001         	call	_initChannels	;wreg free
   650                           
   651                           ;main.c: 44: i2cInit();
   652  0000AA  ECC0  F001         	call	_i2cInit	;wreg free
   653                           
   654                           ;main.c: 45: pcaInit(0);
   655  0000AE  0E00               	movlw	0
   656  0000B0  ECFF  F001         	call	_pcaInit
   657                           
   658                           ;main.c: 46: pcaInit(1);
   659  0000B4  0E01               	movlw	1
   660  0000B6  ECFF  F001         	call	_pcaInit
   661                           
   662                           ;main.c: 47: initDMX();
   663  0000BA  EC5F  F001         	call	_initDMX	;wreg free
   664                           
   665                           ;main.c: 49: RCONbits.IPEN = 1;
   666  0000BE  8ED0               	bsf	208,7,c	;volatile
   667                           
   668                           ;main.c: 56: INTCONbits.GIEH = 1;
   669  0000C0  8EF2               	bsf	242,7,c	;volatile
   670                           
   671                           ;main.c: 57: INTCONbits.GIEL = 1;
   672  0000C2  8CF2               	bsf	242,6,c	;volatile
   673                           
   674                           ;main.c: 58: PEIE = 1;
   675  0000C4  8CF2               	bsf	4082,6,c	;volatile
   676                           
   677                           ;main.c: 64: pcaWakeUp(0);
   678  0000C6  0E00               	movlw	0
   679  0000C8  EC75  F001         	call	_pcaWakeUp
   680                           
   681                           ;main.c: 65: pcaWakeUp(1);
   682  0000CC  0E01               	movlw	1
   683  0000CE  EC75  F001         	call	_pcaWakeUp
   684  0000D2                     l1559:
   685                           
   686                           ;main.c: 71: if ( LATAbits.LATA2 == 1) {
   687  0000D2  A489               	btfss	137,2,c	;volatile
   688  0000D4  D002               	goto	l303
   689                           
   690                           ;main.c: 72: LATAbits.LATA2 = 0;
   691  0000D6  9489               	bcf	137,2,c	;volatile
   692                           
   693                           ;main.c: 73: }
   694  0000D8  D001               	goto	l304
   695  0000DA                     l303:
   696                           
   697                           ;main.c: 74: else {;main.c: 75: LATAbits.LATA2 = 1;
   698  0000DA  8489               	bsf	137,2,c	;volatile
   699  0000DC                     l304:
   700                           
   701                           ;main.c: 76: };main.c: 78: if ( OERR ) {
   702  0000DC  A2AB               	btfss	4011,1,c	;volatile
   703  0000DE  D00A               	goto	l1581
   704                           
   705                           ;main.c: 79: CREN = 0;
   706  0000E0  98AB               	bcf	4011,4,c	;volatile
   707                           
   708                           ;main.c: 80: resetDMX();
   709  0000E2  ECF2  F001         	call	_resetDMX	;wreg free
   710                           
   711                           ;main.c: 82: __nop(); __nop(); __nop(); __nop(); __nop();
   712  0000E6  F000               	nop	
   713  0000E8  F000               	nop	
   714  0000EA  F000               	nop	
   715  0000EC  F000               	nop	
   716  0000EE  F000               	nop	
   717                           
   718                           ;main.c: 83: OERR = 0;
   719  0000F0  92AB               	bcf	4011,1,c	;volatile
   720                           
   721                           ;main.c: 84: CREN = 1;
   722  0000F2  88AB               	bsf	4011,4,c	;volatile
   723  0000F4                     l1581:
   724                           
   725                           ;main.c: 85: };main.c: 89: sendChangedChannels();
   726  0000F4  EC83  F000         	call	_sendChangedChannels	;wreg free
   727                           
   728                           ;main.c: 92: decrementDataWatchdog();
   729  0000F8  ECCC  F001         	call	_decrementDataWatchdog	;wreg free
   730                           
   731                           ;main.c: 93: decrementFramingWatchdog();
   732  0000FC  ECD7  F001         	call	_decrementFramingWatchdog	;wreg free
   733                           
   734                           ;main.c: 96: if ( decrementSignalWatchdog() == 1 ) {
   735  000100  ECB3  F001         	call	_decrementSignalWatchdog	;wreg free
   736  000104  D7E6               	goto	l1559
   737  000106                     __end_of_main:
   738                           	callstack 0
   739                           
   740 ;; *************** function _sendChangedChannels *****************
   741 ;; Defined at:
   742 ;;		line 51 in file "channels.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  i               1   23[COMRAM] unsigned char 
   747 ;;  channel         1   22[COMRAM] unsigned char 
   748 ;;  device          1   21[COMRAM] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1
   758 ;;      Params:         0       0       0
   759 ;;      Locals:         3       0       0
   760 ;;      Temps:          1       0       0
   761 ;;      Totals:         4       0       0
   762 ;;Total ram usage:        4 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 8
   765 ;; This function calls:
   766 ;;		_pcaSetChannelLog
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text1
   773  000106                     __ptext1:
   774                           	callstack 0
   775  000106                     _sendChangedChannels:
   776                           	callstack 22
   777                           
   778                           ;channels.c: 53: unsigned char i;;channels.c: 54: unsigned char device ;;channels.c: 55:
      +                           unsigned char channel;;channels.c: 57: for (i = 0; i < 32U; i++ ) {
   779                           
   780                           ;incstack = 0
   781  000106  0E00               	movlw	0
   782  000108  6E18               	movwf	sendChangedChannels@i^0,c
   783  00010A                     l1467:
   784                           
   785                           ;channels.c: 61: if ( channels[i].bChanged == 1) {
   786  00010A  5018               	movf	sendChangedChannels@i^0,w,c
   787  00010C  0D02               	mullw	2
   788  00010E  50F3               	movf	243,w,c
   789  000110  0F60               	addlw	low _channels
   790  000112  6ED9               	movwf	fsr2l,c
   791  000114  6ADA               	clrf	fsr2h,c
   792  000116  04DE               	decf	postinc2,w,c
   793  000118  A4D8               	btfss	status,2,c
   794  00011A  D022               	goto	l1483
   795                           
   796                           ;channels.c: 62: channels[i].bChanged = 0;
   797  00011C  5018               	movf	sendChangedChannels@i^0,w,c
   798  00011E  0D02               	mullw	2
   799  000120  50F3               	movf	243,w,c
   800  000122  0F60               	addlw	low _channels
   801  000124  6ED9               	movwf	fsr2l,c
   802  000126  6ADA               	clrf	fsr2h,c
   803  000128  0E00               	movlw	0
   804  00012A  6EDF               	movwf	indf2,c
   805                           
   806                           ;channels.c: 64: if ( i > 15) {
   807  00012C  0E0F               	movlw	15
   808  00012E  6418               	cpfsgt	sendChangedChannels@i^0,c
   809  000130  D006               	goto	l1477
   810                           
   811                           ;channels.c: 65: device = 1;
   812  000132  0E01               	movlw	1
   813  000134  6E16               	movwf	sendChangedChannels@device^0,c
   814                           
   815                           ;channels.c: 66: channel = i - 16U;
   816  000136  5018               	movf	sendChangedChannels@i^0,w,c
   817  000138  0FF0               	addlw	240
   818  00013A  6E17               	movwf	sendChangedChannels@channel^0,c
   819                           
   820                           ;channels.c: 67: }
   821  00013C  D004               	goto	l1481
   822  00013E                     l1477:
   823                           
   824                           ;channels.c: 68: else {;channels.c: 69: device = 0;
   825  00013E  0E00               	movlw	0
   826  000140  6E16               	movwf	sendChangedChannels@device^0,c
   827                           
   828                           ;channels.c: 70: channel = i;
   829  000142  C018  F017         	movff	sendChangedChannels@i,sendChangedChannels@channel
   830  000146                     l1481:
   831                           
   832                           ;channels.c: 71: };channels.c: 73: pcaSetChannelLog(device, channel, channels[i].level);
   833  000146  C017  F012         	movff	sendChangedChannels@channel,pcaSetChannelLog@channel
   834  00014A  5018               	movf	sendChangedChannels@i^0,w,c
   835  00014C  0D02               	mullw	2
   836  00014E  50F3               	movf	243,w,c
   837  000150  0F61               	addlw	low (_channels+1)
   838  000152  6ED9               	movwf	fsr2l,c
   839  000154  6ADA               	clrf	fsr2h,c
   840  000156  50DF               	movf	indf2,w,c
   841  000158  6E13               	movwf	pcaSetChannelLog@value^0,c
   842  00015A  5016               	movf	sendChangedChannels@device^0,w,c
   843  00015C  ECA5  F001         	call	_pcaSetChannelLog
   844  000160                     l1483:
   845  000160  2A18               	incf	sendChangedChannels@i^0,f,c
   846  000162  0E1F               	movlw	31
   847  000164  6418               	cpfsgt	sendChangedChannels@i^0,c
   848  000166  D7D1               	goto	l1467
   849  000168  0012               	return	
   850  00016A                     __end_of_sendChangedChannels:
   851                           	callstack 0
   852                           
   853 ;; *************** function _pcaSetChannelLog *****************
   854 ;; Defined at:
   855 ;;		line 50 in file "pca9685.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  which           1    wreg     unsigned char 
   858 ;;  channel         1   17[COMRAM] unsigned char 
   859 ;;  value           1   18[COMRAM] unsigned char 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  which           1   19[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1
   871 ;;      Params:         2       0       0
   872 ;;      Locals:         1       0       0
   873 ;;      Temps:          0       0       0
   874 ;;      Totals:         3       0       0
   875 ;;Total ram usage:        3 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 7
   878 ;; This function calls:
   879 ;;		_getLookup
   880 ;;		_pcaSetChannelRaw
   881 ;; This function is called by:
   882 ;;		_sendChangedChannels
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text2
   887  00034A                     __ptext2:
   888                           	callstack 0
   889  00034A                     _pcaSetChannelLog:
   890                           	callstack 22
   891                           
   892                           ;incstack = 0
   893                           ;pcaSetChannelLog@which stored from wreg
   894  00034A  6E14               	movwf	pcaSetChannelLog@which^0,c
   895                           
   896                           ;pca9685.c: 52: pcaSetChannelRaw(which, channel, getLookup(value));
   897  00034C  C012  F00E         	movff	pcaSetChannelLog@channel,pcaSetChannelRaw@channel
   898  000350  5013               	movf	pcaSetChannelLog@value^0,w,c
   899  000352  EC86  F001         	call	_getLookup
   900  000356  C00B  F00F         	movff	?_getLookup,pcaSetChannelRaw@level
   901  00035A  C00C  F010         	movff	?_getLookup+1,pcaSetChannelRaw@level+1
   902  00035E  5014               	movf	pcaSetChannelLog@which^0,w,c
   903  000360  ECF7  F000         	call	_pcaSetChannelRaw
   904  000364  0012               	return		;funcret
   905  000366                     __end_of_pcaSetChannelLog:
   906                           	callstack 0
   907                           
   908 ;; *************** function _pcaSetChannelRaw *****************
   909 ;; Defined at:
   910 ;;		line 32 in file "pca9685.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  which           1    wreg     unsigned char 
   913 ;;  channel         1   13[COMRAM] unsigned char 
   914 ;;  level           2   14[COMRAM] unsigned int 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  which           1   16[COMRAM] unsigned char 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1
   926 ;;      Params:         3       0       0
   927 ;;      Locals:         1       0       0
   928 ;;      Temps:          0       0       0
   929 ;;      Totals:         4       0       0
   930 ;;Total ram usage:        4 bytes
   931 ;; Hardware stack levels used: 1
   932 ;; Hardware stack levels required when called: 6
   933 ;; This function calls:
   934 ;;		_i2cSend
   935 ;;		_i2cStart
   936 ;;		_i2cStop
   937 ;;		_pcaGetAddress
   938 ;; This function is called by:
   939 ;;		_pcaSetChannelLog
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text3
   944  0001EE                     __ptext3:
   945                           	callstack 0
   946  0001EE                     _pcaSetChannelRaw:
   947                           	callstack 22
   948                           
   949                           ;incstack = 0
   950                           ;pcaSetChannelRaw@which stored from wreg
   951  0001EE  6E11               	movwf	pcaSetChannelRaw@which^0,c
   952                           
   953                           ;pca9685.c: 34: i2cStart();
   954  0001F0  EC12  F002         	call	_i2cStart	;wreg free
   955                           
   956                           ;pca9685.c: 35: i2cSend(pcaGetAddress(which) );
   957  0001F4  5011               	movf	pcaSetChannelRaw@which^0,w,c
   958  0001F6  EC96  F001         	call	_pcaGetAddress
   959  0001FA  ECEA  F001         	call	_i2cSend
   960                           
   961                           ;pca9685.c: 36: i2cSend(( channel * 4U ) + 0x06U);
   962  0001FE  500E               	movf	pcaSetChannelRaw@channel^0,w,c
   963  000200  0D04               	mullw	4
   964  000202  50F3               	movf	243,w,c
   965  000204  0F06               	addlw	6
   966  000206  ECEA  F001         	call	_i2cSend
   967                           
   968                           ;pca9685.c: 37: i2cSend(0x00);
   969  00020A  0E00               	movlw	0
   970  00020C  ECEA  F001         	call	_i2cSend
   971                           
   972                           ;pca9685.c: 38: i2cSend(0x00);
   973  000210  0E00               	movlw	0
   974  000212  ECEA  F001         	call	_i2cSend
   975                           
   976                           ;pca9685.c: 39: i2cSend((unsigned char)(level & 0xFF));
   977  000216  500F               	movf	pcaSetChannelRaw@level^0,w,c
   978  000218  ECEA  F001         	call	_i2cSend
   979                           
   980                           ;pca9685.c: 40: i2cSend((unsigned char)((level >> 8 ) & 0x0F));
   981  00021C  5010               	movf	(pcaSetChannelRaw@level+1)^0,w,c
   982  00021E  0B0F               	andlw	15
   983  000220  ECEA  F001         	call	_i2cSend
   984                           
   985                           ;pca9685.c: 41: i2cStop();
   986  000224  EC0E  F002         	call	_i2cStop	;wreg free
   987  000228  0012               	return		;funcret
   988  00022A                     __end_of_pcaSetChannelRaw:
   989                           	callstack 0
   990                           
   991 ;; *************** function _getLookup *****************
   992 ;; Defined at:
   993 ;;		line 52 in file "lookuptable.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  value           1    wreg     unsigned char 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  value           1   12[COMRAM] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  2   10[COMRAM] unsigned int 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1
  1007 ;;      Params:         2       0       0
  1008 ;;      Locals:         1       0       0
  1009 ;;      Temps:          0       0       0
  1010 ;;      Totals:         3       0       0
  1011 ;;Total ram usage:        3 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 4
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_pcaSetChannelLog
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text4
  1022  00030C                     __ptext4:
  1023                           	callstack 0
  1024  00030C                     _getLookup:
  1025                           	callstack 24
  1026                           
  1027                           ;incstack = 0
  1028                           ;getLookup@value stored from wreg
  1029  00030C  6E0D               	movwf	getLookup@value^0,c
  1030                           
  1031                           ;lookuptable.c: 54: return lookup[value];
  1032  00030E  500D               	movf	getLookup@value^0,w,c
  1033  000310  0D02               	mullw	2
  1034  000312  0EFF               	movlw	low _lookup
  1035  000314  24F3               	addwf	243,w,c
  1036  000316  6EF6               	movwf	tblptrl,c
  1037  000318  0E3D               	movlw	high _lookup
  1038  00031A  20F4               	addwfc	244,w,c
  1039  00031C  6EF7               	movwf	tblptrh,c
  1040  00031E                     	if	0	;There are less than 3 active tblptr bytes
  1041  00031E                     	endif
  1042  00031E  0009               	tblrd		*+
  1043  000320  CFF5 F00B          	movff	tablat,?_getLookup
  1044  000324  000A               	tblrd		*-
  1045  000326  CFF5 F00C          	movff	tablat,?_getLookup+1
  1046  00032A  0012               	return		;funcret
  1047  00032C                     __end_of_getLookup:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _resetDMX *****************
  1051 ;; Defined at:
  1052 ;;		line 63 in file "dmx.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1
  1066 ;;      Params:         0       0       0
  1067 ;;      Locals:         0       0       0
  1068 ;;      Temps:          0       0       0
  1069 ;;      Totals:         0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 4
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text5
  1081  0003E4                     __ptext5:
  1082                           	callstack 0
  1083  0003E4                     _resetDMX:
  1084                           	callstack 26
  1085                           
  1086                           ;dmx.c: 65: RCSTA1bits.CREN = 0;
  1087                           
  1088                           ;incstack = 0
  1089  0003E4  98AB               	bcf	171,4,c	;volatile
  1090                           
  1091                           ;dmx.c: 66: currentAdress = 0;
  1092  0003E6  0E00               	movlw	0
  1093  0003E8  6E23               	movwf	_currentAdress^0,c
  1094                           
  1095                           ;dmx.c: 67: dmxState = 0x00;
  1096  0003EA  0E00               	movlw	0
  1097  0003EC  6E24               	movwf	_dmxState^0,c
  1098                           
  1099                           ;dmx.c: 68: RCSTA1bits.CREN = 1;
  1100  0003EE  88AB               	bsf	171,4,c	;volatile
  1101  0003F0  0012               	return		;funcret
  1102  0003F2                     __end_of_resetDMX:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function _pcaInit *****************
  1106 ;; Defined at:
  1107 ;;		line 15 in file "pca9685.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  which           1    wreg     unsigned char 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  which           1   14[COMRAM] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1
  1121 ;;      Params:         0       0       0
  1122 ;;      Locals:         1       0       0
  1123 ;;      Temps:          0       0       0
  1124 ;;      Totals:         1       0       0
  1125 ;;Total ram usage:        1 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 7
  1128 ;; This function calls:
  1129 ;;		_pcaWakeUp
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text6
  1136  0003FE                     __ptext6:
  1137                           	callstack 0
  1138  0003FE                     _pcaInit:
  1139                           	callstack 23
  1140                           
  1141                           ;incstack = 0
  1142                           ;pcaInit@which stored from wreg
  1143  0003FE  6E0F               	movwf	pcaInit@which^0,c
  1144                           
  1145                           ;pca9685.c: 27: pcaWakeUp(which);
  1146  000400  500F               	movf	pcaInit@which^0,w,c
  1147  000402  EC75  F001         	call	_pcaWakeUp
  1148  000406  0012               	return		;funcret
  1149  000408                     __end_of_pcaInit:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _pcaWakeUp *****************
  1153 ;; Defined at:
  1154 ;;		line 64 in file "pca9685.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  which           1    wreg     unsigned char 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  which           1   13[COMRAM] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1
  1168 ;;      Params:         0       0       0
  1169 ;;      Locals:         1       0       0
  1170 ;;      Temps:          0       0       0
  1171 ;;      Totals:         1       0       0
  1172 ;;Total ram usage:        1 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 6
  1175 ;; This function calls:
  1176 ;;		_i2cSend
  1177 ;;		_i2cStart
  1178 ;;		_i2cStop
  1179 ;;		_pcaGetAddress
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;;		_pcaInit
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text7
  1187  0002EA                     __ptext7:
  1188                           	callstack 0
  1189  0002EA                     _pcaWakeUp:
  1190                           	callstack 24
  1191                           
  1192                           ;incstack = 0
  1193                           ;pcaWakeUp@which stored from wreg
  1194  0002EA  6E0E               	movwf	pcaWakeUp@which^0,c
  1195                           
  1196                           ;pca9685.c: 66: i2cStart();
  1197  0002EC  EC12  F002         	call	_i2cStart	;wreg free
  1198                           
  1199                           ;pca9685.c: 67: i2cSend(pcaGetAddress(which));
  1200  0002F0  500E               	movf	pcaWakeUp@which^0,w,c
  1201  0002F2  EC96  F001         	call	_pcaGetAddress
  1202  0002F6  ECEA  F001         	call	_i2cSend
  1203                           
  1204                           ;pca9685.c: 68: i2cSend(0x00);
  1205  0002FA  0E00               	movlw	0
  1206  0002FC  ECEA  F001         	call	_i2cSend
  1207                           
  1208                           ;pca9685.c: 69: i2cSend(0x80 | 0x20);
  1209  000300  0EA0               	movlw	160
  1210  000302  ECEA  F001         	call	_i2cSend
  1211                           
  1212                           ;pca9685.c: 70: i2cStop();
  1213  000306  EC0E  F002         	call	_i2cStop	;wreg free
  1214  00030A  0012               	return		;funcret
  1215  00030C                     __end_of_pcaWakeUp:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _pcaGetAddress *****************
  1219 ;; Defined at:
  1220 ;;		line 10 in file "pca9685.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  which           1    wreg     unsigned char 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  which           1   10[COMRAM] unsigned char 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      unsigned char 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1
  1234 ;;      Params:         0       0       0
  1235 ;;      Locals:         3       0       0
  1236 ;;      Temps:          0       0       0
  1237 ;;      Totals:         3       0       0
  1238 ;;Total ram usage:        3 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 4
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_pcaSetChannelRaw
  1245 ;;		_pcaWakeUp
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text8
  1250  00032C                     __ptext8:
  1251                           	callstack 0
  1252  00032C                     _pcaGetAddress:
  1253                           	callstack 23
  1254                           
  1255                           ;incstack = 0
  1256                           ;pcaGetAddress@which stored from wreg
  1257  00032C  6E0B               	movwf	pcaGetAddress@which^0,c
  1258                           
  1259                           ;pca9685.c: 12: return (unsigned char)((unsigned char)0x80 + ( which == 0 ? 0 : 2));
  1260  00032E  500B               	movf	pcaGetAddress@which^0,w,c
  1261  000330  B4D8               	btfsc	status,2,c
  1262  000332  D004               	goto	l1403
  1263  000334  0E00               	movlw	0
  1264  000336  6E0D               	movwf	(_pcaGetAddress$943+1)^0,c
  1265  000338  0E02               	movlw	2
  1266  00033A  D003               	goto	L1
  1267  00033C                     l1403:
  1268  00033C  0E00               	movlw	0
  1269  00033E  6E0D               	movwf	(_pcaGetAddress$943+1)^0,c
  1270  000340  0E00               	movlw	0
  1271  000342                     L1:
  1272  000342  6E0C               	movwf	_pcaGetAddress$943^0,c
  1273  000344  500C               	movf	_pcaGetAddress$943^0,w,c
  1274  000346  0F80               	addlw	128
  1275  000348  0012               	return		;funcret
  1276  00034A                     __end_of_pcaGetAddress:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _i2cStop *****************
  1280 ;; Defined at:
  1281 ;;		line 38 in file "i2c.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		None
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1
  1295 ;;      Params:         0       0       0
  1296 ;;      Locals:         0       0       0
  1297 ;;      Temps:          0       0       0
  1298 ;;      Totals:         0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 4
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_pcaSetChannelRaw
  1306 ;;		_pcaWakeUp
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text9
  1311  00041C                     __ptext9:
  1312                           	callstack 0
  1313  00041C                     _i2cStop:
  1314                           	callstack 23
  1315                           
  1316                           ;i2c.c: 40: SSPCON2bits.PEN = 1;
  1317                           
  1318                           ;incstack = 0
  1319  00041C  84C5               	bsf	197,2,c	;volatile
  1320  00041E                     l195:
  1321  00041E  A4C5               	btfss	197,2,c	;volatile
  1322  000420  0012               	return	
  1323  000422  D7FD               	goto	l195
  1324  000424                     __end_of_i2cStop:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _i2cStart *****************
  1328 ;; Defined at:
  1329 ;;		line 28 in file "i2c.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		None
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1
  1343 ;;      Params:         0       0       0
  1344 ;;      Locals:         0       0       0
  1345 ;;      Temps:          0       0       0
  1346 ;;      Totals:         0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 4
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_pcaSetChannelRaw
  1354 ;;		_pcaWakeUp
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text10
  1359  000424                     __ptext10:
  1360                           	callstack 0
  1361  000424                     _i2cStart:
  1362                           	callstack 23
  1363                           
  1364                           ;i2c.c: 30: SSPCON2bits.SEN = 1;
  1365                           
  1366                           ;incstack = 0
  1367  000424  80C5               	bsf	197,0,c	;volatile
  1368  000426                     l189:
  1369  000426  A0C5               	btfss	197,0,c	;volatile
  1370  000428  0012               	return	
  1371  00042A  D7FD               	goto	l189
  1372  00042C                     __end_of_i2cStart:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _i2cSend *****************
  1376 ;; Defined at:
  1377 ;;		line 115 in file "i2c.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  dat             1    wreg     unsigned char 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  dat             1   10[COMRAM] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1
  1391 ;;      Params:         0       0       0
  1392 ;;      Locals:         1       0       0
  1393 ;;      Temps:          0       0       0
  1394 ;;      Totals:         1       0       0
  1395 ;;Total ram usage:        1 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 5
  1398 ;; This function calls:
  1399 ;;		_i2cWait
  1400 ;; This function is called by:
  1401 ;;		_pcaSetChannelRaw
  1402 ;;		_pcaWakeUp
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text11
  1407  0003D4                     __ptext11:
  1408                           	callstack 0
  1409  0003D4                     _i2cSend:
  1410                           	callstack 22
  1411                           
  1412                           ;incstack = 0
  1413                           ;i2cSend@dat stored from wreg
  1414  0003D4  6E0B               	movwf	i2cSend@dat^0,c
  1415                           
  1416                           ;i2c.c: 117: SSPBUF = dat;
  1417  0003D6  C00B  FFC9         	movff	i2cSend@dat,4041	;volatile
  1418  0003DA                     l227:
  1419  0003DA  B0C7               	btfsc	4039,0,c	;volatile
  1420  0003DC  D7FE               	goto	l227
  1421                           
  1422                           ;i2c.c: 120: i2cWait();
  1423  0003DE  ECE1  F001         	call	_i2cWait	;wreg free
  1424  0003E2  0012               	return		;funcret
  1425  0003E4                     __end_of_i2cSend:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _i2cWait *****************
  1429 ;; Defined at:
  1430 ;;		line 102 in file "i2c.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1
  1444 ;;      Params:         0       0       0
  1445 ;;      Locals:         0       0       0
  1446 ;;      Temps:          0       0       0
  1447 ;;      Totals:         0       0       0
  1448 ;;Total ram usage:        0 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 4
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_i2cSend
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text12
  1459  0003C2                     __ptext12:
  1460                           	callstack 0
  1461  0003C2                     _i2cWait:
  1462                           	callstack 22
  1463                           
  1464                           ;i2c.c: 104: while ((SSPCON2 == 0x1F ) || ( SSPSTAT == 0x04 ) )
  1465                           
  1466                           ;incstack = 0
  1467  0003C2  0E1F               	movlw	31
  1468  0003C4  18C5               	xorwf	197,w,c	;volatile
  1469  0003C6  B4D8               	btfsc	status,2,c
  1470  0003C8  D7FC               	goto	_i2cWait
  1471  0003CA  0E04               	movlw	4
  1472  0003CC  18C7               	xorwf	199,w,c	;volatile
  1473  0003CE  A4D8               	btfss	status,2,c
  1474  0003D0  0012               	return	
  1475  0003D2  D7F7               	goto	_i2cWait
  1476  0003D4                     __end_of_i2cWait:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _initHardware *****************
  1480 ;; Defined at:
  1481 ;;		line 6 in file "hardware.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1
  1495 ;;      Params:         0       0       0
  1496 ;;      Locals:         0       0       0
  1497 ;;      Temps:          0       0       0
  1498 ;;      Totals:         0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 4
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text13
  1510  00016A                     __ptext13:
  1511                           	callstack 0
  1512  00016A                     _initHardware:
  1513                           	callstack 26
  1514                           
  1515                           ;hardware.c: 8: OSCCONbits.IDLEN = 0;
  1516                           
  1517                           ;incstack = 0
  1518  00016A  9ED3               	bcf	211,7,c	;volatile
  1519                           
  1520                           ;hardware.c: 10: OSCCONbits.IRCF2 = 1;
  1521  00016C  8CD3               	bsf	211,6,c	;volatile
  1522                           
  1523                           ;hardware.c: 11: OSCCONbits.IRCF1 = 1;
  1524  00016E  8AD3               	bsf	211,5,c	;volatile
  1525                           
  1526                           ;hardware.c: 13: OSCCONbits.IRCF0 = 1;
  1527  000170  88D3               	bsf	211,4,c	;volatile
  1528                           
  1529                           ;hardware.c: 15: OSCCONbits.SCS1 = 1;
  1530  000172  82D3               	bsf	211,1,c	;volatile
  1531                           
  1532                           ;hardware.c: 16: OSCCONbits.SCS0 = 0;
  1533  000174  90D3               	bcf	211,0,c	;volatile
  1534                           
  1535                           ;hardware.c: 18: OSCTUNEbits.PLLEN = 1;
  1536  000176  8C9B               	bsf	155,6,c	;volatile
  1537                           
  1538                           ;hardware.c: 24: CM1CON0 = 0;
  1539  000178  0E00               	movlw	0
  1540  00017A  6E6D               	movwf	109,c	;volatile
  1541                           
  1542                           ;hardware.c: 25: CM2CON0 = 0;
  1543  00017C  0E00               	movlw	0
  1544  00017E  6E6B               	movwf	107,c	;volatile
  1545                           
  1546                           ;hardware.c: 27: ANSEL = 0x00;
  1547  000180  0E00               	movlw	0
  1548  000182  6E7E               	movwf	126,c	;volatile
  1549                           
  1550                           ;hardware.c: 28: ANSELH = 0x00;
  1551  000184  0E00               	movlw	0
  1552  000186  6E7F               	movwf	127,c	;volatile
  1553                           
  1554                           ;hardware.c: 30: LATA = 0x00;
  1555  000188  0E00               	movlw	0
  1556  00018A  6E89               	movwf	137,c	;volatile
  1557                           
  1558                           ;hardware.c: 31: PORTA = 0x00;
  1559  00018C  0E00               	movlw	0
  1560  00018E  6E80               	movwf	128,c	;volatile
  1561                           
  1562                           ;hardware.c: 32: TRISA = 0b00000011;
  1563  000190  0E03               	movlw	3
  1564  000192  6E92               	movwf	146,c	;volatile
  1565                           
  1566                           ;hardware.c: 34: PORTB = 0x00;
  1567  000194  0E00               	movlw	0
  1568  000196  6E81               	movwf	129,c	;volatile
  1569                           
  1570                           ;hardware.c: 35: LATB = 0x00;
  1571  000198  0E00               	movlw	0
  1572  00019A  6E8A               	movwf	138,c	;volatile
  1573                           
  1574                           ;hardware.c: 36: TRISB = 0b10100111;
  1575  00019C  0EA7               	movlw	167
  1576  00019E  6E93               	movwf	147,c	;volatile
  1577                           
  1578                           ;hardware.c: 38: LATC = 0x00;
  1579  0001A0  0E00               	movlw	0
  1580  0001A2  6E8B               	movwf	139,c	;volatile
  1581                           
  1582                           ;hardware.c: 39: PORTC = 0x00;
  1583  0001A4  0E00               	movlw	0
  1584  0001A6  6E82               	movwf	130,c	;volatile
  1585                           
  1586                           ;hardware.c: 40: TRISC = 0b11111000;
  1587  0001A8  0EF8               	movlw	248
  1588  0001AA  6E94               	movwf	148,c	;volatile
  1589  0001AC  0012               	return		;funcret
  1590  0001AE                     __end_of_initHardware:
  1591                           	callstack 0
  1592                           
  1593 ;; *************** function _initDMX *****************
  1594 ;; Defined at:
  1595 ;;		line 39 in file "dmx.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1
  1609 ;;      Params:         0       0       0
  1610 ;;      Locals:         0       0       0
  1611 ;;      Temps:          0       0       0
  1612 ;;      Totals:         0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; Hardware stack levels required when called: 5
  1616 ;; This function calls:
  1617 ;;		_getDMXBaseAddress
  1618 ;; This function is called by:
  1619 ;;		_main
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text14
  1624  0002BE                     __ptext14:
  1625                           	callstack 0
  1626  0002BE                     _initDMX:
  1627                           	callstack 25
  1628                           
  1629                           ;dmx.c: 41: baseAddress = getDMXBaseAddress();
  1630                           
  1631                           ;incstack = 0
  1632  0002BE  EC16  F002         	call	_getDMXBaseAddress	;wreg free
  1633  0002C2  6E22               	movwf	_baseAddress^0,c
  1634                           
  1635                           ;dmx.c: 42: topAddress = baseAddress + 32U;
  1636  0002C4  5022               	movf	_baseAddress^0,w,c
  1637  0002C6  0F20               	addlw	32
  1638  0002C8  6E21               	movwf	_topAddress^0,c
  1639                           
  1640                           ;dmx.c: 44: currentAdress = 0;
  1641  0002CA  0E00               	movlw	0
  1642  0002CC  6E23               	movwf	_currentAdress^0,c
  1643                           
  1644                           ;dmx.c: 45: dmxState = 0x00;
  1645  0002CE  0E00               	movlw	0
  1646  0002D0  6E24               	movwf	_dmxState^0,c
  1647                           
  1648                           ;dmx.c: 47: BAUDCONbits.BRG16 = 1;
  1649  0002D2  86B8               	bsf	184,3,c	;volatile
  1650                           
  1651                           ;dmx.c: 49: SPBRG1 = 3;
  1652  0002D4  0E03               	movlw	3
  1653  0002D6  6EAF               	movwf	175,c	;volatile
  1654                           
  1655                           ;dmx.c: 50: SPBRGH = 0;
  1656  0002D8  0E00               	movlw	0
  1657  0002DA  6EB0               	movwf	176,c	;volatile
  1658                           
  1659                           ;dmx.c: 52: BAUDCONbits.CKTXP = 1;
  1660  0002DC  88B8               	bsf	184,4,c	;volatile
  1661                           
  1662                           ;dmx.c: 54: RCSTA1bits.CREN = 1;
  1663  0002DE  88AB               	bsf	171,4,c	;volatile
  1664                           
  1665                           ;dmx.c: 55: RCSTA1bits.SPEN = 1;
  1666  0002E0  8EAB               	bsf	171,7,c	;volatile
  1667                           
  1668                           ;dmx.c: 56: SYNC = 0;
  1669  0002E2  98AC               	bcf	4012,4,c	;volatile
  1670                           
  1671                           ;dmx.c: 58: PIE1bits.RCIE = 1;
  1672  0002E4  8A9D               	bsf	157,5,c	;volatile
  1673                           
  1674                           ;dmx.c: 59: IPR1bits.RCIP = 1;
  1675  0002E6  8A9F               	bsf	159,5,c	;volatile
  1676  0002E8  0012               	return		;funcret
  1677  0002EA                     __end_of_initDMX:
  1678                           	callstack 0
  1679                           
  1680 ;; *************** function _getDMXBaseAddress *****************
  1681 ;; Defined at:
  1682 ;;		line 78 in file "dmx.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      unsigned char 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1
  1696 ;;      Params:         0       0       0
  1697 ;;      Locals:         0       0       0
  1698 ;;      Temps:          0       0       0
  1699 ;;      Totals:         0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 4
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_initDMX
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text15
  1711  00042C                     __ptext15:
  1712                           	callstack 0
  1713  00042C                     _getDMXBaseAddress:
  1714                           	callstack 25
  1715                           
  1716                           ;dmx.c: 80: return (unsigned char)(PORTC >> 1U) & 0b01111100U;
  1717                           
  1718                           ;incstack = 0
  1719  00042C  90D8               	bcf	status,0,c
  1720  00042E  3082               	rrcf	130,w,c	;volatile
  1721  000430  0B7C               	andlw	124
  1722  000432  0012               	return		;funcret
  1723  000434                     __end_of_getDMXBaseAddress:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _initChannels *****************
  1727 ;; Defined at:
  1728 ;;		line 18 in file "channels.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  i               1   10[COMRAM] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1
  1742 ;;      Params:         0       0       0
  1743 ;;      Locals:         1       0       0
  1744 ;;      Temps:          0       0       0
  1745 ;;      Totals:         1       0       0
  1746 ;;Total ram usage:        1 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 4
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text16
  1757  000262                     __ptext16:
  1758                           	callstack 0
  1759  000262                     _initChannels:
  1760                           	callstack 26
  1761                           
  1762                           ;channels.c: 20: unsigned char i;;channels.c: 22: for (i = 0; i < 32U; i++) {
  1763                           
  1764                           ;incstack = 0
  1765  000262  0E00               	movlw	0
  1766  000264  6E0B               	movwf	initChannels@i^0,c
  1767  000266                     l1455:
  1768                           
  1769                           ;channels.c: 23: channels[i].bChanged = 0;
  1770  000266  500B               	movf	initChannels@i^0,w,c
  1771  000268  0D02               	mullw	2
  1772  00026A  50F3               	movf	243,w,c
  1773  00026C  0F60               	addlw	low _channels
  1774  00026E  6ED9               	movwf	fsr2l,c
  1775  000270  6ADA               	clrf	fsr2h,c
  1776  000272  0E00               	movlw	0
  1777  000274  6EDF               	movwf	indf2,c
  1778                           
  1779                           ;channels.c: 24: channels[i].level = 0;
  1780  000276  500B               	movf	initChannels@i^0,w,c
  1781  000278  0D02               	mullw	2
  1782  00027A  50F3               	movf	243,w,c
  1783  00027C  0F61               	addlw	low (_channels+1)
  1784  00027E  6ED9               	movwf	fsr2l,c
  1785  000280  6ADA               	clrf	fsr2h,c
  1786  000282  0E00               	movlw	0
  1787  000284  6EDF               	movwf	indf2,c
  1788  000286  2A0B               	incf	initChannels@i^0,f,c
  1789  000288  0E1F               	movlw	31
  1790  00028A  640B               	cpfsgt	initChannels@i^0,c
  1791  00028C  D7EC               	goto	l1455
  1792  00028E  0012               	return	
  1793  000290                     __end_of_initChannels:
  1794                           	callstack 0
  1795                           
  1796 ;; *************** function _i2cInit *****************
  1797 ;; Defined at:
  1798 ;;		line 7 in file "i2c.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1
  1812 ;;      Params:         0       0       0
  1813 ;;      Locals:         0       0       0
  1814 ;;      Temps:          0       0       0
  1815 ;;      Totals:         0       0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used: 1
  1818 ;; Hardware stack levels required when called: 4
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text17
  1827  000380                     __ptext17:
  1828                           	callstack 0
  1829  000380                     _i2cInit:
  1830                           	callstack 26
  1831                           
  1832                           ;i2c.c: 9: TRISBbits.RB4 = 1;
  1833                           
  1834                           ;incstack = 0
  1835  000380  8893               	bsf	147,4,c	;volatile
  1836                           
  1837                           ;i2c.c: 10: TRISBbits.RB6 = 1;
  1838  000382  8C93               	bsf	147,6,c	;volatile
  1839                           
  1840                           ;i2c.c: 12: SSPCON1bits.SSPEN = 1;
  1841  000384  8AC6               	bsf	198,5,c	;volatile
  1842                           
  1843                           ;i2c.c: 13: SSPADD = 0x08;
  1844  000386  0E08               	movlw	8
  1845  000388  6EC8               	movwf	200,c	;volatile
  1846                           
  1847                           ;i2c.c: 14: SSPCON1 = 0x28;
  1848  00038A  0E28               	movlw	40
  1849  00038C  6EC6               	movwf	198,c	;volatile
  1850                           
  1851                           ;i2c.c: 15: SSPSTAT = 0x00;
  1852  00038E  0E00               	movlw	0
  1853  000390  6EC7               	movwf	199,c	;volatile
  1854                           
  1855                           ;i2c.c: 17: bI2CTimeout = 0;
  1856  000392  0E00               	movlw	0
  1857  000394  6E20               	movwf	_bI2CTimeout^0,c
  1858  000396  0012               	return		;funcret
  1859  000398                     __end_of_i2cInit:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function _decrementSignalWatchdog *****************
  1863 ;; Defined at:
  1864 ;;		line 163 in file "dmx.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      unsigned char 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1
  1878 ;;      Params:         0       0       0
  1879 ;;      Locals:         0       0       0
  1880 ;;      Temps:          0       0       0
  1881 ;;      Totals:         0       0       0
  1882 ;;Total ram usage:        0 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 4
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text18
  1893  000366                     __ptext18:
  1894                           	callstack 0
  1895  000366                     _decrementSignalWatchdog:
  1896                           	callstack 26
  1897                           
  1898                           ;dmx.c: 165: if ( signalWatchdog > 0) {
  1899                           
  1900                           ;incstack = 0
  1901  000366  501B               	movf	_signalWatchdog^0,w,c	;volatile
  1902  000368  101C               	iorwf	(_signalWatchdog+1)^0,w,c	;volatile
  1903  00036A  B4D8               	btfsc	status,2,c
  1904  00036C  D006               	goto	l116
  1905                           
  1906                           ;dmx.c: 166: signalWatchdog--;
  1907  00036E  061B               	decf	_signalWatchdog^0,f,c	;volatile
  1908  000370  A0D8               	btfss	status,0,c
  1909  000372  061C               	decf	(_signalWatchdog+1)^0,f,c	;volatile
  1910                           
  1911                           ;dmx.c: 167: LATCbits.LATC1 = 0;
  1912  000374  928B               	bcf	139,1,c	;volatile
  1913                           
  1914                           ;dmx.c: 168: return 0;
  1915  000376  0E00               	movlw	0
  1916  000378  0012               	return	
  1917  00037A                     l116:
  1918                           
  1919                           ;dmx.c: 170: else {;dmx.c: 171: LATCbits.LATC1 = 1;
  1920  00037A  828B               	bsf	139,1,c	;volatile
  1921                           
  1922                           ;dmx.c: 172: return 1;
  1923  00037C  0E01               	movlw	1
  1924  00037E  0012               	return		;funcret
  1925  000380                     __end_of_decrementSignalWatchdog:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _decrementFramingWatchdog *****************
  1929 ;; Defined at:
  1930 ;;		line 190 in file "dmx.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1
  1944 ;;      Params:         0       0       0
  1945 ;;      Locals:         0       0       0
  1946 ;;      Temps:          0       0       0
  1947 ;;      Totals:         0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 4
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text19
  1959  0003AE                     __ptext19:
  1960                           	callstack 0
  1961  0003AE                     _decrementFramingWatchdog:
  1962                           	callstack 26
  1963                           
  1964                           ;dmx.c: 192: if (framingErrorWatchdog > 0) {
  1965                           
  1966                           ;incstack = 0
  1967  0003AE  5019               	movf	_framingErrorWatchdog^0,w,c	;volatile
  1968  0003B0  101A               	iorwf	(_framingErrorWatchdog+1)^0,w,c	;volatile
  1969  0003B2  B4D8               	btfsc	status,2,c
  1970  0003B4  D004               	goto	l126
  1971                           
  1972                           ;dmx.c: 193: framingErrorWatchdog--;
  1973  0003B6  0619               	decf	_framingErrorWatchdog^0,f,c	;volatile
  1974  0003B8  A0D8               	btfss	status,0,c
  1975  0003BA  061A               	decf	(_framingErrorWatchdog+1)^0,f,c	;volatile
  1976                           
  1977                           ;dmx.c: 194: }
  1978  0003BC  0012               	return	
  1979  0003BE                     l126:
  1980                           
  1981                           ;dmx.c: 195: else {;dmx.c: 196: LATCbits.LATC2 = 0;
  1982  0003BE  948B               	bcf	139,2,c	;volatile
  1983  0003C0  0012               	return		;funcret
  1984  0003C2                     __end_of_decrementFramingWatchdog:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _decrementDataWatchdog *****************
  1988 ;; Defined at:
  1989 ;;		line 141 in file "dmx.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1
  2003 ;;      Params:         0       0       0
  2004 ;;      Locals:         0       0       0
  2005 ;;      Temps:          0       0       0
  2006 ;;      Totals:         0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 4
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text20
  2018  000398                     __ptext20:
  2019                           	callstack 0
  2020  000398                     _decrementDataWatchdog:
  2021                           	callstack 26
  2022                           
  2023                           ;dmx.c: 143: if ( dataWatchdog > 0) {
  2024                           
  2025                           ;incstack = 0
  2026  000398  501D               	movf	_dataWatchdog^0,w,c	;volatile
  2027  00039A  101E               	iorwf	(_dataWatchdog+1)^0,w,c	;volatile
  2028  00039C  B4D8               	btfsc	status,2,c
  2029  00039E  D005               	goto	l106
  2030                           
  2031                           ;dmx.c: 144: dataWatchdog--;
  2032  0003A0  061D               	decf	_dataWatchdog^0,f,c	;volatile
  2033  0003A2  A0D8               	btfss	status,0,c
  2034  0003A4  061E               	decf	(_dataWatchdog+1)^0,f,c	;volatile
  2035                           
  2036                           ;dmx.c: 145: LATCbits.LATC0 = 1;
  2037  0003A6  808B               	bsf	139,0,c	;volatile
  2038                           
  2039                           ;dmx.c: 146: }
  2040  0003A8  0012               	return	
  2041  0003AA                     l106:
  2042                           
  2043                           ;dmx.c: 147: else {;dmx.c: 148: LATCbits.LATC0 = 0;
  2044  0003AA  908B               	bcf	139,0,c	;volatile
  2045  0003AC  0012               	return		;funcret
  2046  0003AE                     __end_of_decrementDataWatchdog:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _low_isr *****************
  2050 ;; Defined at:
  2051 ;;		line 32 in file "interrupts.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		None
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1
  2065 ;;      Params:         0       0       0
  2066 ;;      Locals:         0       0       0
  2067 ;;      Temps:          1       0       0
  2068 ;;      Totals:         1       0       0
  2069 ;;Total ram usage:        1 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 3
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		Interrupt level 1
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	intcodelo
  2080  000018                     __pintcodelo:
  2081                           	callstack 0
  2082  000018                     _low_isr:
  2083                           	callstack 22
  2084                           
  2085                           ;incstack = 0
  2086  000018  8026               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2087  00001A  CFE0 F00A          	movff	bsr,??_low_isr
  2088  00001E  C00A  FFE0         	movff	??_low_isr,bsr
  2089  000022  9026               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2090  000024  0010               	retfie	
  2091  000026                     __end_of_low_isr:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _high_isr *****************
  2095 ;; Defined at:
  2096 ;;		line 14 in file "interrupts.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1
  2110 ;;      Params:         0       0       0
  2111 ;;      Locals:         0       0       0
  2112 ;;      Temps:          4       0       0
  2113 ;;      Totals:         4       0       0
  2114 ;;Total ram usage:        4 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 2
  2117 ;; This function calls:
  2118 ;;		_handleDMX
  2119 ;; This function is called by:
  2120 ;;		Interrupt level 2
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	intcode
  2125  000008                     __pintcode:
  2126                           	callstack 0
  2127  000008                     _high_isr:
  2128                           	callstack 22
  2129                           
  2130                           ;incstack = 0
  2131  000008  8226               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2132  00000A  EF48  F001         	goto	int_func
  2133                           
  2134                           	psect	intcode_body
  2135  000290                     __pintcode_body:
  2136                           	callstack 22
  2137  000290                     int_func:
  2138                           	callstack 22
  2139  000290  CFD9 F006          	movff	fsr2l,??_high_isr
  2140  000294  CFDA F007          	movff	fsr2h,??_high_isr+1
  2141  000298  CFF3 F008          	movff	prodl,??_high_isr+2
  2142  00029C  CFF4 F009          	movff	prodh,??_high_isr+3
  2143                           
  2144                           ;interrupts.c: 19: if (PIR1bits.RCIF == 1) {
  2145  0002A0  AA9E               	btfss	158,5,c	;volatile
  2146  0002A2  D003               	goto	i2l247
  2147                           
  2148                           ;interrupts.c: 20: handleDMX();
  2149  0002A4  EC15  F000         	call	_handleDMX	;wreg free
  2150                           
  2151                           ;interrupts.c: 21: PIR1bits.RCIF = 0;
  2152  0002A8  9A9E               	bcf	158,5,c	;volatile
  2153  0002AA                     i2l247:
  2154  0002AA  C009  FFF4         	movff	??_high_isr+3,prodh
  2155  0002AE  C008  FFF3         	movff	??_high_isr+2,prodl
  2156  0002B2  C007  FFDA         	movff	??_high_isr+1,fsr2h
  2157  0002B6  C006  FFD9         	movff	??_high_isr,fsr2l
  2158  0002BA  9226               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2159  0002BC  0011               	retfie		f
  2160  0002BE                     __end_of_high_isr:
  2161                           	callstack 0
  2162                           
  2163 ;; *************** function _handleDMX *****************
  2164 ;; Defined at:
  2165 ;;		line 83 in file "dmx.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  received        1    4[COMRAM] unsigned char 
  2170 ;;  eFraming        1    3[COMRAM] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1
  2180 ;;      Params:         0       0       0
  2181 ;;      Locals:         2       0       0
  2182 ;;      Temps:          0       0       0
  2183 ;;      Totals:         2       0       0
  2184 ;;Total ram usage:        2 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 1
  2187 ;; This function calls:
  2188 ;;		_resetDataWatchdog
  2189 ;;		_resetFramingWatchdog
  2190 ;;		_resetSignalWatchdog
  2191 ;;		_setChannelLevel
  2192 ;; This function is called by:
  2193 ;;		_high_isr
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text23
  2198  00002A                     __ptext23:
  2199                           	callstack 0
  2200  00002A                     _handleDMX:
  2201                           	callstack 22
  2202                           
  2203                           ;dmx.c: 85: unsigned char eFraming = (unsigned char)FERR;
  2204                           
  2205                           ;incstack = 0
  2206  00002A  0E00               	movlw	0
  2207  00002C  B4AB               	btfsc	4011,2,c	;volatile
  2208  00002E  0E01               	movlw	1
  2209  000030  6E04               	movwf	handleDMX@eFraming^0,c
  2210                           
  2211                           ;dmx.c: 86: unsigned char received = RCREG;
  2212  000032  CFAE F005          	movff	4014,handleDMX@received	;volatile
  2213                           
  2214                           ;dmx.c: 88: resetSignalWatchdog();
  2215  000036  EC04  F002         	call	_resetSignalWatchdog	;wreg free
  2216                           
  2217                           ;dmx.c: 90: if ( eFraming == 1) {
  2218  00003A  0404               	decf	handleDMX@eFraming^0,w,c
  2219  00003C  A4D8               	btfss	status,2,c
  2220  00003E  D00B               	goto	i2l1503
  2221                           
  2222                           ;dmx.c: 92: if ( dmxState == 0x00 ) {
  2223  000040  5024               	movf	_dmxState^0,w,c
  2224  000042  A4D8               	btfss	status,2,c
  2225  000044  D005               	goto	i2l1499
  2226                           
  2227                           ;dmx.c: 93: currentAdress = 0;
  2228  000046  0E00               	movlw	0
  2229  000048  6E23               	movwf	_currentAdress^0,c
  2230                           
  2231                           ;dmx.c: 94: dmxState = 0x01;
  2232  00004A  0E01               	movlw	1
  2233  00004C  6E24               	movwf	_dmxState^0,c
  2234                           
  2235                           ;dmx.c: 95: }
  2236  00004E  0012               	return	
  2237  000050                     i2l1499:
  2238                           
  2239                           ;dmx.c: 96: else {;dmx.c: 97: resetFramingWatchdog();
  2240  000050  ECF9  F001         	call	_resetFramingWatchdog	;wreg free
  2241  000054  0012               	return	
  2242  000056                     i2l1503:
  2243                           
  2244                           ;dmx.c: 100: };dmx.c: 102: if ( (dmxState == 0x01) && (received == 0x00) ) {
  2245  000056  0424               	decf	_dmxState^0,w,c
  2246  000058  A4D8               	btfss	status,2,c
  2247  00005A  D006               	goto	i2l1511
  2248  00005C  5005               	movf	handleDMX@received^0,w,c
  2249  00005E  A4D8               	btfss	status,2,c
  2250  000060  D003               	goto	i2l1511
  2251                           
  2252                           ;dmx.c: 104: dmxState = 0x02;
  2253  000062  0E02               	movlw	2
  2254  000064  6E24               	movwf	_dmxState^0,c
  2255  000066  0012               	return	
  2256  000068                     i2l1511:
  2257                           
  2258                           ;dmx.c: 106: };dmx.c: 108: if ( dmxState == 0x02) {
  2259  000068  0E02               	movlw	2
  2260  00006A  1824               	xorwf	_dmxState^0,w,c
  2261  00006C  A4D8               	btfss	status,2,c
  2262  00006E  0012               	return	
  2263                           
  2264                           ;dmx.c: 110: if ( (currentAdress >= baseAddress) && (currentAdress < topAddress)) {
  2265  000070  5022               	movf	_baseAddress^0,w,c
  2266  000072  5C23               	subwf	_currentAdress^0,w,c
  2267  000074  A0D8               	btfss	status,0,c
  2268  000076  D00E               	goto	i2l1523
  2269  000078  5021               	movf	_topAddress^0,w,c
  2270  00007A  5C23               	subwf	_currentAdress^0,w,c
  2271  00007C  B0D8               	btfsc	status,0,c
  2272  00007E  D00A               	goto	i2l1523
  2273                           
  2274                           ;dmx.c: 112: if (received > 0) {
  2275  000080  5005               	movf	handleDMX@received^0,w,c
  2276  000082  A4D8               	btfss	status,2,c
  2277                           
  2278                           ;dmx.c: 113: resetDataWatchdog();
  2279  000084  EC09  F002         	call	_resetDataWatchdog	;wreg free
  2280                           
  2281                           ;dmx.c: 114: };dmx.c: 115: setChannelLevel((unsigned char)(currentAdress - baseAddress),
      +                           received);
  2282  000088  C005  F001         	movff	handleDMX@received,setChannelLevel@level
  2283  00008C  5022               	movf	_baseAddress^0,w,c
  2284  00008E  5C23               	subwf	_currentAdress^0,w,c
  2285  000090  ECD7  F000         	call	_setChannelLevel
  2286  000094                     i2l1523:
  2287                           
  2288                           ;dmx.c: 116: };dmx.c: 118: if ( ++currentAdress >= 128)
  2289  000094  2A23               	incf	_currentAdress^0,f,c
  2290  000096  0E7F               	movlw	127
  2291  000098  6423               	cpfsgt	_currentAdress^0,c
  2292  00009A  0012               	return	
  2293                           
  2294                           ;dmx.c: 119: dmxState = 0x00;
  2295  00009C  0E00               	movlw	0
  2296  00009E  6E24               	movwf	_dmxState^0,c
  2297  0000A0  0012               	return		;funcret
  2298  0000A2                     __end_of_handleDMX:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _setChannelLevel *****************
  2302 ;; Defined at:
  2303 ;;		line 36 in file "channels.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  channel         1    wreg     unsigned char 
  2306 ;;  level           1    0[COMRAM] unsigned char 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  channel         1    2[COMRAM] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1
  2318 ;;      Params:         1       0       0
  2319 ;;      Locals:         1       0       0
  2320 ;;      Temps:          1       0       0
  2321 ;;      Totals:         3       0       0
  2322 ;;Total ram usage:        3 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_handleDMX
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text24
  2332  0001AE                     __ptext24:
  2333                           	callstack 0
  2334  0001AE                     _setChannelLevel:
  2335                           	callstack 22
  2336                           
  2337                           ;incstack = 0
  2338                           ;setChannelLevel@channel stored from wreg
  2339  0001AE  6E03               	movwf	setChannelLevel@channel^0,c
  2340                           
  2341                           ;channels.c: 38: if ( channel >= 32U ) {
  2342  0001B0  0E1F               	movlw	31
  2343  0001B2  6403               	cpfsgt	setChannelLevel@channel^0,c
  2344  0001B4  D001               	goto	i2l1433
  2345  0001B6  0012               	return	
  2346  0001B8                     i2l1433:
  2347                           
  2348                           ;channels.c: 40: };channels.c: 41: if ( channels[channel].level != level) {
  2349  0001B8  5003               	movf	setChannelLevel@channel^0,w,c
  2350  0001BA  0D02               	mullw	2
  2351  0001BC  50F3               	movf	243,w,c
  2352  0001BE  0F61               	addlw	low (_channels+1)
  2353  0001C0  6ED9               	movwf	fsr2l,c
  2354  0001C2  6ADA               	clrf	fsr2h,c
  2355  0001C4  5001               	movf	setChannelLevel@level^0,w,c
  2356  0001C6  18DE               	xorwf	postinc2,w,c
  2357  0001C8  B4D8               	btfsc	status,2,c
  2358  0001CA  0012               	return	
  2359                           
  2360                           ;channels.c: 42: channels[channel].level = level;
  2361  0001CC  5003               	movf	setChannelLevel@channel^0,w,c
  2362  0001CE  0D02               	mullw	2
  2363  0001D0  50F3               	movf	243,w,c
  2364  0001D2  0F61               	addlw	low (_channels+1)
  2365  0001D4  6ED9               	movwf	fsr2l,c
  2366  0001D6  6ADA               	clrf	fsr2h,c
  2367  0001D8  C001  FFDF         	movff	setChannelLevel@level,indf2
  2368                           
  2369                           ;channels.c: 43: channels[channel].bChanged = 1;
  2370  0001DC  5003               	movf	setChannelLevel@channel^0,w,c
  2371  0001DE  0D02               	mullw	2
  2372  0001E0  50F3               	movf	243,w,c
  2373  0001E2  0F60               	addlw	low _channels
  2374  0001E4  6ED9               	movwf	fsr2l,c
  2375  0001E6  6ADA               	clrf	fsr2h,c
  2376  0001E8  0E01               	movlw	1
  2377  0001EA  6EDF               	movwf	indf2,c
  2378  0001EC  0012               	return		;funcret
  2379  0001EE                     __end_of_setChannelLevel:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _resetSignalWatchdog *****************
  2383 ;; Defined at:
  2384 ;;		line 158 in file "dmx.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1
  2398 ;;      Params:         0       0       0
  2399 ;;      Locals:         0       0       0
  2400 ;;      Temps:          0       0       0
  2401 ;;      Totals:         0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_handleDMX
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text25
  2412  000408                     __ptext25:
  2413                           	callstack 0
  2414  000408                     _resetSignalWatchdog:
  2415                           	callstack 22
  2416                           
  2417                           ;dmx.c: 160: signalWatchdog = 1000;
  2418                           
  2419                           ;incstack = 0
  2420  000408  0E03               	movlw	3
  2421  00040A  6E1C               	movwf	(_signalWatchdog+1)^0,c	;volatile
  2422  00040C  0EE8               	movlw	232
  2423  00040E  6E1B               	movwf	_signalWatchdog^0,c	;volatile
  2424  000410  0012               	return		;funcret
  2425  000412                     __end_of_resetSignalWatchdog:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _resetFramingWatchdog *****************
  2429 ;; Defined at:
  2430 ;;		line 185 in file "dmx.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1
  2444 ;;      Params:         0       0       0
  2445 ;;      Locals:         0       0       0
  2446 ;;      Temps:          0       0       0
  2447 ;;      Totals:         0       0       0
  2448 ;;Total ram usage:        0 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_handleDMX
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text26
  2458  0003F2                     __ptext26:
  2459                           	callstack 0
  2460  0003F2                     _resetFramingWatchdog:
  2461                           	callstack 22
  2462                           
  2463                           ;dmx.c: 186: LATCbits.LATC2 = 1;
  2464                           
  2465                           ;incstack = 0
  2466  0003F2  848B               	bsf	139,2,c	;volatile
  2467                           
  2468                           ;dmx.c: 187: framingErrorWatchdog = 1000;
  2469  0003F4  0E03               	movlw	3
  2470  0003F6  6E1A               	movwf	(_framingErrorWatchdog+1)^0,c	;volatile
  2471  0003F8  0EE8               	movlw	232
  2472  0003FA  6E19               	movwf	_framingErrorWatchdog^0,c	;volatile
  2473  0003FC  0012               	return		;funcret
  2474  0003FE                     __end_of_resetFramingWatchdog:
  2475                           	callstack 0
  2476                           
  2477 ;; *************** function _resetDataWatchdog *****************
  2478 ;; Defined at:
  2479 ;;		line 137 in file "dmx.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1
  2493 ;;      Params:         0       0       0
  2494 ;;      Locals:         0       0       0
  2495 ;;      Temps:          0       0       0
  2496 ;;      Totals:         0       0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_handleDMX
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text27
  2507  000412                     __ptext27:
  2508                           	callstack 0
  2509  000412                     _resetDataWatchdog:
  2510                           	callstack 22
  2511                           
  2512                           ;dmx.c: 138: dataWatchdog = 100;
  2513                           
  2514                           ;incstack = 0
  2515  000412  0E00               	movlw	0
  2516  000414  6E1E               	movwf	(_dataWatchdog+1)^0,c	;volatile
  2517  000416  0E64               	movlw	100
  2518  000418  6E1D               	movwf	_dataWatchdog^0,c	;volatile
  2519  00041A  0012               	return		;funcret
  2520  00041C                     __end_of_resetDataWatchdog:
  2521                           	callstack 0
  2522                           
  2523                           	psect	rparam
  2524  0000                     
  2525                           	psect	temp
  2526  000026                     btemp:
  2527                           	callstack 0
  2528  000026                     	ds	1
  2529  0000                     int$flags	set	btemp
  2530  0000                     wtemp8	set	btemp+1
  2531  0000                     ttemp5	set	btemp+1
  2532  0000                     ttemp6	set	btemp+4
  2533  0000                     ttemp7	set	btemp+8
  2534                           
  2535                           	psect	config
  2536                           
  2537                           ; Padding undefined space
  2538  300000                     	org	3145728
  2539  300000  FF                 	db	255
  2540                           
  2541                           ;Config register CONFIG1H @ 0x300001
  2542                           ;	Oscillator Selection bits
  2543                           ;	FOSC = IRC, Internal RC oscillator
  2544                           ;	4 X PLL Enable bit
  2545                           ;	PLLEN = ON, Oscillator multiplied by 4
  2546                           ;	Primary Clock Enable bit
  2547                           ;	PCLKEN = ON, Primary clock enabled
  2548                           ;	Fail-Safe Clock Monitor Enable
  2549                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2550                           ;	Internal/External Oscillator Switchover bit
  2551                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2552  300001                     	org	3145729
  2553  300001  38                 	db	56
  2554                           
  2555                           ;Config register CONFIG2L @ 0x300002
  2556                           ;	Power-up Timer Enable bit
  2557                           ;	PWRTEN = ON, PWRT enabled
  2558                           ;	Brown-out Reset Enable bits
  2559                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2560                           ;	Brown Out Reset Voltage bits
  2561                           ;	BORV = 19, VBOR set to 1.9 V nominal
  2562  300002                     	org	3145730
  2563  300002  1E                 	db	30
  2564                           
  2565                           ;Config register CONFIG2H @ 0x300003
  2566                           ;	Watchdog Timer Enable bit
  2567                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2568                           ;	Watchdog Timer Postscale Select bits
  2569                           ;	WDTPS = 32768, 1:32768
  2570  300003                     	org	3145731
  2571  300003  1E                 	db	30
  2572                           
  2573                           ; Padding undefined space
  2574  300004                     	org	3145732
  2575  300004  FF                 	db	255
  2576                           
  2577                           ;Config register CONFIG3H @ 0x300005
  2578                           ;	HFINTOSC Fast Start-up bit
  2579                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2580                           ;	MCLR Pin Enable bit
  2581                           ;	MCLRE = ON, MCLR pin enabled, RA3 input pin disabled
  2582  300005                     	org	3145733
  2583  300005  88                 	db	136
  2584                           
  2585                           ;Config register CONFIG4L @ 0x300006
  2586                           ;	Stack Full/Underflow Reset Enable bit
  2587                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2588                           ;	Single-Supply ICSP Enable bit
  2589                           ;	LVP = OFF, Single-Supply ICSP disabled
  2590                           ;	Boot Block Size Select bit
  2591                           ;	BBSIZ = OFF, 1kW boot block size
  2592                           ;	Extended Instruction Set Enable bit
  2593                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2594                           ;	Background Debugger Enable bit
  2595                           ;	DEBUG = 0x1, unprogrammed default
  2596  300006                     	org	3145734
  2597  300006  81                 	db	129
  2598                           
  2599                           ; Padding undefined space
  2600  300007                     	org	3145735
  2601  300007  FF                 	db	255
  2602                           
  2603                           ;Config register CONFIG5L @ 0x300008
  2604                           ;	Code Protection bit
  2605                           ;	CP0 = OFF, Block 0 not code-protected
  2606                           ;	Code Protection bit
  2607                           ;	CP1 = OFF, Block 1 not code-protected
  2608  300008                     	org	3145736
  2609  300008  03                 	db	3
  2610                           
  2611                           ;Config register CONFIG5H @ 0x300009
  2612                           ;	Boot Block Code Protection bit
  2613                           ;	CPB = OFF, Boot block not code-protected
  2614                           ;	Data EEPROM Code Protection bit
  2615                           ;	CPD = OFF, Data EEPROM not code-protected
  2616  300009                     	org	3145737
  2617  300009  C0                 	db	192
  2618                           
  2619                           ;Config register CONFIG6L @ 0x30000A
  2620                           ;	Write Protection bit
  2621                           ;	WRT0 = OFF, Block 0 not write-protected
  2622                           ;	Write Protection bit
  2623                           ;	WRT1 = OFF, Block 1 not write-protected
  2624  30000A                     	org	3145738
  2625  30000A  03                 	db	3
  2626                           
  2627                           ;Config register CONFIG6H @ 0x30000B
  2628                           ;	Configuration Register Write Protection bit
  2629                           ;	WRTC = OFF, Configuration registers not write-protected
  2630                           ;	Boot Block Write Protection bit
  2631                           ;	WRTB = OFF, Boot block not write-protected
  2632                           ;	Data EEPROM Write Protection bit
  2633                           ;	WRTD = OFF, Data EEPROM not write-protected
  2634  30000B                     	org	3145739
  2635  30000B  E0                 	db	224
  2636                           
  2637                           ;Config register CONFIG7L @ 0x30000C
  2638                           ;	Table Read Protection bit
  2639                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  2640                           ;	Table Read Protection bit
  2641                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  2642  30000C                     	org	3145740
  2643  30000C  03                 	db	3
  2644                           
  2645                           ;Config register CONFIG7H @ 0x30000D
  2646                           ;	Boot Block Table Read Protection bit
  2647                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  2648  30000D                     	org	3145741
  2649  30000D  40                 	db	64
  2650                           tosu	equ	0xFFF
  2651                           tosh	equ	0xFFE
  2652                           tosl	equ	0xFFD
  2653                           stkptr	equ	0xFFC
  2654                           pclatu	equ	0xFFB
  2655                           pclath	equ	0xFFA
  2656                           pcl	equ	0xFF9
  2657                           tblptru	equ	0xFF8
  2658                           tblptrh	equ	0xFF7
  2659                           tblptrl	equ	0xFF6
  2660                           tablat	equ	0xFF5
  2661                           prodh	equ	0xFF4
  2662                           prodl	equ	0xFF3
  2663                           indf0	equ	0xFEF
  2664                           postinc0	equ	0xFEE
  2665                           postdec0	equ	0xFED
  2666                           preinc0	equ	0xFEC
  2667                           plusw0	equ	0xFEB
  2668                           fsr0h	equ	0xFEA
  2669                           fsr0l	equ	0xFE9
  2670                           wreg	equ	0xFE8
  2671                           indf1	equ	0xFE7
  2672                           postinc1	equ	0xFE6
  2673                           postdec1	equ	0xFE5
  2674                           preinc1	equ	0xFE4
  2675                           plusw1	equ	0xFE3
  2676                           fsr1h	equ	0xFE2
  2677                           fsr1l	equ	0xFE1
  2678                           bsr	equ	0xFE0
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           postdec2	equ	0xFDD
  2682                           preinc2	equ	0xFDC
  2683                           plusw2	equ	0xFDB
  2684                           fsr2h	equ	0xFDA
  2685                           fsr2l	equ	0xFD9
  2686                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    512
    Data        1
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      37
    BANK0           160      0      64
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_sendChangedChannels
    _sendChangedChannels->_pcaSetChannelLog
    _pcaSetChannelLog->_pcaSetChannelRaw
    _pcaSetChannelRaw->_getLookup
    _pcaSetChannelRaw->_pcaGetAddress
    _pcaInit->_pcaWakeUp
    _pcaWakeUp->_pcaGetAddress

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_handleDMX
    _handleDMX->_setChannelLevel

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1319
              _decrementDataWatchdog
           _decrementFramingWatchdog
            _decrementSignalWatchdog
                            _i2cInit
                       _initChannels
                            _initDMX
                       _initHardware
                            _pcaInit
                          _pcaWakeUp
                           _resetDMX
                _sendChangedChannels
 ---------------------------------------------------------------------------------
 (1) _sendChangedChannels                                  4     4      0    1027
                                             20 COMRAM     4     4      0
                   _pcaSetChannelLog
 ---------------------------------------------------------------------------------
 (2) _pcaSetChannelLog                                     3     1      2     801
                                             17 COMRAM     3     1      2
                          _getLookup
                   _pcaSetChannelRaw
 ---------------------------------------------------------------------------------
 (3) _pcaSetChannelRaw                                     4     1      3     435
                                             13 COMRAM     4     1      3
                          _getLookup (ARG)
                            _i2cSend
                           _i2cStart
                            _i2cStop
                      _pcaGetAddress
 ---------------------------------------------------------------------------------
 (3) _getLookup                                            3     1      2      22
                                             10 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _resetDMX                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pcaInit                                              1     1      0     112
                                             14 COMRAM     1     1      0
                          _pcaWakeUp
 ---------------------------------------------------------------------------------
 (1) _pcaWakeUp                                            1     1      0      90
                                             13 COMRAM     1     1      0
                            _i2cSend
                           _i2cStart
                            _i2cStop
                      _pcaGetAddress
 ---------------------------------------------------------------------------------
 (4) _pcaGetAddress                                        3     3      0      46
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _i2cStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2cStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2cSend                                              1     1      0      22
                                             10 COMRAM     1     1      0
                            _i2cWait
 ---------------------------------------------------------------------------------
 (5) _i2cWait                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHardware                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDMX                                              0     0      0       0
                  _getDMXBaseAddress
 ---------------------------------------------------------------------------------
 (2) _getDMXBaseAddress                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initChannels                                         1     1      0      90
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2cInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementSignalWatchdog                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementFramingWatchdog                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementDataWatchdog                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                              1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             4     4      0     298
                                              5 COMRAM     4     4      0
                          _handleDMX
 ---------------------------------------------------------------------------------
 (8) _handleDMX                                            2     2      0     298
                                              3 COMRAM     2     2      0
                  _resetDataWatchdog
               _resetFramingWatchdog
                _resetSignalWatchdog
                    _setChannelLevel
 ---------------------------------------------------------------------------------
 (9) _setChannelLevel                                      3     2      1     208
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (9) _resetSignalWatchdog                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _resetFramingWatchdog                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _resetDataWatchdog                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _decrementDataWatchdog
   _decrementFramingWatchdog
   _decrementSignalWatchdog
   _i2cInit
   _initChannels
   _initDMX
     _getDMXBaseAddress
   _initHardware
   _pcaInit
     _pcaWakeUp
       _i2cSend
         _i2cWait
       _i2cStart
       _i2cStop
       _pcaGetAddress
   _pcaWakeUp
   _resetDMX
   _sendChangedChannels
     _pcaSetChannelLog
       _getLookup
       _pcaSetChannelRaw
         _getLookup (ARG)
         _i2cSend (ARG)
         _i2cStart (ARG)
         _i2cStop (ARG)
         _pcaGetAddress (ARG)

 _low_isr (ROOT)

 _high_isr (ROOT)
   _handleDMX
     _resetDataWatchdog
     _resetFramingWatchdog
     _resetSignalWatchdog
     _setChannelLevel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      40       4       40.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      25       1       39.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      65       7        0.0%
DATA                 0      0      65       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Feb 05 08:24:44 2022

                       i2cSend@dat 000B                                 _BF 007E38  
                               bsr 000FE0            __end_of_setChannelLevel 01EE  
                              l106 03AA                                l116 037A  
                              l126 03BE                                l303 00DA  
                              l304 00DC                                l227 03DA  
                              l195 041E                                l189 0426  
                              wreg 000FE8                               l1403 033C  
                             l1455 0266                               l1481 0146  
                             l1483 0160                               l1467 010A  
                             l1477 013E                               l1581 00F4  
                             l1559 00D2                               _CREN 007D5C  
                             _FERR 007D5A                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _PEIE 007F96                               _OERR 007D59  
                             _SYNC 007D64                        _bI2CTimeout 0020  
                             _main 00A2               _resetFramingWatchdog 03F2  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 0026  
                             prodh 000FF4                               prodl 000FF3  
             setChannelLevel@level 0001                               start 0026  
                     ___param_bank 000000                    __end_of_i2cInit 0398  
                  __end_of_i2cSend 03E4                    __end_of_i2cWait 03D4  
                  __end_of_i2cStop 0424       __size_of_resetSignalWatchdog 000A  
                  ??_pcaGetAddress 000B                              ?_main 0001  
                            _ANSEL 000F7E                              i2l247 02AA  
                            _RCREG 000FAE                              _PORTA 000F80  
                            _PORTB 000F81                              _PORTC 000F82  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                       pcaInit@which 000F  
                  __end_of_pcaInit 0408                    __end_of_initDMX 02EA  
                  __end_of_low_isr 0026                              tablat 000FF5  
            ?_resetFramingWatchdog 0001                              ttemp5 0027  
                            ttemp6 002A                              ttemp7 002E  
                            status 000FD8                              wtemp8 0027  
                    ?_initChannels 0001                      ?_initHardware 0001  
                  __initialization 022A                       __end_of_main 0106  
                 __end_of_i2cStart 042C                   ?_setChannelLevel 0001  
                           ??_main 0019     __size_of_decrementDataWatchdog 0016  
                    __activetblptr 000002      __end_of_decrementDataWatchdog 03AE  
                           _ANSELH 000F7F                             i2l1511 0068  
                           i2l1503 0056                             i2l1433 01B8  
                           i2l1523 0094                             i2l1499 0050  
                   ??_initChannels 000B                             _SPBRG1 000FAF  
                           _SPBRGH 000FB0                             _SSPADD 000FC8  
                           _SSPBUF 000FC9                          ??_i2cInit 000B  
                        ??_i2cSend 000B                          ??_i2cWait 000B  
                        ??_i2cStop 000B                     ??_initHardware 000B  
      __end_of_sendChangedChannels 016A                   __end_of_high_isr 02BE  
         __end_of_pcaSetChannelLog 0366           __end_of_pcaSetChannelRaw 022A  
                           clear_0 0242                             clear_1 024E  
                           _lookup 3DFF                             isa$std 000001  
                        ??_pcaInit 000F                          ??_initDMX 000B  
                 __end_of_resetDMX 03F2             setChannelLevel@channel 0003  
                     __pdataCOMRAM 0025   __size_of_decrementSignalWatchdog 001A  
                     __mediumconst 3DFE                          ??_low_isr 000A  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8             ??_resetFramingWatchdog 0001  
                       __accesstop 0060            __end_of__initialization 0254  
                     _dataWatchdog 001D                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001                  _pcaGetAddress$943 000C  
               __size_of_handleDMX 0078           _decrementFramingWatchdog 03AE  
               __size_of_getLookup 0020                      _currentAdress 0023  
              _resetSignalWatchdog 0408                 __size_of_pcaWakeUp 0022  
                       __pbssBANK0 0060                          ?_i2cStart 0001  
             ?_resetSignalWatchdog 0001                            _CM1CON0 000F6D  
                          _CM2CON0 000F6B               __end_of_initChannels 0290  
             __end_of_initHardware 01AE                            _SSPCON1 000FC6  
                          _SSPCON2 000FC5                          ?_high_isr 0001  
                          _SSPSTAT 000FC7                         ??_i2cStart 000B  
                          _i2cInit 0380                            _i2cSend 03D4  
                          _i2cWait 03C2                            _i2cStop 041C  
                __end_of_handleDMX 00A2                  __end_of_getLookup 032C  
                          __Hparam 0000                          ?_resetDMX 0001  
                          __Lparam 0000              ??_resetSignalWatchdog 0001  
                __end_of_pcaWakeUp 030C            pcaSetChannelLog@channel 0012  
                          __pcinit 022A                            __ramtop 0200  
                          __ptext0 00A2                            __ptext1 0106  
                          __ptext2 034A                            __ptext3 01EE  
                          __ptext4 030C                            __ptext5 03E4  
                          __ptext6 03FE                            __ptext7 02EA  
                          __ptext8 032C                            __ptext9 041C  
                          _pcaInit 03FE              __end_of_pcaGetAddress 034A  
          _decrementSignalWatchdog 0366                            _initDMX 02BE  
                          _low_isr 0018                         ??_high_isr 0006  
                   _signalWatchdog 001B                     __pintcode_body 0290  
             end_of_initialization 0254                      __Lmediumconst 3DFE  
                          int_func 0290                         ??_resetDMX 000B  
          pcaSetChannelRaw@channel 000E                  _resetDataWatchdog 0412  
                          postinc0 000FEE                            postinc2 000FDE  
                       _topAddress 0021                 ?_resetDataWatchdog 0001  
                ?_pcaSetChannelLog 0012                  ?_pcaSetChannelRaw 000E  
               ??_pcaSetChannelLog 0014                 ??_pcaSetChannelRaw 0011  
              ??_resetDataWatchdog 0001                          _TRISBbits 000F93  
            _decrementDataWatchdog 0398           __size_of_setChannelLevel 0040  
        __end_of_resetDataWatchdog 041C         ??_decrementFramingWatchdog 000B  
            __size_of_initChannels 002E          ??_decrementSignalWatchdog 000B  
                      _BAUDCONbits 000FB8                      __pidataCOMRAM 0434  
            __size_of_initHardware 0044       __size_of_sendChangedChannels 0064  
                   __end_of_lookup 3FFF                start_initialization 022A  
                      _baseAddress 0022                  handleDMX@eFraming 0004  
    __size_of_resetFramingWatchdog 000C                       _initChannels 0262  
                __size_of_i2cStart 0008                       _initHardware 016A  
                   pcaWakeUp@which 000E                      initChannels@i 000B  
        sendChangedChannels@device 0016             ?_decrementDataWatchdog 0001  
                      __pbssCOMRAM 0019                  handleDMX@received 0005  
  __end_of_decrementSignalWatchdog 0380                       _errorCounter 001F  
                __size_of_high_isr 02B6                  ??_setChannelLevel 0002  
                         ?_i2cInit 0001                           ?_i2cSend 0001  
                         ?_i2cWait 0001                    _bAllChannelsOff 0025  
                         ?_i2cStop 0001         __size_of_resetDataWatchdog 000A  
                        __pintcode 0008                          _handleDMX 002A  
                    __pmediumconst 3DFE                  __size_of_resetDMX 000E  
                        _getLookup 030C                        __pintcodelo 0018  
                         ?_pcaInit 0001                          _pcaWakeUp 02EA  
                         ?_initDMX 0001                           ?_low_isr 0001  
      __end_of_resetSignalWatchdog 0412               sendChangedChannels@i 0018  
                         _LATAbits 000F89                           _LATCbits 000F8B  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
                   getLookup@value 000D                           _PIR1bits 000F9E  
 __end_of_decrementFramingWatchdog 03C2                           _RCONbits 000FD0  
                       ?_handleDMX 0001                         ?_getLookup 000B  
                       ?_pcaWakeUp 0001                  _getDMXBaseAddress 042C  
               ?_getDMXBaseAddress 0001                           _i2cStart 0424  
        __size_of_pcaSetChannelLog 001C          __size_of_pcaSetChannelRaw 003C  
              _sendChangedChannels 0106                 pcaGetAddress@which 000B  
                 __size_of_i2cInit 0018                   __size_of_i2cSend 0010  
                 __size_of_i2cWait 0012             __size_of_pcaGetAddress 001E  
              ??_getDMXBaseAddress 000B                   __size_of_i2cStop 0008  
                         __Hrparam 0000                           __Lrparam 0000  
             ?_sendChangedChannels 0001                   __size_of_pcaInit 000A  
                 __size_of_initDMX 002C          __end_of_getDMXBaseAddress 0434  
                         _channels 0060                   __size_of_low_isr 000E  
                         __ptext10 0424                           __ptext11 03D4  
                         __ptext20 0398                           __ptext12 03C2  
                         __ptext13 016A                           __ptext14 02BE  
                         __ptext23 002A                           __ptext15 042C  
                         __ptext24 01AE                           __ptext16 0262  
                         __ptext25 0408                           __ptext17 0380  
                         __ptext26 03F2                           __ptext18 0366  
                         __ptext27 0412                           __ptext19 03AE  
       sendChangedChannels@channel 0017                           _high_isr 0008  
                         _dmxState 0024                      __size_of_main 0064  
            pcaSetChannelLog@value 0013              pcaSetChannelLog@which 0014  
                         _resetDMX 03E4              pcaSetChannelRaw@level 000F  
                         isa$xinst 000000                        ??_handleDMX 0004  
            pcaSetChannelRaw@which 0011                           int$flags 0026  
                      ??_getLookup 000D       __end_of_resetFramingWatchdog 03FE  
          ??_decrementDataWatchdog 000B              ??_sendChangedChannels 0015  
                      ??_pcaWakeUp 000E                      _pcaGetAddress 032C  
                      _OSCTUNEbits 000F9B                         _INTCONbits 000FF2  
                  _setChannelLevel 01AE  __size_of_decrementFramingWatchdog 0014  
        ?_decrementFramingWatchdog 0001                           intlevel1 0000  
                         intlevel2 0000               _framingErrorWatchdog 0019  
                       _RCSTA1bits 000FAB                         _OSCCONbits 000FD3  
         ?_decrementSignalWatchdog 0001                     ?_pcaGetAddress 0001  
       __size_of_getDMXBaseAddress 0008                        _SSPCON1bits 000FC6  
                      _SSPCON2bits 000FC5                   _pcaSetChannelLog 034A  
                 _pcaSetChannelRaw 01EE  
