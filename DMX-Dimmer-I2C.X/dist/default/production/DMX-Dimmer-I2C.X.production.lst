

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 27 21:19:12 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.45
    47                           ; Generated 16/11/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F14K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  0005A8                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _bAllChannelsOff
    86  0005A8  01                 	db	1
    87                           
    88                           	psect	mediumconst
    89  003DFE                     __pmediumconst:
    90                           	opt stack 0
    91  003DFE  00                 	db	0
    92  003DFF                     _lookup:
    93                           	opt stack 0
    94  003DFF  0000               	dw	0
    95  003E01  0001               	dw	1
    96  003E03  0002               	dw	2
    97  003E05  0003               	dw	3
    98  003E07  0004               	dw	4
    99  003E09  0005               	dw	5
   100  003E0B  0006               	dw	6
   101  003E0D  0007               	dw	7
   102  003E0F  0008               	dw	8
   103  003E11  0009               	dw	9
   104  003E13  000A               	dw	10
   105  003E15  000B               	dw	11
   106  003E17  000C               	dw	12
   107  003E19  000D               	dw	13
   108  003E1B  000E               	dw	14
   109  003E1D  000F               	dw	15
   110  003E1F  0010               	dw	16
   111  003E21  0012               	dw	18
   112  003E23  0013               	dw	19
   113  003E25  0014               	dw	20
   114  003E27  0015               	dw	21
   115  003E29  0017               	dw	23
   116  003E2B  0018               	dw	24
   117  003E2D  0019               	dw	25
   118  003E2F  001A               	dw	26
   119  003E31  001C               	dw	28
   120  003E33  001D               	dw	29
   121  003E35  001F               	dw	31
   122  003E37  0020               	dw	32
   123  003E39  0021               	dw	33
   124  003E3B  0023               	dw	35
   125  003E3D  0024               	dw	36
   126  003E3F  0026               	dw	38
   127  003E41  0028               	dw	40
   128  003E43  0029               	dw	41
   129  003E45  002B               	dw	43
   130  003E47  002C               	dw	44
   131  003E49  002E               	dw	46
   132  003E4B  0030               	dw	48
   133  003E4D  0031               	dw	49
   134  003E4F  0033               	dw	51
   135  003E51  0035               	dw	53
   136  003E53  0037               	dw	55
   137  003E55  0039               	dw	57
   138  003E57  003B               	dw	59
   139  003E59  003C               	dw	60
   140  003E5B  003E               	dw	62
   141  003E5D  0040               	dw	64
   142  003E5F  0042               	dw	66
   143  003E61  0044               	dw	68
   144  003E63  0047               	dw	71
   145  003E65  0049               	dw	73
   146  003E67  004B               	dw	75
   147  003E69  004D               	dw	77
   148  003E6B  004F               	dw	79
   149  003E6D  0052               	dw	82
   150  003E6F  0054               	dw	84
   151  003E71  0056               	dw	86
   152  003E73  0059               	dw	89
   153  003E75  005B               	dw	91
   154  003E77  005E               	dw	94
   155  003E79  0060               	dw	96
   156  003E7B  0063               	dw	99
   157  003E7D  0065               	dw	101
   158  003E7F  0068               	dw	104
   159  003E81  006B               	dw	107
   160  003E83  006D               	dw	109
   161  003E85  0070               	dw	112
   162  003E87  0073               	dw	115
   163  003E89  0076               	dw	118
   164  003E8B  0079               	dw	121
   165  003E8D  007C               	dw	124
   166  003E8F  007F               	dw	127
   167  003E91  0082               	dw	130
   168  003E93  0085               	dw	133
   169  003E95  0088               	dw	136
   170  003E97  008C               	dw	140
   171  003E99  008F               	dw	143
   172  003E9B  0092               	dw	146
   173  003E9D  0096               	dw	150
   174  003E9F  0099               	dw	153
   175  003EA1  009D               	dw	157
   176  003EA3  00A0               	dw	160
   177  003EA5  00A4               	dw	164
   178  003EA7  00A8               	dw	168
   179  003EA9  00AC               	dw	172
   180  003EAB  00AF               	dw	175
   181  003EAD  00B3               	dw	179
   182  003EAF  00B7               	dw	183
   183  003EB1  00BB               	dw	187
   184  003EB3  00C0               	dw	192
   185  003EB5  00C4               	dw	196
   186  003EB7  00C8               	dw	200
   187  003EB9  00CC               	dw	204
   188  003EBB  00D1               	dw	209
   189  003EBD  00D5               	dw	213
   190  003EBF  00DA               	dw	218
   191  003EC1  00DF               	dw	223
   192  003EC3  00E3               	dw	227
   193  003EC5  00E8               	dw	232
   194  003EC7  00ED               	dw	237
   195  003EC9  00F2               	dw	242
   196  003ECB  00F7               	dw	247
   197  003ECD  00FC               	dw	252
   198  003ECF  0102               	dw	258
   199  003ED1  0107               	dw	263
   200  003ED3  010D               	dw	269
   201  003ED5  0112               	dw	274
   202  003ED7  0118               	dw	280
   203  003ED9  011E               	dw	286
   204  003EDB  0123               	dw	291
   205  003EDD  0129               	dw	297
   206  003EDF  012F               	dw	303
   207  003EE1  0136               	dw	310
   208  003EE3  013C               	dw	316
   209  003EE5  0142               	dw	322
   210  003EE7  0149               	dw	329
   211  003EE9  014F               	dw	335
   212  003EEB  0156               	dw	342
   213  003EED  015D               	dw	349
   214  003EEF  0164               	dw	356
   215  003EF1  016B               	dw	363
   216  003EF3  0172               	dw	370
   217  003EF5  0179               	dw	377
   218  003EF7  0181               	dw	385
   219  003EF9  0188               	dw	392
   220  003EFB  0190               	dw	400
   221  003EFD  0198               	dw	408
   222  003EFF  01A0               	dw	416
   223  003F01  01A8               	dw	424
   224  003F03  01B0               	dw	432
   225  003F05  01B9               	dw	441
   226  003F07  01C1               	dw	449
   227  003F09  01CA               	dw	458
   228  003F0B  01D3               	dw	467
   229  003F0D  01DC               	dw	476
   230  003F0F  01E5               	dw	485
   231  003F11  01EE               	dw	494
   232  003F13  01F7               	dw	503
   233  003F15  0201               	dw	513
   234  003F17  020B               	dw	523
   235  003F19  0215               	dw	533
   236  003F1B  021F               	dw	543
   237  003F1D  0229               	dw	553
   238  003F1F  0234               	dw	564
   239  003F21  023E               	dw	574
   240  003F23  0249               	dw	585
   241  003F25  0254               	dw	596
   242  003F27  0260               	dw	608
   243  003F29  026B               	dw	619
   244  003F2B  0277               	dw	631
   245  003F2D  0282               	dw	642
   246  003F2F  028F               	dw	655
   247  003F31  029B               	dw	667
   248  003F33  02A7               	dw	679
   249  003F35  02B4               	dw	692
   250  003F37  02C1               	dw	705
   251  003F39  02CE               	dw	718
   252  003F3B  02DB               	dw	731
   253  003F3D  02E9               	dw	745
   254  003F3F  02F7               	dw	759
   255  003F41  0305               	dw	773
   256  003F43  0313               	dw	787
   257  003F45  0321               	dw	801
   258  003F47  0330               	dw	816
   259  003F49  033F               	dw	831
   260  003F4B  034F               	dw	847
   261  003F4D  035E               	dw	862
   262  003F4F  036E               	dw	878
   263  003F51  037E               	dw	894
   264  003F53  038F               	dw	911
   265  003F55  039F               	dw	927
   266  003F57  03B0               	dw	944
   267  003F59  03C1               	dw	961
   268  003F5B  03D3               	dw	979
   269  003F5D  03E5               	dw	997
   270  003F5F  03F7               	dw	1015
   271  003F61  040A               	dw	1034
   272  003F63  041C               	dw	1052
   273  003F65  0430               	dw	1072
   274  003F67  0443               	dw	1091
   275  003F69  0457               	dw	1111
   276  003F6B  046B               	dw	1131
   277  003F6D  047F               	dw	1151
   278  003F6F  0494               	dw	1172
   279  003F71  04AA               	dw	1194
   280  003F73  04BF               	dw	1215
   281  003F75  04D5               	dw	1237
   282  003F77  04EB               	dw	1259
   283  003F79  0502               	dw	1282
   284  003F7B  0519               	dw	1305
   285  003F7D  0531               	dw	1329
   286  003F7F  0549               	dw	1353
   287  003F81  0561               	dw	1377
   288  003F83  057A               	dw	1402
   289  003F85  0593               	dw	1427
   290  003F87  05AD               	dw	1453
   291  003F89  05C7               	dw	1479
   292  003F8B  05E1               	dw	1505
   293  003F8D  05FC               	dw	1532
   294  003F8F  0618               	dw	1560
   295  003F91  0634               	dw	1588
   296  003F93  0650               	dw	1616
   297  003F95  066D               	dw	1645
   298  003F97  068A               	dw	1674
   299  003F99  06A8               	dw	1704
   300  003F9B  06C7               	dw	1735
   301  003F9D  06E6               	dw	1766
   302  003F9F  0705               	dw	1797
   303  003FA1  0725               	dw	1829
   304  003FA3  0746               	dw	1862
   305  003FA5  0767               	dw	1895
   306  003FA7  0789               	dw	1929
   307  003FA9  07AB               	dw	1963
   308  003FAB  07CE               	dw	1998
   309  003FAD  07F2               	dw	2034
   310  003FAF  0816               	dw	2070
   311  003FB1  083B               	dw	2107
   312  003FB3  0860               	dw	2144
   313  003FB5  0886               	dw	2182
   314  003FB7  08AD               	dw	2221
   315  003FB9  08D4               	dw	2260
   316  003FBB  08FC               	dw	2300
   317  003FBD  0925               	dw	2341
   318  003FBF  094E               	dw	2382
   319  003FC1  0979               	dw	2425
   320  003FC3  09A4               	dw	2468
   321  003FC5  09CF               	dw	2511
   322  003FC7  09FC               	dw	2556
   323  003FC9  0A29               	dw	2601
   324  003FCB  0A57               	dw	2647
   325  003FCD  0A86               	dw	2694
   326  003FCF  0AB5               	dw	2741
   327  003FD1  0AE6               	dw	2790
   328  003FD3  0B17               	dw	2839
   329  003FD5  0B49               	dw	2889
   330  003FD7  0B7C               	dw	2940
   331  003FD9  0BB0               	dw	2992
   332  003FDB  0BE4               	dw	3044
   333  003FDD  0C1A               	dw	3098
   334  003FDF  0C51               	dw	3153
   335  003FE1  0C88               	dw	3208
   336  003FE3  0CC1               	dw	3265
   337  003FE5  0CFA               	dw	3322
   338  003FE7  0D35               	dw	3381
   339  003FE9  0D70               	dw	3440
   340  003FEB  0DAD               	dw	3501
   341  003FED  0DEA               	dw	3562
   342  003FEF  0E29               	dw	3625
   343  003FF1  0E69               	dw	3689
   344  003FF3  0EAA               	dw	3754
   345  003FF5  0EEC               	dw	3820
   346  003FF7  0F2F               	dw	3887
   347  003FF9  0F73               	dw	3955
   348  003FFB  0FB8               	dw	4024
   349  003FFD  0FFF               	dw	4095
   350  003FFF                     __end_of_lookup:
   351                           	opt stack 0
   352  0000                     _INTCONbits	set	4082
   353  0000                     _RCONbits	set	4048
   354  0000                     _PIR1bits	set	3998
   355  0000                     _SSPSTATbits	set	4039
   356  0000                     _SSPBUF	set	4041
   357  0000                     _SSPCON2	set	4037
   358  0000                     _SSPCON2bits	set	4037
   359  0000                     _SSPSTAT	set	4039
   360  0000                     _SSPCON1	set	4038
   361  0000                     _SSPADD	set	4040
   362  0000                     _SSPCON1bits	set	4038
   363  0000                     _TRISBbits	set	3987
   364  0000                     _TRISC	set	3988
   365  0000                     _LATC	set	3979
   366  0000                     _TRISB	set	3987
   367  0000                     _LATB	set	3978
   368  0000                     _PORTB	set	3969
   369  0000                     _TRISA	set	3986
   370  0000                     _PORTA	set	3968
   371  0000                     _LATA	set	3977
   372  0000                     _ANSELH	set	3967
   373  0000                     _ANSEL	set	3966
   374  0000                     _CM2CON0	set	3947
   375  0000                     _CM1CON0	set	3949
   376  0000                     _OSCTUNEbits	set	3995
   377  0000                     _OSCCONbits	set	4051
   378  0000                     _LATCbits	set	3979
   379  0000                     _RCREG	set	4014
   380  0000                     _PORTC	set	3970
   381  0000                     _IPR1bits	set	3999
   382  0000                     _PIE1bits	set	3997
   383  0000                     _RCSTA1bits	set	4011
   384  0000                     _SPBRGH	set	4016
   385  0000                     _SPBRG1	set	4015
   386  0000                     _BAUDCONbits	set	4024
   387  0000                     _CREN	set	32092
   388  0000                     _OERR	set	32089
   389  0000                     _PEIE	set	32662
   390  0000                     _BF	set	32312
   391  0000                     _FERR	set	32090
   392  0000                     _SYNC	set	32100
   393                           
   394                           ; #config settings
   395  003FFF  00                 	db	0	; dummy byte at the end
   396  0000                     
   397                           	psect	cinit
   398  0003E2                     __pcinit:
   399                           	opt stack 0
   400  0003E2                     start_initialization:
   401                           	opt stack 0
   402  0003E2                     __initialization:
   403                           	opt stack 0
   404                           
   405                           ; Initialize objects allocated to COMRAM (1 bytes)
   406                           ; load TBLPTR registers with __pidataCOMRAM
   407  0003E2  0EA8               	movlw	low __pidataCOMRAM
   408  0003E4  6EF6               	movwf	tblptrl,c
   409  0003E6  0E05               	movlw	high __pidataCOMRAM
   410  0003E8  6EF7               	movwf	tblptrh,c
   411  0003EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   412  0003EC  6EF8               	movwf	tblptru,c
   413  0003EE  0009               	tblrd		*+	;fetch initializer
   414  0003F0  CFF5 F039          	movff	tablat,__pdataCOMRAM
   415                           
   416                           ; Clear objects allocated to BANK0 (64 bytes)
   417  0003F4  EE00  F060         	lfsr	0,__pbssBANK0
   418  0003F8  0E40               	movlw	64
   419  0003FA                     clear_0:
   420  0003FA  6AEE               	clrf	postinc0,c
   421  0003FC  06E8               	decf	wreg,f,c
   422  0003FE  E1FD               	bnz	clear_0
   423                           
   424                           ; Clear objects allocated to COMRAM (12 bytes)
   425  000400  EE00  F02D         	lfsr	0,__pbssCOMRAM
   426  000404  0E0C               	movlw	12
   427  000406                     clear_1:
   428  000406  6AEE               	clrf	postinc0,c
   429  000408  06E8               	decf	wreg,f,c
   430  00040A  E1FD               	bnz	clear_1
   431  00040C                     end_of_initialization:
   432                           	opt stack 0
   433  00040C                     __end_of__initialization:
   434                           	opt stack 0
   435  00040C  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   436  00040E  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   437  000410  0E00               	movlw	low (__Lmediumconst shr (0+16))
   438  000412  6EF8               	movwf	tblptru,c
   439  000414  0100               	movlb	0
   440  000416  EF5E  F001         	goto	_main	;jump to C main() function
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           
   448                           	psect	bssCOMRAM
   449  00002D                     __pbssCOMRAM:
   450                           	opt stack 0
   451  00002D                     _framingErrorWatchdog:
   452                           	opt stack 0
   453  00002D                     	ds	2
   454  00002F                     _signalWatchdog:
   455                           	opt stack 0
   456  00002F                     	ds	2
   457  000031                     _dataWatchdog:
   458                           	opt stack 0
   459  000031                     	ds	2
   460  000033                     _errorCounter:
   461                           	opt stack 0
   462  000033                     	ds	1
   463  000034                     _bI2CTimeout:
   464                           	opt stack 0
   465  000034                     	ds	1
   466  000035                     _topAddress:
   467                           	opt stack 0
   468  000035                     	ds	1
   469  000036                     _baseAddress:
   470                           	opt stack 0
   471  000036                     	ds	1
   472  000037                     _currentAdress:
   473                           	opt stack 0
   474  000037                     	ds	1
   475  000038                     _dmxState:
   476                           	opt stack 0
   477  000038                     	ds	1
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           
   485                           	psect	dataCOMRAM
   486  000039                     __pdataCOMRAM:
   487                           	opt stack 0
   488  000039                     _bAllChannelsOff:
   489                           	opt stack 0
   490  000039                     	ds	1
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           
   498                           	psect	bssBANK0
   499  000060                     __pbssBANK0:
   500                           	opt stack 0
   501  000060                     _channels:
   502                           	opt stack 0
   503  000060                     	ds	64
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           
   511                           	psect	cstackBANK0
   512  0000A0                     __pcstackBANK0:
   513                           	opt stack 0
   514  0000A0                     ?_getLookup:
   515                           	opt stack 0
   516  0000A0                     initChannels@i:
   517                           	opt stack 0
   518  0000A0                     i2cSend@dat:
   519                           	opt stack 0
   520  0000A0                     pcaGetAddress@which:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x0
   524  0000A0                     	ds	1
   525  0000A1                     _pcaGetAddress$902:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x1
   529  0000A1                     	ds	1
   530  0000A2                     getLookup@value:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x2
   534  0000A2                     	ds	1
   535  0000A3                     pcaSetChannelRaw@channel:
   536                           	opt stack 0
   537  0000A3                     pcaWakeUp@which:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x3
   541  0000A3                     	ds	1
   542  0000A4                     pcaInit@which:
   543                           	opt stack 0
   544  0000A4                     pcaSetChannelRaw@level:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x4
   548  0000A4                     	ds	2
   549  0000A6                     pcaSetChannelRaw@which:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x6
   553  0000A6                     	ds	1
   554  0000A7                     pcaSetChannelLog@channel:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x7
   558  0000A7                     	ds	1
   559  0000A8                     pcaSetChannelLog@value:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x8
   563  0000A8                     	ds	1
   564  0000A9                     pcaSetChannelLog@which:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x9
   568  0000A9                     	ds	1
   569  0000AA                     
   570                           ; 1 bytes @ 0xA
   571  0000AA                     	ds	1
   572  0000AB                     sendChangedChannels@device:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0xB
   576  0000AB                     	ds	1
   577  0000AC                     sendChangedChannels@channel:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0xC
   581  0000AC                     	ds	1
   582  0000AD                     sendChangedChannels@i:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0xD
   586  0000AD                     	ds	1
   587  0000AE                     tblptru	equ	0xFF8
   588                           tblptrh	equ	0xFF7
   589                           tblptrl	equ	0xFF6
   590                           tablat	equ	0xFF5
   591                           postinc0	equ	0xFEE
   592                           wreg	equ	0xFE8
   593                           
   594                           ; 1 bytes @ 0xE
   595                           
   596                           	psect	cstackCOMRAM
   597  000001                     __pcstackCOMRAM:
   598                           	opt stack 0
   599  000001                     setChannelLevel@level:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x0
   603  000001                     	ds	1
   604  000002                     
   605                           ; 1 bytes @ 0x1
   606  000002                     	ds	1
   607  000003                     setChannelLevel@channel:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x2
   611  000003                     	ds	1
   612  000004                     handleDMX@eFraming:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x3
   616  000004                     	ds	1
   617  000005                     handleDMX@received:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x4
   621  000005                     	ds	1
   622  000006                     ??_high_isr:
   623                           
   624                           ; 1 bytes @ 0x5
   625  000006                     	ds	18
   626  000018                     ??_low_isr:
   627                           
   628                           ; 1 bytes @ 0x17
   629  000018                     	ds	21
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           
   637 ;;
   638 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   639 ;;
   640 ;; *************** function _main *****************
   641 ;; Defined at:
   642 ;;		line 40 in file "main.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1
   656 ;;      Params:         0       0       0
   657 ;;      Locals:         0       0       0
   658 ;;      Temps:          0       0       0
   659 ;;      Totals:         0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels required when called:    9
   662 ;; This function calls:
   663 ;;		_decrementDataWatchdog
   664 ;;		_decrementFramingWatchdog
   665 ;;		_decrementSignalWatchdog
   666 ;;		_i2cInit
   667 ;;		_initChannels
   668 ;;		_initDMX
   669 ;;		_initHardware
   670 ;;		_pcaInit
   671 ;;		_pcaWakeUp
   672 ;;		_resetDMX
   673 ;;		_sendChangedChannels
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text0
   680  0002BC                     __ptext0:
   681                           	opt stack 0
   682  0002BC                     _main:
   683                           	opt stack 22
   684                           
   685                           ;main.c: 42: initHardware();
   686                           
   687                           ;incstack = 0
   688  0002BC  ECAE  F001         	call	_initHardware	;wreg free
   689                           
   690                           ;main.c: 43: initChannels();
   691  0002C0  ECD0  F001         	call	_initChannels	;wreg free
   692                           
   693                           ;main.c: 44: i2cInit();
   694  0002C4  EC77  F002         	call	_i2cInit	;wreg free
   695                           
   696                           ;main.c: 45: pcaInit(0);
   697  0002C8  0E00               	movlw	0
   698  0002CA  ECB1  F002         	call	_pcaInit
   699                           
   700                           ;main.c: 46: pcaInit(1);
   701  0002CE  0E01               	movlw	1
   702  0002D0  ECB1  F002         	call	_pcaInit
   703                           
   704                           ;main.c: 47: initDMX();
   705  0002D4  EC0D  F002         	call	_initDMX	;wreg free
   706                           
   707                           ;main.c: 49: RCONbits.IPEN = 1;
   708  0002D8  8ED0               	bsf	4048,7,c	;volatile
   709                           
   710                           ;main.c: 56: INTCONbits.GIEH = 1;
   711  0002DA  8EF2               	bsf	intcon,7,c	;volatile
   712                           
   713                           ;main.c: 57: INTCONbits.GIEL = 1;
   714  0002DC  8CF2               	bsf	intcon,6,c	;volatile
   715                           
   716                           ;main.c: 58: PEIE = 1;
   717  0002DE  8CF2               	bsf	intcon,6,c	;volatile
   718                           
   719                           ;main.c: 64: pcaWakeUp(0);
   720  0002E0  0E00               	movlw	0
   721  0002E2  EC23  F002         	call	_pcaWakeUp
   722                           
   723                           ;main.c: 65: pcaWakeUp(1);
   724  0002E6  0E01               	movlw	1
   725  0002E8  EC23  F002         	call	_pcaWakeUp
   726  0002EC                     
   727                           ;main.c: 69: if ( OERR ) {
   728  0002EC  A2AB               	btfss	4011,1,c	;volatile
   729  0002EE  D00A               	goto	l301
   730                           
   731                           ;main.c: 70: CREN = 0;
   732  0002F0  98AB               	bcf	4011,4,c	;volatile
   733                           
   734                           ;main.c: 71: resetDMX();
   735  0002F2  ECAA  F002         	call	_resetDMX	;wreg free
   736                           
   737                           ;main.c: 73: __nop(); __nop(); __nop(); __nop(); __nop();
   738  0002F6  F000               	nop	
   739  0002F8  F000               	nop	
   740  0002FA  F000               	nop	
   741  0002FC  F000               	nop	
   742  0002FE  F000               	nop	
   743                           
   744                           ;main.c: 74: OERR = 0;
   745  000300  92AB               	bcf	4011,1,c	;volatile
   746                           
   747                           ;main.c: 75: CREN = 1;
   748  000302  88AB               	bsf	4011,4,c	;volatile
   749  000304                     l301:
   750                           
   751                           ;main.c: 76: }
   752                           ;main.c: 80: sendChangedChannels();
   753  000304  ECB4  F000         	call	_sendChangedChannels	;wreg free
   754                           
   755                           ;main.c: 83: decrementDataWatchdog();
   756  000308  EC83  F002         	call	_decrementDataWatchdog	;wreg free
   757                           
   758                           ;main.c: 84: decrementFramingWatchdog();
   759  00030C  EC8E  F002         	call	_decrementFramingWatchdog	;wreg free
   760                           
   761                           ;main.c: 87: if ( decrementSignalWatchdog() == 1 ) {
   762  000310  EC6A  F002         	call	_decrementSignalWatchdog	;wreg free
   763                           
   764                           ;main.c: 91: }
   765                           ;main.c: 95: }
   766  000314  D7EB               	goto	l300
   767  000316                     __end_of_main:
   768                           	opt stack 0
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           intcon	equ	0xFF2
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           
   777 ;; *************** function _sendChangedChannels *****************
   778 ;; Defined at:
   779 ;;		line 51 in file "channels.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  i               1   13[BANK0 ] unsigned char 
   784 ;;  channel         1   12[BANK0 ] unsigned char 
   785 ;;  device          1   11[BANK0 ] unsigned char 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1
   795 ;;      Params:         0       0       0
   796 ;;      Locals:         0       3       0
   797 ;;      Temps:          0       1       0
   798 ;;      Totals:         0       4       0
   799 ;;Total ram usage:        4 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    8
   802 ;; This function calls:
   803 ;;		_pcaSetChannelLog
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text1
   810  000168                     __ptext1:
   811                           	opt stack 0
   812  000168                     _sendChangedChannels:
   813                           	opt stack 22
   814                           
   815                           ;channels.c: 53: unsigned char i;
   816                           ;channels.c: 54: unsigned char device ;
   817                           ;channels.c: 55: unsigned char channel;
   818                           ;channels.c: 57: for (i = 0; i < 32U; i++ ) {
   819                           
   820                           ;incstack = 0
   821  000168  0E00               	movlw	0
   822  00016A  0100               	movlb	0	; () banked
   823  00016C  6FAD               	movwf	sendChangedChannels@i& (0+255),b
   824  00016E                     l1723:
   825                           
   826                           ; BSR set to: 0
   827  00016E  0E1F               	movlw	31
   828  000170  65AD               	cpfsgt	sendChangedChannels@i& (0+255),b
   829  000172  D001               	goto	l21
   830  000174  0012               	return	
   831  000176                     l21:
   832                           
   833                           ; BSR set to: 0
   834                           ;channels.c: 61: if ( channels[i].bChanged == 1) {
   835                           
   836                           ; BSR set to: 0
   837  000176  51AD               	movf	sendChangedChannels@i& (0+255),w,b
   838  000178  0D02               	mullw	2
   839  00017A  0E60               	movlw	low _channels
   840  00017C  24F3               	addwf	prodl,w,c
   841  00017E  6ED9               	movwf	fsr2l,c
   842  000180  0E00               	movlw	high _channels
   843  000182  20F4               	addwfc	prodh,w,c
   844  000184  6EDA               	movwf	fsr2h,c
   845  000186  04DE               	decf	postinc2,w,c
   846  000188  A4D8               	btfss	status,2,c
   847  00018A  D02A               	goto	l23
   848                           
   849                           ; BSR set to: 0
   850                           ;channels.c: 62: channels[i].bChanged = 0;
   851  00018C  51AD               	movf	sendChangedChannels@i& (0+255),w,b
   852  00018E  0D02               	mullw	2
   853  000190  0E60               	movlw	low _channels
   854  000192  24F3               	addwf	prodl,w,c
   855  000194  6ED9               	movwf	fsr2l,c
   856  000196  0E00               	movlw	high _channels
   857  000198  20F4               	addwfc	prodh,w,c
   858  00019A  6EDA               	movwf	fsr2h,c
   859  00019C  0E00               	movlw	0
   860  00019E  6EDF               	movwf	indf2,c
   861                           
   862                           ; BSR set to: 0
   863                           ;channels.c: 64: if ( i > 15) {
   864  0001A0  0E0F               	movlw	15
   865  0001A2  65AD               	cpfsgt	sendChangedChannels@i& (0+255),b
   866  0001A4  D006               	goto	l24
   867                           
   868                           ; BSR set to: 0
   869                           ;channels.c: 65: device = 1;
   870  0001A6  0E01               	movlw	1
   871  0001A8  6FAB               	movwf	sendChangedChannels@device& (0+255),b
   872                           
   873                           ; BSR set to: 0
   874                           ;channels.c: 66: channel = i - 16U;
   875  0001AA  51AD               	movf	sendChangedChannels@i& (0+255),w,b
   876  0001AC  0FF0               	addlw	240
   877  0001AE  6FAC               	movwf	sendChangedChannels@channel& (0+255),b
   878                           
   879                           ;channels.c: 67: }
   880  0001B0  D004               	goto	l25
   881  0001B2                     l24:
   882                           
   883                           ; BSR set to: 0
   884                           ;channels.c: 68: else {
   885                           ;channels.c: 69: device = 0;
   886                           
   887                           ; BSR set to: 0
   888  0001B2  0E00               	movlw	0
   889  0001B4  6FAB               	movwf	sendChangedChannels@device& (0+255),b
   890                           
   891                           ; BSR set to: 0
   892                           ;channels.c: 70: channel = i;
   893  0001B6  C0AD  F0AC         	movff	sendChangedChannels@i,sendChangedChannels@channel
   894  0001BA                     l25:
   895                           
   896                           ; BSR set to: 0
   897                           ;channels.c: 71: }
   898                           ;channels.c: 73: pcaSetChannelLog(device, channel, channels[i].level);
   899                           
   900                           ; BSR set to: 0
   901  0001BA  C0AC  F0A7         	movff	sendChangedChannels@channel,pcaSetChannelLog@channel
   902  0001BE  51AD               	movf	sendChangedChannels@i& (0+255),w,b
   903  0001C0  0D02               	mullw	2
   904  0001C2  0E01               	movlw	1
   905  0001C4  26F3               	addwf	prodl,f,c
   906  0001C6  0E00               	movlw	0
   907  0001C8  22F4               	addwfc	prodh,f,c
   908  0001CA  0E60               	movlw	low _channels
   909  0001CC  24F3               	addwf	prodl,w,c
   910  0001CE  6ED9               	movwf	fsr2l,c
   911  0001D0  0E00               	movlw	high _channels
   912  0001D2  20F4               	addwfc	prodh,w,c
   913  0001D4  6EDA               	movwf	fsr2h,c
   914  0001D6  50DF               	movf	indf2,w,c
   915  0001D8  6FA8               	movwf	pcaSetChannelLog@value& (0+255),b
   916  0001DA  51AB               	movf	sendChangedChannels@device& (0+255),w,b
   917  0001DC  EC48  F002         	call	_pcaSetChannelLog
   918  0001E0                     l23:
   919  0001E0  0100               	movlb	0	; () banked
   920  0001E2  2BAD               	incf	sendChangedChannels@i& (0+255),f,b
   921  0001E4  D7C4               	goto	l1723
   922  0001E6                     __end_of_sendChangedChannels:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           prodh	equ	0xFF4
   929                           prodl	equ	0xFF3
   930                           intcon	equ	0xFF2
   931                           postinc0	equ	0xFEE
   932                           wreg	equ	0xFE8
   933                           indf2	equ	0xFDF
   934                           postinc2	equ	0xFDE
   935                           fsr2h	equ	0xFDA
   936                           fsr2l	equ	0xFD9
   937                           status	equ	0xFD8
   938                           
   939 ;; *************** function _pcaSetChannelLog *****************
   940 ;; Defined at:
   941 ;;		line 50 in file "pca9685.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  which           1    wreg     unsigned char 
   944 ;;  channel         1    7[BANK0 ] unsigned char 
   945 ;;  value           1    8[BANK0 ] unsigned char 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  which           1    9[BANK0 ] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1
   957 ;;      Params:         0       2       0
   958 ;;      Locals:         0       1       0
   959 ;;      Temps:          0       0       0
   960 ;;      Totals:         0       3       0
   961 ;;Total ram usage:        3 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    7
   964 ;; This function calls:
   965 ;;		_getLookup
   966 ;;		_pcaSetChannelRaw
   967 ;; This function is called by:
   968 ;;		_sendChangedChannels
   969 ;;		_pcaSweepTest
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text2
   974  000490                     __ptext2:
   975                           	opt stack 0
   976  000490                     _pcaSetChannelLog:
   977                           	opt stack 22
   978                           
   979                           ; BSR set to: 0
   980                           ;incstack = 0
   981                           ;pcaSetChannelLog@which stored from wreg
   982  000490  0100               	movlb	0	; () banked
   983  000492  6FA9               	movwf	pcaSetChannelLog@which& (0+255),b
   984                           
   985                           ;pca9685.c: 52: pcaSetChannelRaw(which, channel, getLookup(value));
   986  000494  C0A7  F0A3         	movff	pcaSetChannelLog@channel,pcaSetChannelRaw@channel
   987  000498  0100               	movlb	0	; () banked
   988  00049A  51A8               	movf	pcaSetChannelLog@value& (0+255),w,b
   989  00049C  EC36  F002         	call	_getLookup
   990  0004A0  C0A0  F0A4         	movff	?_getLookup,pcaSetChannelRaw@level
   991  0004A4  C0A1  F0A5         	movff	?_getLookup+1,pcaSetChannelRaw@level+1
   992  0004A8  0100               	movlb	0	; () banked
   993  0004AA  51A9               	movf	pcaSetChannelLog@which& (0+255),w,b
   994  0004AC  EC8B  F001         	call	_pcaSetChannelRaw
   995  0004B0  0012               	return		;funcret
   996  0004B2                     __end_of_pcaSetChannelLog:
   997                           	opt stack 0
   998                           tblptru	equ	0xFF8
   999                           tblptrh	equ	0xFF7
  1000                           tblptrl	equ	0xFF6
  1001                           tablat	equ	0xFF5
  1002                           prodh	equ	0xFF4
  1003                           prodl	equ	0xFF3
  1004                           intcon	equ	0xFF2
  1005                           postinc0	equ	0xFEE
  1006                           wreg	equ	0xFE8
  1007                           indf2	equ	0xFDF
  1008                           postinc2	equ	0xFDE
  1009                           fsr2h	equ	0xFDA
  1010                           fsr2l	equ	0xFD9
  1011                           status	equ	0xFD8
  1012                           
  1013 ;; *************** function _pcaSetChannelRaw *****************
  1014 ;; Defined at:
  1015 ;;		line 32 in file "pca9685.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  which           1    wreg     unsigned char 
  1018 ;;  channel         1    3[BANK0 ] unsigned char 
  1019 ;;  level           2    4[BANK0 ] unsigned int 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  which           1    6[BANK0 ] unsigned char 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1
  1031 ;;      Params:         0       3       0
  1032 ;;      Locals:         0       1       0
  1033 ;;      Temps:          0       0       0
  1034 ;;      Totals:         0       4       0
  1035 ;;Total ram usage:        4 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    6
  1038 ;; This function calls:
  1039 ;;		_i2cSend
  1040 ;;		_i2cStart
  1041 ;;		_i2cStop
  1042 ;;		_pcaGetAddress
  1043 ;; This function is called by:
  1044 ;;		_pcaSetChannelLog
  1045 ;;		_pcaSetChannelLin
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text3
  1050  000316                     __ptext3:
  1051                           	opt stack 0
  1052  000316                     _pcaSetChannelRaw:
  1053                           	opt stack 22
  1054                           
  1055                           ;incstack = 0
  1056                           ;pcaSetChannelRaw@which stored from wreg
  1057  000316  0100               	movlb	0	; () banked
  1058  000318  6FA6               	movwf	pcaSetChannelRaw@which& (0+255),b
  1059                           
  1060                           ;pca9685.c: 34: i2cStart();
  1061  00031A  ECCC  F002         	call	_i2cStart	;wreg free
  1062                           
  1063                           ;pca9685.c: 35: i2cSend(pcaGetAddress(which) );
  1064  00031E  0100               	movlb	0	; () banked
  1065  000320  51A6               	movf	pcaSetChannelRaw@which& (0+255),w,b
  1066  000322  EC59  F002         	call	_pcaGetAddress
  1067  000326  EC98  F002         	call	_i2cSend
  1068                           
  1069                           ;pca9685.c: 36: i2cSend(( channel * 4U ) + 0x06U);
  1070  00032A  0100               	movlb	0	; () banked
  1071  00032C  51A3               	movf	pcaSetChannelRaw@channel& (0+255),w,b
  1072  00032E  0D04               	mullw	4
  1073  000330  50F3               	movf	prodl,w,c
  1074  000332  0F06               	addlw	6
  1075  000334  EC98  F002         	call	_i2cSend
  1076                           
  1077                           ;pca9685.c: 37: i2cSend(0x00);
  1078  000338  0E00               	movlw	0
  1079  00033A  EC98  F002         	call	_i2cSend
  1080                           
  1081                           ;pca9685.c: 38: i2cSend(0x00);
  1082  00033E  0E00               	movlw	0
  1083  000340  EC98  F002         	call	_i2cSend
  1084                           
  1085                           ;pca9685.c: 39: i2cSend((unsigned char)(level & 0xFF));
  1086  000344  0100               	movlb	0	; () banked
  1087  000346  51A4               	movf	pcaSetChannelRaw@level& (0+255),w,b
  1088  000348  EC98  F002         	call	_i2cSend
  1089                           
  1090                           ;pca9685.c: 40: i2cSend((unsigned char)((level >> 8 ) & 0x0F));
  1091  00034C  0100               	movlb	0	; () banked
  1092  00034E  51A5               	movf	(pcaSetChannelRaw@level+1)& (0+255),w,b
  1093  000350  0B0F               	andlw	15
  1094  000352  EC98  F002         	call	_i2cSend
  1095                           
  1096                           ;pca9685.c: 41: i2cStop();
  1097  000356  ECC8  F002         	call	_i2cStop	;wreg free
  1098  00035A  0012               	return		;funcret
  1099  00035C                     __end_of_pcaSetChannelRaw:
  1100                           	opt stack 0
  1101                           tblptru	equ	0xFF8
  1102                           tblptrh	equ	0xFF7
  1103                           tblptrl	equ	0xFF6
  1104                           tablat	equ	0xFF5
  1105                           prodh	equ	0xFF4
  1106                           prodl	equ	0xFF3
  1107                           intcon	equ	0xFF2
  1108                           postinc0	equ	0xFEE
  1109                           wreg	equ	0xFE8
  1110                           indf2	equ	0xFDF
  1111                           postinc2	equ	0xFDE
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _getLookup *****************
  1117 ;; Defined at:
  1118 ;;		line 52 in file "lookuptable.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  value           1    wreg     unsigned char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  value           1    2[BANK0 ] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2    0[BANK0 ] unsigned int 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1
  1132 ;;      Params:         0       2       0
  1133 ;;      Locals:         0       1       0
  1134 ;;      Temps:          0       0       0
  1135 ;;      Totals:         0       3       0
  1136 ;;Total ram usage:        3 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    4
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_pcaSetChannelLog
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text4
  1147  00046C                     __ptext4:
  1148                           	opt stack 0
  1149  00046C                     _getLookup:
  1150                           	opt stack 24
  1151                           
  1152                           ;incstack = 0
  1153                           ;getLookup@value stored from wreg
  1154  00046C  0100               	movlb	0	; () banked
  1155  00046E  6FA2               	movwf	getLookup@value& (0+255),b
  1156                           
  1157                           ;lookuptable.c: 54: return lookup[value];
  1158  000470  0100               	movlb	0	; () banked
  1159  000472  51A2               	movf	getLookup@value& (0+255),w,b
  1160  000474  0D02               	mullw	2
  1161  000476  0EFF               	movlw	low _lookup
  1162  000478  24F3               	addwf	prodl,w,c
  1163  00047A  6EF6               	movwf	tblptrl,c
  1164  00047C  0E3D               	movlw	high _lookup
  1165  00047E  20F4               	addwfc	prodh,w,c
  1166  000480  6EF7               	movwf	tblptrh,c
  1167  000482                     	if	0	;There are less than 3 active tblptr bytes
  1168  000482                     	endif
  1169  000482  0009               	tblrd		*+
  1170  000484  CFF5 F0A0          	movff	tablat,?_getLookup
  1171  000488  000A               	tblrd		*-
  1172  00048A  CFF5 F0A1          	movff	tablat,?_getLookup+1
  1173  00048E  0012               	return	
  1174  000490                     __end_of_getLookup:
  1175                           	opt stack 0
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           prodh	equ	0xFF4
  1181                           prodl	equ	0xFF3
  1182                           intcon	equ	0xFF2
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           indf2	equ	0xFDF
  1186                           postinc2	equ	0xFDE
  1187                           fsr2h	equ	0xFDA
  1188                           fsr2l	equ	0xFD9
  1189                           status	equ	0xFD8
  1190                           
  1191 ;; *************** function _resetDMX *****************
  1192 ;; Defined at:
  1193 ;;		line 63 in file "dmx.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1
  1207 ;;      Params:         0       0       0
  1208 ;;      Locals:         0       0       0
  1209 ;;      Temps:          0       0       0
  1210 ;;      Totals:         0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    4
  1214 ;; This function calls:
  1215 ;;		Nothing
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text5
  1222  000554                     __ptext5:
  1223                           	opt stack 0
  1224  000554                     _resetDMX:
  1225                           	opt stack 26
  1226                           
  1227                           ;dmx.c: 65: RCSTA1bits.CREN = 0;
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;incstack = 0
  1231  000554  98AB               	bcf	4011,4,c	;volatile
  1232                           
  1233                           ;dmx.c: 66: currentAdress = 0;
  1234  000556  0E00               	movlw	0
  1235  000558  6E37               	movwf	_currentAdress,c
  1236                           
  1237                           ;dmx.c: 67: dmxState = 0x00;
  1238  00055A  0E00               	movlw	0
  1239  00055C  6E38               	movwf	_dmxState,c
  1240                           
  1241                           ;dmx.c: 68: RCSTA1bits.CREN = 1;
  1242  00055E  88AB               	bsf	4011,4,c	;volatile
  1243  000560  0012               	return		;funcret
  1244  000562                     __end_of_resetDMX:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           prodh	equ	0xFF4
  1251                           prodl	equ	0xFF3
  1252                           intcon	equ	0xFF2
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           indf2	equ	0xFDF
  1256                           postinc2	equ	0xFDE
  1257                           fsr2h	equ	0xFDA
  1258                           fsr2l	equ	0xFD9
  1259                           status	equ	0xFD8
  1260                           
  1261 ;; *************** function _pcaInit *****************
  1262 ;; Defined at:
  1263 ;;		line 15 in file "pca9685.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  which           1    wreg     unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  which           1    4[BANK0 ] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1
  1277 ;;      Params:         0       0       0
  1278 ;;      Locals:         0       1       0
  1279 ;;      Temps:          0       0       0
  1280 ;;      Totals:         0       1       0
  1281 ;;Total ram usage:        1 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    7
  1284 ;; This function calls:
  1285 ;;		_pcaWakeUp
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text6
  1292  000562                     __ptext6:
  1293                           	opt stack 0
  1294  000562                     _pcaInit:
  1295                           	opt stack 23
  1296                           
  1297                           ;incstack = 0
  1298                           ;pcaInit@which stored from wreg
  1299  000562  0100               	movlb	0	; () banked
  1300  000564  6FA4               	movwf	pcaInit@which& (0+255),b
  1301                           
  1302                           ;pca9685.c: 27: pcaWakeUp(which);
  1303  000566  0100               	movlb	0	; () banked
  1304  000568  51A4               	movf	pcaInit@which& (0+255),w,b
  1305  00056A  EC23  F002         	call	_pcaWakeUp
  1306  00056E  0012               	return		;funcret
  1307  000570                     __end_of_pcaInit:
  1308                           	opt stack 0
  1309                           tblptru	equ	0xFF8
  1310                           tblptrh	equ	0xFF7
  1311                           tblptrl	equ	0xFF6
  1312                           tablat	equ	0xFF5
  1313                           prodh	equ	0xFF4
  1314                           prodl	equ	0xFF3
  1315                           intcon	equ	0xFF2
  1316                           postinc0	equ	0xFEE
  1317                           wreg	equ	0xFE8
  1318                           indf2	equ	0xFDF
  1319                           postinc2	equ	0xFDE
  1320                           fsr2h	equ	0xFDA
  1321                           fsr2l	equ	0xFD9
  1322                           status	equ	0xFD8
  1323                           
  1324 ;; *************** function _pcaWakeUp *****************
  1325 ;; Defined at:
  1326 ;;		line 64 in file "pca9685.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  which           1    wreg     unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  which           1    3[BANK0 ] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1
  1340 ;;      Params:         0       0       0
  1341 ;;      Locals:         0       1       0
  1342 ;;      Temps:          0       0       0
  1343 ;;      Totals:         0       1       0
  1344 ;;Total ram usage:        1 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    6
  1347 ;; This function calls:
  1348 ;;		_i2cSend
  1349 ;;		_i2cStart
  1350 ;;		_i2cStop
  1351 ;;		_pcaGetAddress
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;;		_pcaInit
  1355 ;;		_testChannelLevels
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text7
  1360  000446                     __ptext7:
  1361                           	opt stack 0
  1362  000446                     _pcaWakeUp:
  1363                           	opt stack 24
  1364                           
  1365                           ;incstack = 0
  1366                           ;pcaWakeUp@which stored from wreg
  1367  000446  0100               	movlb	0	; () banked
  1368  000448  6FA3               	movwf	pcaWakeUp@which& (0+255),b
  1369                           
  1370                           ;pca9685.c: 66: i2cStart();
  1371  00044A  ECCC  F002         	call	_i2cStart	;wreg free
  1372                           
  1373                           ;pca9685.c: 67: i2cSend(pcaGetAddress(which));
  1374  00044E  0100               	movlb	0	; () banked
  1375  000450  51A3               	movf	pcaWakeUp@which& (0+255),w,b
  1376  000452  EC59  F002         	call	_pcaGetAddress
  1377  000456  EC98  F002         	call	_i2cSend
  1378                           
  1379                           ;pca9685.c: 68: i2cSend(0x00);
  1380  00045A  0E00               	movlw	0
  1381  00045C  EC98  F002         	call	_i2cSend
  1382                           
  1383                           ;pca9685.c: 69: i2cSend(0x80 | 0x20);
  1384  000460  0EA0               	movlw	160
  1385  000462  EC98  F002         	call	_i2cSend
  1386                           
  1387                           ;pca9685.c: 70: i2cStop();
  1388  000466  ECC8  F002         	call	_i2cStop	;wreg free
  1389  00046A  0012               	return		;funcret
  1390  00046C                     __end_of_pcaWakeUp:
  1391                           	opt stack 0
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           prodh	equ	0xFF4
  1397                           prodl	equ	0xFF3
  1398                           intcon	equ	0xFF2
  1399                           postinc0	equ	0xFEE
  1400                           wreg	equ	0xFE8
  1401                           indf2	equ	0xFDF
  1402                           postinc2	equ	0xFDE
  1403                           fsr2h	equ	0xFDA
  1404                           fsr2l	equ	0xFD9
  1405                           status	equ	0xFD8
  1406                           
  1407 ;; *************** function _pcaGetAddress *****************
  1408 ;; Defined at:
  1409 ;;		line 10 in file "pca9685.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  which           1    wreg     unsigned char 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  which           1    0[BANK0 ] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      unsigned char 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1
  1423 ;;      Params:         0       0       0
  1424 ;;      Locals:         0       3       0
  1425 ;;      Temps:          0       0       0
  1426 ;;      Totals:         0       3       0
  1427 ;;Total ram usage:        3 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    4
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_pcaSetChannelRaw
  1434 ;;		_pcaWakeUp
  1435 ;;		_pcaSleep
  1436 ;;		_pcaSetSpeed
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text8
  1441  0004B2                     __ptext8:
  1442                           	opt stack 0
  1443  0004B2                     _pcaGetAddress:
  1444                           	opt stack 23
  1445                           
  1446                           ;incstack = 0
  1447                           ;pcaGetAddress@which stored from wreg
  1448  0004B2  0100               	movlb	0	; () banked
  1449  0004B4  6FA0               	movwf	pcaGetAddress@which& (0+255),b
  1450                           
  1451                           ;pca9685.c: 12: return (unsigned char)((unsigned char)0x80 + ( which == 0 ? 0 : 2));
  1452  0004B6  0100               	movlb	0	; () banked
  1453  0004B8  51A0               	movf	pcaGetAddress@which& (0+255),w,b
  1454  0004BA  B4D8               	btfsc	status,2,c
  1455  0004BC  D004               	goto	l318
  1456                           
  1457                           ; BSR set to: 0
  1458  0004BE  0E00               	movlw	0
  1459  0004C0  6FA2               	movwf	(_pcaGetAddress$902+1)& (0+255),b
  1460  0004C2  0E02               	movlw	2
  1461  0004C4  D003               	goto	L1
  1462  0004C6                     l318:
  1463                           
  1464                           ; BSR set to: 0
  1465                           
  1466                           ; BSR set to: 0
  1467  0004C6  0E00               	movlw	0
  1468  0004C8  6FA2               	movwf	(_pcaGetAddress$902+1)& (0+255),b
  1469  0004CA  0E00               	movlw	0
  1470  0004CC                     L1:
  1471  0004CC  6FA1               	movwf	_pcaGetAddress$902& (0+255),b
  1472                           
  1473                           ; BSR set to: 0
  1474                           
  1475                           ; BSR set to: 0
  1476  0004CE  51A1               	movf	_pcaGetAddress$902& (0+255),w,b
  1477  0004D0  0F80               	addlw	128
  1478  0004D2  0012               	return	
  1479  0004D4                     __end_of_pcaGetAddress:
  1480                           	opt stack 0
  1481                           tblptru	equ	0xFF8
  1482                           tblptrh	equ	0xFF7
  1483                           tblptrl	equ	0xFF6
  1484                           tablat	equ	0xFF5
  1485                           prodh	equ	0xFF4
  1486                           prodl	equ	0xFF3
  1487                           intcon	equ	0xFF2
  1488                           postinc0	equ	0xFEE
  1489                           wreg	equ	0xFE8
  1490                           indf2	equ	0xFDF
  1491                           postinc2	equ	0xFDE
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _i2cStop *****************
  1497 ;; Defined at:
  1498 ;;		line 38 in file "i2c.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		None
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1
  1512 ;;      Params:         0       0       0
  1513 ;;      Locals:         0       0       0
  1514 ;;      Temps:          0       0       0
  1515 ;;      Totals:         0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    4
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_pcaSetChannelRaw
  1523 ;;		_pcaWakeUp
  1524 ;;		_pcaSleep
  1525 ;;		_pcaSetSpeed
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text9
  1530  000590                     __ptext9:
  1531                           	opt stack 0
  1532  000590                     _i2cStop:
  1533                           	opt stack 23
  1534                           
  1535                           ;i2c.c: 40: SSPCON2bits.PEN = 1;
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;incstack = 0
  1539  000590  84C5               	bsf	4037,2,c	;volatile
  1540  000592                     
  1541                           ;i2c.c: 42: ;
  1542  000592  A4C5               	btfss	4037,2,c	;volatile
  1543  000594  0012               	return	
  1544  000596  D7FD               	goto	l196
  1545  000598                     __end_of_i2cStop:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodh	equ	0xFF4
  1552                           prodl	equ	0xFF3
  1553                           intcon	equ	0xFF2
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           indf2	equ	0xFDF
  1557                           postinc2	equ	0xFDE
  1558                           fsr2h	equ	0xFDA
  1559                           fsr2l	equ	0xFD9
  1560                           status	equ	0xFD8
  1561                           
  1562 ;; *************** function _i2cStart *****************
  1563 ;; Defined at:
  1564 ;;		line 28 in file "i2c.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		None
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1
  1578 ;;      Params:         0       0       0
  1579 ;;      Locals:         0       0       0
  1580 ;;      Temps:          0       0       0
  1581 ;;      Totals:         0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    4
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_pcaSetChannelRaw
  1589 ;;		_pcaWakeUp
  1590 ;;		_pcaSleep
  1591 ;;		_pcaSetSpeed
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text10
  1596  000598                     __ptext10:
  1597                           	opt stack 0
  1598  000598                     _i2cStart:
  1599                           	opt stack 23
  1600                           
  1601                           ;i2c.c: 30: SSPCON2bits.SEN = 1;
  1602                           
  1603                           ;incstack = 0
  1604  000598  80C5               	bsf	4037,0,c	;volatile
  1605  00059A                     
  1606                           ;i2c.c: 32: ;
  1607  00059A  A0C5               	btfss	4037,0,c	;volatile
  1608  00059C  0012               	return	
  1609  00059E  D7FD               	goto	l190
  1610  0005A0                     __end_of_i2cStart:
  1611                           	opt stack 0
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           prodh	equ	0xFF4
  1617                           prodl	equ	0xFF3
  1618                           intcon	equ	0xFF2
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           indf2	equ	0xFDF
  1622                           postinc2	equ	0xFDE
  1623                           fsr2h	equ	0xFDA
  1624                           fsr2l	equ	0xFD9
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function _i2cSend *****************
  1628 ;; Defined at:
  1629 ;;		line 115 in file "i2c.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  dat             1    wreg     unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  dat             1    0[BANK0 ] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1
  1643 ;;      Params:         0       0       0
  1644 ;;      Locals:         0       1       0
  1645 ;;      Temps:          0       0       0
  1646 ;;      Totals:         0       1       0
  1647 ;;Total ram usage:        1 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    5
  1650 ;; This function calls:
  1651 ;;		_i2cWait
  1652 ;; This function is called by:
  1653 ;;		_pcaSetChannelRaw
  1654 ;;		_pcaWakeUp
  1655 ;;		_pcaSleep
  1656 ;;		_pcaSetSpeed
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text11
  1661  000530                     __ptext11:
  1662                           	opt stack 0
  1663  000530                     _i2cSend:
  1664                           	opt stack 22
  1665                           
  1666                           ;incstack = 0
  1667                           ;i2cSend@dat stored from wreg
  1668  000530  0100               	movlb	0	; () banked
  1669  000532  6FA0               	movwf	i2cSend@dat& (0+255),b
  1670                           
  1671                           ;i2c.c: 117: SSPBUF = dat;
  1672  000534  C0A0  FFC9         	movff	i2cSend@dat,4041	;volatile
  1673  000538                     
  1674                           ;i2c.c: 119: ;
  1675  000538  B0C7               	btfsc	4039,0,c	;volatile
  1676  00053A  D7FE               	goto	l228
  1677                           
  1678                           ;i2c.c: 120: i2cWait();
  1679  00053C  ECA1  F002         	call	_i2cWait	;wreg free
  1680  000540  0012               	return		;funcret
  1681  000542                     __end_of_i2cSend:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           prodh	equ	0xFF4
  1688                           prodl	equ	0xFF3
  1689                           intcon	equ	0xFF2
  1690                           postinc0	equ	0xFEE
  1691                           wreg	equ	0xFE8
  1692                           indf2	equ	0xFDF
  1693                           postinc2	equ	0xFDE
  1694                           fsr2h	equ	0xFDA
  1695                           fsr2l	equ	0xFD9
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _i2cWait *****************
  1699 ;; Defined at:
  1700 ;;		line 102 in file "i2c.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1
  1714 ;;      Params:         0       0       0
  1715 ;;      Locals:         0       0       0
  1716 ;;      Temps:          0       0       0
  1717 ;;      Totals:         0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    4
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_i2cSend
  1725 ;;		_i2cRead
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text12
  1730  000542                     __ptext12:
  1731                           	opt stack 0
  1732  000542                     _i2cWait:
  1733                           	opt stack 22
  1734                           
  1735                           ;i2c.c: 105: ;
  1736                           
  1737                           ;i2c.c: 104: while ((SSPCON2 == 0x1F ) || ( SSPSTAT == 0x04 ) )
  1738                           
  1739                           ;incstack = 0
  1740  000542  0E1F               	movlw	31
  1741  000544  18C5               	xorwf	4037,w,c	;volatile
  1742  000546  B4D8               	btfsc	status,2,c
  1743  000548  D7FC               	goto	_i2cWait
  1744  00054A  0E04               	movlw	4
  1745  00054C  18C7               	xorwf	4039,w,c	;volatile
  1746  00054E  A4D8               	btfss	status,2,c
  1747  000550  0012               	return	
  1748  000552  D7F7               	goto	_i2cWait
  1749  000554                     __end_of_i2cWait:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           prodh	equ	0xFF4
  1756                           prodl	equ	0xFF3
  1757                           intcon	equ	0xFF2
  1758                           postinc0	equ	0xFEE
  1759                           wreg	equ	0xFE8
  1760                           indf2	equ	0xFDF
  1761                           postinc2	equ	0xFDE
  1762                           fsr2h	equ	0xFDA
  1763                           fsr2l	equ	0xFD9
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _initHardware *****************
  1767 ;; Defined at:
  1768 ;;		line 6 in file "hardware.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1
  1782 ;;      Params:         0       0       0
  1783 ;;      Locals:         0       0       0
  1784 ;;      Temps:          0       0       0
  1785 ;;      Totals:         0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    4
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text13
  1797  00035C                     __ptext13:
  1798                           	opt stack 0
  1799  00035C                     _initHardware:
  1800                           	opt stack 26
  1801                           
  1802                           ;hardware.c: 8: OSCCONbits.IDLEN = 0;
  1803                           
  1804                           ;incstack = 0
  1805  00035C  9ED3               	bcf	4051,7,c	;volatile
  1806                           
  1807                           ;hardware.c: 10: OSCCONbits.IRCF2 = 1;
  1808  00035E  8CD3               	bsf	4051,6,c	;volatile
  1809                           
  1810                           ;hardware.c: 11: OSCCONbits.IRCF1 = 1;
  1811  000360  8AD3               	bsf	4051,5,c	;volatile
  1812                           
  1813                           ;hardware.c: 13: OSCCONbits.IRCF0 = 1;
  1814  000362  88D3               	bsf	4051,4,c	;volatile
  1815                           
  1816                           ;hardware.c: 15: OSCCONbits.SCS1 = 1;
  1817  000364  82D3               	bsf	4051,1,c	;volatile
  1818                           
  1819                           ;hardware.c: 16: OSCCONbits.SCS0 = 0;
  1820  000366  90D3               	bcf	4051,0,c	;volatile
  1821                           
  1822                           ;hardware.c: 18: OSCTUNEbits.PLLEN = 1;
  1823  000368  8C9B               	bsf	3995,6,c	;volatile
  1824                           
  1825                           ;hardware.c: 24: CM1CON0 = 0;
  1826  00036A  0E00               	movlw	0
  1827  00036C  6E6D               	movwf	3949,c	;volatile
  1828                           
  1829                           ;hardware.c: 25: CM2CON0 = 0;
  1830  00036E  0E00               	movlw	0
  1831  000370  6E6B               	movwf	3947,c	;volatile
  1832                           
  1833                           ;hardware.c: 27: ANSEL = 0x00;
  1834  000372  0E00               	movlw	0
  1835  000374  6E7E               	movwf	3966,c	;volatile
  1836                           
  1837                           ;hardware.c: 28: ANSELH = 0x00;
  1838  000376  0E00               	movlw	0
  1839  000378  6E7F               	movwf	3967,c	;volatile
  1840                           
  1841                           ;hardware.c: 30: LATA = 0x00;
  1842  00037A  0E00               	movlw	0
  1843  00037C  6E89               	movwf	3977,c	;volatile
  1844                           
  1845                           ;hardware.c: 31: PORTA = 0x00;
  1846  00037E  0E00               	movlw	0
  1847  000380  6E80               	movwf	3968,c	;volatile
  1848                           
  1849                           ;hardware.c: 32: TRISA = 0b00000011;
  1850  000382  0E03               	movlw	3
  1851  000384  6E92               	movwf	3986,c	;volatile
  1852                           
  1853                           ;hardware.c: 34: PORTB = 0x00;
  1854  000386  0E00               	movlw	0
  1855  000388  6E81               	movwf	3969,c	;volatile
  1856                           
  1857                           ;hardware.c: 35: LATB = 0x00;
  1858  00038A  0E00               	movlw	0
  1859  00038C  6E8A               	movwf	3978,c	;volatile
  1860                           
  1861                           ;hardware.c: 36: TRISB = 0b10100111;
  1862  00038E  0EA7               	movlw	167
  1863  000390  6E93               	movwf	3987,c	;volatile
  1864                           
  1865                           ;hardware.c: 38: LATC = 0x00;
  1866  000392  0E00               	movlw	0
  1867  000394  6E8B               	movwf	3979,c	;volatile
  1868                           
  1869                           ;hardware.c: 39: PORTC = 0x00;
  1870  000396  0E00               	movlw	0
  1871  000398  6E82               	movwf	3970,c	;volatile
  1872                           
  1873                           ;hardware.c: 40: TRISC = 0b11111000;
  1874  00039A  0EF8               	movlw	248
  1875  00039C  6E94               	movwf	3988,c	;volatile
  1876  00039E  0012               	return		;funcret
  1877  0003A0                     __end_of_initHardware:
  1878                           	opt stack 0
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           prodh	equ	0xFF4
  1884                           prodl	equ	0xFF3
  1885                           intcon	equ	0xFF2
  1886                           postinc0	equ	0xFEE
  1887                           wreg	equ	0xFE8
  1888                           indf2	equ	0xFDF
  1889                           postinc2	equ	0xFDE
  1890                           fsr2h	equ	0xFDA
  1891                           fsr2l	equ	0xFD9
  1892                           status	equ	0xFD8
  1893                           
  1894 ;; *************** function _initDMX *****************
  1895 ;; Defined at:
  1896 ;;		line 39 in file "dmx.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1
  1910 ;;      Params:         0       0       0
  1911 ;;      Locals:         0       0       0
  1912 ;;      Temps:          0       0       0
  1913 ;;      Totals:         0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    5
  1917 ;; This function calls:
  1918 ;;		_getDMXBaseAddress
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text14
  1925  00041A                     __ptext14:
  1926                           	opt stack 0
  1927  00041A                     _initDMX:
  1928                           	opt stack 25
  1929                           
  1930                           ;dmx.c: 41: baseAddress = getDMXBaseAddress();
  1931                           
  1932                           ;incstack = 0
  1933  00041A  ECD0  F002         	call	_getDMXBaseAddress	;wreg free
  1934  00041E  6E36               	movwf	_baseAddress,c
  1935                           
  1936                           ;dmx.c: 42: topAddress = baseAddress + 32U;
  1937  000420  5036               	movf	_baseAddress,w,c
  1938  000422  0F20               	addlw	32
  1939  000424  6E35               	movwf	_topAddress,c
  1940                           
  1941                           ;dmx.c: 44: currentAdress = 0;
  1942  000426  0E00               	movlw	0
  1943  000428  6E37               	movwf	_currentAdress,c
  1944                           
  1945                           ;dmx.c: 45: dmxState = 0x00;
  1946  00042A  0E00               	movlw	0
  1947  00042C  6E38               	movwf	_dmxState,c
  1948                           
  1949                           ;dmx.c: 47: BAUDCONbits.BRG16 = 1;
  1950  00042E  86B8               	bsf	4024,3,c	;volatile
  1951                           
  1952                           ;dmx.c: 49: SPBRG1 = 3;
  1953  000430  0E03               	movlw	3
  1954  000432  6EAF               	movwf	4015,c	;volatile
  1955                           
  1956                           ;dmx.c: 50: SPBRGH = 0;
  1957  000434  0E00               	movlw	0
  1958  000436  6EB0               	movwf	4016,c	;volatile
  1959                           
  1960                           ;dmx.c: 52: BAUDCONbits.CKTXP = 1;
  1961  000438  88B8               	bsf	4024,4,c	;volatile
  1962                           
  1963                           ;dmx.c: 54: RCSTA1bits.CREN = 1;
  1964  00043A  88AB               	bsf	4011,4,c	;volatile
  1965                           
  1966                           ;dmx.c: 55: RCSTA1bits.SPEN = 1;
  1967  00043C  8EAB               	bsf	4011,7,c	;volatile
  1968                           
  1969                           ;dmx.c: 56: SYNC = 0;
  1970  00043E  98AC               	bcf	4012,4,c	;volatile
  1971                           
  1972                           ;dmx.c: 58: PIE1bits.RCIE = 1;
  1973  000440  8A9D               	bsf	3997,5,c	;volatile
  1974                           
  1975                           ;dmx.c: 59: IPR1bits.RCIP = 1;
  1976  000442  8A9F               	bsf	3999,5,c	;volatile
  1977  000444  0012               	return		;funcret
  1978  000446                     __end_of_initDMX:
  1979                           	opt stack 0
  1980                           tblptru	equ	0xFF8
  1981                           tblptrh	equ	0xFF7
  1982                           tblptrl	equ	0xFF6
  1983                           tablat	equ	0xFF5
  1984                           prodh	equ	0xFF4
  1985                           prodl	equ	0xFF3
  1986                           intcon	equ	0xFF2
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           indf2	equ	0xFDF
  1990                           postinc2	equ	0xFDE
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8
  1994                           
  1995 ;; *************** function _getDMXBaseAddress *****************
  1996 ;; Defined at:
  1997 ;;		line 78 in file "dmx.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      unsigned char 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1
  2011 ;;      Params:         0       0       0
  2012 ;;      Locals:         0       0       0
  2013 ;;      Temps:          0       0       0
  2014 ;;      Totals:         0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    4
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_initDMX
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text15
  2026  0005A0                     __ptext15:
  2027                           	opt stack 0
  2028  0005A0                     _getDMXBaseAddress:
  2029                           	opt stack 25
  2030                           
  2031                           ;dmx.c: 80: return (unsigned char)(PORTC >> 1U) & 0b01111100U;
  2032                           
  2033                           ;incstack = 0
  2034  0005A0  90D8               	bcf	status,0,c
  2035  0005A2  3082               	rrcf	3970,w,c	;volatile
  2036  0005A4  0B7C               	andlw	124
  2037  0005A6  0012               	return	
  2038  0005A8                     __end_of_getDMXBaseAddress:
  2039                           	opt stack 0
  2040                           tblptru	equ	0xFF8
  2041                           tblptrh	equ	0xFF7
  2042                           tblptrl	equ	0xFF6
  2043                           tablat	equ	0xFF5
  2044                           prodh	equ	0xFF4
  2045                           prodl	equ	0xFF3
  2046                           intcon	equ	0xFF2
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           indf2	equ	0xFDF
  2050                           postinc2	equ	0xFDE
  2051                           fsr2h	equ	0xFDA
  2052                           fsr2l	equ	0xFD9
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _initChannels *****************
  2056 ;; Defined at:
  2057 ;;		line 18 in file "channels.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  i               1    0[BANK0 ] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1
  2071 ;;      Params:         0       0       0
  2072 ;;      Locals:         0       1       0
  2073 ;;      Temps:          0       0       0
  2074 ;;      Totals:         0       1       0
  2075 ;;Total ram usage:        1 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    4
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text16
  2086  0003A0                     __ptext16:
  2087                           	opt stack 0
  2088  0003A0                     _initChannels:
  2089                           	opt stack 26
  2090                           
  2091                           ;channels.c: 20: unsigned char i;
  2092                           ;channels.c: 22: for (i = 0; i < 32U; i++) {
  2093                           
  2094                           ;incstack = 0
  2095  0003A0  0E00               	movlw	0
  2096  0003A2  0100               	movlb	0	; () banked
  2097  0003A4  6FA0               	movwf	initChannels@i& (0+255),b
  2098  0003A6                     l1711:
  2099                           
  2100                           ; BSR set to: 0
  2101  0003A6  0E1F               	movlw	31
  2102  0003A8  65A0               	cpfsgt	initChannels@i& (0+255),b
  2103  0003AA  D001               	goto	l11
  2104  0003AC  0012               	return	
  2105  0003AE                     l11:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;channels.c: 23: channels[i].bChanged = 0;
  2109                           
  2110                           ; BSR set to: 0
  2111  0003AE  51A0               	movf	initChannels@i& (0+255),w,b
  2112  0003B0  0D02               	mullw	2
  2113  0003B2  0E60               	movlw	low _channels
  2114  0003B4  24F3               	addwf	prodl,w,c
  2115  0003B6  6ED9               	movwf	fsr2l,c
  2116  0003B8  0E00               	movlw	high _channels
  2117  0003BA  20F4               	addwfc	prodh,w,c
  2118  0003BC  6EDA               	movwf	fsr2h,c
  2119  0003BE  0E00               	movlw	0
  2120  0003C0  6EDF               	movwf	indf2,c
  2121                           
  2122                           ;channels.c: 24: channels[i].level = 0;
  2123  0003C2  51A0               	movf	initChannels@i& (0+255),w,b
  2124  0003C4  0D02               	mullw	2
  2125  0003C6  0E01               	movlw	1
  2126  0003C8  26F3               	addwf	prodl,f,c
  2127  0003CA  0E00               	movlw	0
  2128  0003CC  22F4               	addwfc	prodh,f,c
  2129  0003CE  0E60               	movlw	low _channels
  2130  0003D0  24F3               	addwf	prodl,w,c
  2131  0003D2  6ED9               	movwf	fsr2l,c
  2132  0003D4  0E00               	movlw	high _channels
  2133  0003D6  20F4               	addwfc	prodh,w,c
  2134  0003D8  6EDA               	movwf	fsr2h,c
  2135  0003DA  0E00               	movlw	0
  2136  0003DC  6EDF               	movwf	indf2,c
  2137                           
  2138                           ; BSR set to: 0
  2139  0003DE  2BA0               	incf	initChannels@i& (0+255),f,b
  2140  0003E0  D7E2               	goto	l1711
  2141  0003E2                     __end_of_initChannels:
  2142                           	opt stack 0
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           prodh	equ	0xFF4
  2148                           prodl	equ	0xFF3
  2149                           intcon	equ	0xFF2
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           indf2	equ	0xFDF
  2153                           postinc2	equ	0xFDE
  2154                           fsr2h	equ	0xFDA
  2155                           fsr2l	equ	0xFD9
  2156                           status	equ	0xFD8
  2157                           
  2158 ;; *************** function _i2cInit *****************
  2159 ;; Defined at:
  2160 ;;		line 7 in file "i2c.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1
  2174 ;;      Params:         0       0       0
  2175 ;;      Locals:         0       0       0
  2176 ;;      Temps:          0       0       0
  2177 ;;      Totals:         0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    4
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text17
  2189  0004EE                     __ptext17:
  2190                           	opt stack 0
  2191  0004EE                     _i2cInit:
  2192                           	opt stack 26
  2193                           
  2194                           ;i2c.c: 9: TRISBbits.RB4 = 1;
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;incstack = 0
  2198  0004EE  8893               	bsf	3987,4,c	;volatile
  2199                           
  2200                           ;i2c.c: 10: TRISBbits.RB6 = 1;
  2201  0004F0  8C93               	bsf	3987,6,c	;volatile
  2202                           
  2203                           ;i2c.c: 12: SSPCON1bits.SSPEN = 1;
  2204  0004F2  8AC6               	bsf	4038,5,c	;volatile
  2205                           
  2206                           ;i2c.c: 13: SSPADD = 0x08;
  2207  0004F4  0E08               	movlw	8
  2208  0004F6  6EC8               	movwf	4040,c	;volatile
  2209                           
  2210                           ;i2c.c: 14: SSPCON1 = 0x28;
  2211  0004F8  0E28               	movlw	40
  2212  0004FA  6EC6               	movwf	4038,c	;volatile
  2213                           
  2214                           ;i2c.c: 15: SSPSTAT = 0x00;
  2215  0004FC  0E00               	movlw	0
  2216  0004FE  6EC7               	movwf	4039,c	;volatile
  2217                           
  2218                           ;i2c.c: 17: bI2CTimeout = 0;
  2219  000500  0E00               	movlw	0
  2220  000502  6E34               	movwf	_bI2CTimeout,c
  2221  000504  0012               	return		;funcret
  2222  000506                     __end_of_i2cInit:
  2223                           	opt stack 0
  2224                           tblptru	equ	0xFF8
  2225                           tblptrh	equ	0xFF7
  2226                           tblptrl	equ	0xFF6
  2227                           tablat	equ	0xFF5
  2228                           prodh	equ	0xFF4
  2229                           prodl	equ	0xFF3
  2230                           intcon	equ	0xFF2
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           indf2	equ	0xFDF
  2234                           postinc2	equ	0xFDE
  2235                           fsr2h	equ	0xFDA
  2236                           fsr2l	equ	0xFD9
  2237                           status	equ	0xFD8
  2238                           
  2239 ;; *************** function _decrementSignalWatchdog *****************
  2240 ;; Defined at:
  2241 ;;		line 163 in file "dmx.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      unsigned char 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1
  2255 ;;      Params:         0       0       0
  2256 ;;      Locals:         0       0       0
  2257 ;;      Temps:          0       0       0
  2258 ;;      Totals:         0       0       0
  2259 ;;Total ram usage:        0 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:    4
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_main
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text18
  2270  0004D4                     __ptext18:
  2271                           	opt stack 0
  2272  0004D4                     _decrementSignalWatchdog:
  2273                           	opt stack 26
  2274                           
  2275                           ;dmx.c: 165: if ( signalWatchdog > 0) {
  2276                           
  2277                           ;incstack = 0
  2278  0004D4  502F               	movf	_signalWatchdog,w,c	;volatile
  2279  0004D6  1030               	iorwf	_signalWatchdog+1,w,c	;volatile
  2280  0004D8  B4D8               	btfsc	status,2,c
  2281  0004DA  D006               	goto	l116
  2282                           
  2283                           ;dmx.c: 166: signalWatchdog--;
  2284  0004DC  062F               	decf	_signalWatchdog,f,c	;volatile
  2285  0004DE  A0D8               	btfss	status,0,c
  2286  0004E0  0630               	decf	_signalWatchdog+1,f,c	;volatile
  2287                           
  2288                           ;dmx.c: 167: LATCbits.LATC1 = 0;
  2289  0004E2  928B               	bcf	3979,1,c	;volatile
  2290                           
  2291                           ;dmx.c: 168: return 0;
  2292  0004E4  0E00               	movlw	0
  2293                           
  2294                           ;dmx.c: 169: }
  2295  0004E6  0012               	return	
  2296  0004E8                     l116:
  2297                           
  2298                           ;dmx.c: 170: else {
  2299                           ;dmx.c: 171: LATCbits.LATC1 = 1;
  2300  0004E8  828B               	bsf	3979,1,c	;volatile
  2301                           
  2302                           ;dmx.c: 172: return 1;
  2303  0004EA  0E01               	movlw	1
  2304  0004EC  0012               	return	
  2305  0004EE                     __end_of_decrementSignalWatchdog:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           intcon	equ	0xFF2
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           indf2	equ	0xFDF
  2317                           postinc2	equ	0xFDE
  2318                           fsr2h	equ	0xFDA
  2319                           fsr2l	equ	0xFD9
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _decrementFramingWatchdog *****************
  2323 ;; Defined at:
  2324 ;;		line 190 in file "dmx.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1
  2338 ;;      Params:         0       0       0
  2339 ;;      Locals:         0       0       0
  2340 ;;      Temps:          0       0       0
  2341 ;;      Totals:         0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    4
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text19
  2353  00051C                     __ptext19:
  2354                           	opt stack 0
  2355  00051C                     _decrementFramingWatchdog:
  2356                           	opt stack 26
  2357                           
  2358                           ;dmx.c: 192: if (framingErrorWatchdog > 0) {
  2359                           
  2360                           ;incstack = 0
  2361  00051C  502D               	movf	_framingErrorWatchdog,w,c	;volatile
  2362  00051E  102E               	iorwf	_framingErrorWatchdog+1,w,c	;volatile
  2363  000520  B4D8               	btfsc	status,2,c
  2364  000522  D004               	goto	l126
  2365                           
  2366                           ;dmx.c: 193: framingErrorWatchdog--;
  2367  000524  062D               	decf	_framingErrorWatchdog,f,c	;volatile
  2368  000526  A0D8               	btfss	status,0,c
  2369  000528  062E               	decf	_framingErrorWatchdog+1,f,c	;volatile
  2370                           
  2371                           ;dmx.c: 194: }
  2372  00052A  0012               	return	
  2373  00052C                     l126:
  2374                           
  2375                           ;dmx.c: 195: else {
  2376                           ;dmx.c: 196: LATCbits.LATC2 = 0;
  2377  00052C  948B               	bcf	3979,2,c	;volatile
  2378  00052E  0012               	return	
  2379  000530                     __end_of_decrementFramingWatchdog:
  2380                           	opt stack 0
  2381                           tblptru	equ	0xFF8
  2382                           tblptrh	equ	0xFF7
  2383                           tblptrl	equ	0xFF6
  2384                           tablat	equ	0xFF5
  2385                           prodh	equ	0xFF4
  2386                           prodl	equ	0xFF3
  2387                           intcon	equ	0xFF2
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           indf2	equ	0xFDF
  2391                           postinc2	equ	0xFDE
  2392                           fsr2h	equ	0xFDA
  2393                           fsr2l	equ	0xFD9
  2394                           status	equ	0xFD8
  2395                           
  2396 ;; *************** function _decrementDataWatchdog *****************
  2397 ;; Defined at:
  2398 ;;		line 141 in file "dmx.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1
  2412 ;;      Params:         0       0       0
  2413 ;;      Locals:         0       0       0
  2414 ;;      Temps:          0       0       0
  2415 ;;      Totals:         0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    4
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text20
  2427  000506                     __ptext20:
  2428                           	opt stack 0
  2429  000506                     _decrementDataWatchdog:
  2430                           	opt stack 26
  2431                           
  2432                           ;dmx.c: 143: if ( dataWatchdog > 0) {
  2433                           
  2434                           ;incstack = 0
  2435  000506  5031               	movf	_dataWatchdog,w,c	;volatile
  2436  000508  1032               	iorwf	_dataWatchdog+1,w,c	;volatile
  2437  00050A  B4D8               	btfsc	status,2,c
  2438  00050C  D005               	goto	l106
  2439                           
  2440                           ;dmx.c: 144: dataWatchdog--;
  2441  00050E  0631               	decf	_dataWatchdog,f,c	;volatile
  2442  000510  A0D8               	btfss	status,0,c
  2443  000512  0632               	decf	_dataWatchdog+1,f,c	;volatile
  2444                           
  2445                           ;dmx.c: 145: LATCbits.LATC0 = 1;
  2446  000514  808B               	bsf	3979,0,c	;volatile
  2447                           
  2448                           ;dmx.c: 146: }
  2449  000516  0012               	return	
  2450  000518                     l106:
  2451                           
  2452                           ;dmx.c: 147: else {
  2453                           ;dmx.c: 148: LATCbits.LATC0 = 0;
  2454  000518  908B               	bcf	3979,0,c	;volatile
  2455  00051A  0012               	return	
  2456  00051C                     __end_of_decrementDataWatchdog:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           prodh	equ	0xFF4
  2463                           prodl	equ	0xFF3
  2464                           intcon	equ	0xFF2
  2465                           postinc0	equ	0xFEE
  2466                           wreg	equ	0xFE8
  2467                           indf2	equ	0xFDF
  2468                           postinc2	equ	0xFDE
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _low_isr *****************
  2474 ;; Defined at:
  2475 ;;		line 32 in file "interrupts.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		None
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1
  2489 ;;      Params:         0       0       0
  2490 ;;      Locals:         0       0       0
  2491 ;;      Temps:         21       0       0
  2492 ;;      Totals:        21       0       0
  2493 ;;Total ram usage:       21 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    3
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		Interrupt level 1
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	intcodelo
  2504  000018                     __pintcodelo:
  2505                           	opt stack 0
  2506  000018                     _low_isr:
  2507                           	opt stack 22
  2508                           
  2509                           ;incstack = 0
  2510  000018  803A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2511  00001A  CFD8 F018          	movff	status,??_low_isr
  2512  00001E  CFE8 F019          	movff	wreg,??_low_isr+1
  2513  000022  CFE0 F01A          	movff	bsr,??_low_isr+2
  2514  000026  CFFA F01B          	movff	pclath,??_low_isr+3
  2515  00002A  CFFB F01C          	movff	pclatu,??_low_isr+4
  2516  00002E  CFE9 F01D          	movff	fsr0l,??_low_isr+5
  2517  000032  CFEA F01E          	movff	fsr0h,??_low_isr+6
  2518  000036  CFE1 F01F          	movff	fsr1l,??_low_isr+7
  2519  00003A  CFE2 F020          	movff	fsr1h,??_low_isr+8
  2520  00003E  CFD9 F021          	movff	fsr2l,??_low_isr+9
  2521  000042  CFDA F022          	movff	fsr2h,??_low_isr+10
  2522  000046  CFF3 F023          	movff	prodl,??_low_isr+11
  2523  00004A  CFF4 F024          	movff	prodh,??_low_isr+12
  2524  00004E  CFF6 F025          	movff	tblptrl,??_low_isr+13
  2525  000052  CFF7 F026          	movff	tblptrh,??_low_isr+14
  2526  000056  CFF8 F027          	movff	tblptru,??_low_isr+15
  2527  00005A  CFF5 F028          	movff	tablat,??_low_isr+16
  2528  00005E  C03A  F029         	movff	btemp,??_low_isr+17
  2529  000062  C03B  F02A         	movff	btemp+1,??_low_isr+18
  2530  000066  C03C  F02B         	movff	btemp+2,??_low_isr+19
  2531  00006A  C03D  F02C         	movff	btemp+3,??_low_isr+20
  2532  00006E  C02C  F03D         	movff	??_low_isr+20,btemp+3
  2533  000072  C02B  F03C         	movff	??_low_isr+19,btemp+2
  2534  000076  C02A  F03B         	movff	??_low_isr+18,btemp+1
  2535  00007A  C029  F03A         	movff	??_low_isr+17,btemp
  2536  00007E  C028  FFF5         	movff	??_low_isr+16,tablat
  2537  000082  C027  FFF8         	movff	??_low_isr+15,tblptru
  2538  000086  C026  FFF7         	movff	??_low_isr+14,tblptrh
  2539  00008A  C025  FFF6         	movff	??_low_isr+13,tblptrl
  2540  00008E  C024  FFF4         	movff	??_low_isr+12,prodh
  2541  000092  C023  FFF3         	movff	??_low_isr+11,prodl
  2542  000096  C022  FFDA         	movff	??_low_isr+10,fsr2h
  2543  00009A  C021  FFD9         	movff	??_low_isr+9,fsr2l
  2544  00009E  C020  FFE2         	movff	??_low_isr+8,fsr1h
  2545  0000A2  C01F  FFE1         	movff	??_low_isr+7,fsr1l
  2546  0000A6  C01E  FFEA         	movff	??_low_isr+6,fsr0h
  2547  0000AA  C01D  FFE9         	movff	??_low_isr+5,fsr0l
  2548  0000AE  C01C  FFFB         	movff	??_low_isr+4,pclatu
  2549  0000B2  C01B  FFFA         	movff	??_low_isr+3,pclath
  2550  0000B6  C01A  FFE0         	movff	??_low_isr+2,bsr
  2551  0000BA  C019  FFE8         	movff	??_low_isr+1,wreg
  2552  0000BE  C018  FFD8         	movff	??_low_isr,status
  2553  0000C2  903A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2554  0000C4  0010               	retfie	
  2555  0000C6                     __end_of_low_isr:
  2556                           	opt stack 0
  2557                           pclatu	equ	0xFFB
  2558                           pclath	equ	0xFFA
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           intcon	equ	0xFF2
  2566                           postinc0	equ	0xFEE
  2567                           fsr0h	equ	0xFEA
  2568                           fsr0l	equ	0xFE9
  2569                           wreg	equ	0xFE8
  2570                           fsr1h	equ	0xFE2
  2571                           fsr1l	equ	0xFE1
  2572                           bsr	equ	0xFE0
  2573                           indf2	equ	0xFDF
  2574                           postinc2	equ	0xFDE
  2575                           fsr2h	equ	0xFDA
  2576                           fsr2l	equ	0xFD9
  2577                           status	equ	0xFD8
  2578                           
  2579 ;; *************** function _high_isr *****************
  2580 ;; Defined at:
  2581 ;;		line 14 in file "interrupts.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1
  2595 ;;      Params:         0       0       0
  2596 ;;      Locals:         0       0       0
  2597 ;;      Temps:         18       0       0
  2598 ;;      Totals:        18       0       0
  2599 ;;Total ram usage:       18 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    2
  2602 ;; This function calls:
  2603 ;;		_handleDMX
  2604 ;; This function is called by:
  2605 ;;		Interrupt level 2
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	intcode
  2610  000008                     __pintcode:
  2611                           	opt stack 0
  2612  000008                     _high_isr:
  2613                           	opt stack 22
  2614                           
  2615                           ;incstack = 0
  2616  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2617  00000A  EF65  F000         	goto	int_func
  2618                           pclatu	equ	0xFFB
  2619                           pclath	equ	0xFFA
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           fsr0h	equ	0xFEA
  2629                           fsr0l	equ	0xFE9
  2630                           wreg	equ	0xFE8
  2631                           fsr1h	equ	0xFE2
  2632                           fsr1l	equ	0xFE1
  2633                           bsr	equ	0xFE0
  2634                           indf2	equ	0xFDF
  2635                           postinc2	equ	0xFDE
  2636                           fsr2h	equ	0xFDA
  2637                           fsr2l	equ	0xFD9
  2638                           status	equ	0xFD8
  2639                           
  2640                           	psect	intcode_body
  2641  0000CA                     __pintcode_body:
  2642                           	opt stack 22
  2643  0000CA                     int_func:
  2644                           	opt stack 22
  2645  0000CA  CFFA F006          	movff	pclath,??_high_isr
  2646  0000CE  CFFB F007          	movff	pclatu,??_high_isr+1
  2647  0000D2  CFE9 F008          	movff	fsr0l,??_high_isr+2
  2648  0000D6  CFEA F009          	movff	fsr0h,??_high_isr+3
  2649  0000DA  CFE1 F00A          	movff	fsr1l,??_high_isr+4
  2650  0000DE  CFE2 F00B          	movff	fsr1h,??_high_isr+5
  2651  0000E2  CFD9 F00C          	movff	fsr2l,??_high_isr+6
  2652  0000E6  CFDA F00D          	movff	fsr2h,??_high_isr+7
  2653  0000EA  CFF3 F00E          	movff	prodl,??_high_isr+8
  2654  0000EE  CFF4 F00F          	movff	prodh,??_high_isr+9
  2655  0000F2  CFF6 F010          	movff	tblptrl,??_high_isr+10
  2656  0000F6  CFF7 F011          	movff	tblptrh,??_high_isr+11
  2657  0000FA  CFF8 F012          	movff	tblptru,??_high_isr+12
  2658  0000FE  CFF5 F013          	movff	tablat,??_high_isr+13
  2659  000102  C03A  F014         	movff	btemp,??_high_isr+14
  2660  000106  C03B  F015         	movff	btemp+1,??_high_isr+15
  2661  00010A  C03C  F016         	movff	btemp+2,??_high_isr+16
  2662  00010E  C03D  F017         	movff	btemp+3,??_high_isr+17
  2663                           
  2664                           ;interrupts.c: 19: if (PIR1bits.RCIF == 1) {
  2665  000112  AA9E               	btfss	3998,5,c	;volatile
  2666  000114  D003               	goto	i2l246
  2667                           
  2668                           ;interrupts.c: 20: handleDMX();
  2669  000116  ECF3  F000         	call	_handleDMX	;wreg free
  2670                           
  2671                           ;interrupts.c: 21: PIR1bits.RCIF = 0;
  2672  00011A  9A9E               	bcf	3998,5,c	;volatile
  2673  00011C                     i2l246:
  2674  00011C  C017  F03D         	movff	??_high_isr+17,btemp+3
  2675  000120  C016  F03C         	movff	??_high_isr+16,btemp+2
  2676  000124  C015  F03B         	movff	??_high_isr+15,btemp+1
  2677  000128  C014  F03A         	movff	??_high_isr+14,btemp
  2678  00012C  C013  FFF5         	movff	??_high_isr+13,tablat
  2679  000130  C012  FFF8         	movff	??_high_isr+12,tblptru
  2680  000134  C011  FFF7         	movff	??_high_isr+11,tblptrh
  2681  000138  C010  FFF6         	movff	??_high_isr+10,tblptrl
  2682  00013C  C00F  FFF4         	movff	??_high_isr+9,prodh
  2683  000140  C00E  FFF3         	movff	??_high_isr+8,prodl
  2684  000144  C00D  FFDA         	movff	??_high_isr+7,fsr2h
  2685  000148  C00C  FFD9         	movff	??_high_isr+6,fsr2l
  2686  00014C  C00B  FFE2         	movff	??_high_isr+5,fsr1h
  2687  000150  C00A  FFE1         	movff	??_high_isr+4,fsr1l
  2688  000154  C009  FFEA         	movff	??_high_isr+3,fsr0h
  2689  000158  C008  FFE9         	movff	??_high_isr+2,fsr0l
  2690  00015C  C007  FFFB         	movff	??_high_isr+1,pclatu
  2691  000160  C006  FFFA         	movff	??_high_isr,pclath
  2692  000164  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2693  000166  0011               	retfie		f
  2694  000168                     __end_of_high_isr:
  2695                           	opt stack 0
  2696                           pclatu	equ	0xFFB
  2697                           pclath	equ	0xFFA
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodh	equ	0xFF4
  2703                           prodl	equ	0xFF3
  2704                           intcon	equ	0xFF2
  2705                           postinc0	equ	0xFEE
  2706                           fsr0h	equ	0xFEA
  2707                           fsr0l	equ	0xFE9
  2708                           wreg	equ	0xFE8
  2709                           fsr1h	equ	0xFE2
  2710                           fsr1l	equ	0xFE1
  2711                           bsr	equ	0xFE0
  2712                           indf2	equ	0xFDF
  2713                           postinc2	equ	0xFDE
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function _handleDMX *****************
  2719 ;; Defined at:
  2720 ;;		line 83 in file "dmx.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  received        1    4[COMRAM] unsigned char 
  2725 ;;  eFraming        1    3[COMRAM] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1
  2735 ;;      Params:         0       0       0
  2736 ;;      Locals:         2       0       0
  2737 ;;      Temps:          0       0       0
  2738 ;;      Totals:         2       0       0
  2739 ;;Total ram usage:        2 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    1
  2742 ;; This function calls:
  2743 ;;		_resetDataWatchdog
  2744 ;;		_resetFramingWatchdog
  2745 ;;		_resetSignalWatchdog
  2746 ;;		_setChannelLevel
  2747 ;; This function is called by:
  2748 ;;		_high_isr
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text23
  2753  0001E6                     __ptext23:
  2754                           	opt stack 0
  2755  0001E6                     _handleDMX:
  2756                           	opt stack 22
  2757                           
  2758                           ;dmx.c: 85: unsigned char eFraming = (unsigned char)FERR;
  2759                           
  2760                           ;incstack = 0
  2761  0001E6  0E00               	movlw	0
  2762  0001E8  B4AB               	btfsc	4011,2,c	;volatile
  2763  0001EA  0E01               	movlw	1
  2764  0001EC  6E04               	movwf	handleDMX@eFraming,c
  2765                           
  2766                           ;dmx.c: 86: unsigned char received = RCREG;
  2767  0001EE  CFAE F005          	movff	4014,handleDMX@received	;volatile
  2768                           
  2769                           ;dmx.c: 88: resetSignalWatchdog();
  2770  0001F2  ECBE  F002         	call	_resetSignalWatchdog	;wreg free
  2771                           
  2772                           ;dmx.c: 90: if ( eFraming == 1) {
  2773  0001F6  0404               	decf	handleDMX@eFraming,w,c
  2774  0001F8  A4D8               	btfss	status,2,c
  2775  0001FA  D00B               	goto	i2l90
  2776                           
  2777                           ;dmx.c: 92: if ( dmxState == 0x00 ) {
  2778  0001FC  5038               	movf	_dmxState,w,c
  2779  0001FE  A4D8               	btfss	status,2,c
  2780  000200  D005               	goto	i2l91
  2781                           
  2782                           ;dmx.c: 93: currentAdress = 0;
  2783  000202  0E00               	movlw	0
  2784  000204  6E37               	movwf	_currentAdress,c
  2785                           
  2786                           ;dmx.c: 94: dmxState = 0x01;
  2787  000206  0E01               	movlw	1
  2788  000208  6E38               	movwf	_dmxState,c
  2789                           
  2790                           ;dmx.c: 95: }
  2791  00020A  0012               	return	
  2792  00020C                     i2l91:
  2793                           
  2794                           ;dmx.c: 96: else {
  2795                           ;dmx.c: 97: resetFramingWatchdog();
  2796  00020C  ECB8  F002         	call	_resetFramingWatchdog	;wreg free
  2797                           
  2798                           ;dmx.c: 98: }
  2799                           ;dmx.c: 99: return;
  2800  000210  0012               	return	
  2801  000212                     i2l90:
  2802                           
  2803                           ;dmx.c: 100: }
  2804                           ;dmx.c: 102: if ( (dmxState == 0x01) && (received == 0x00) ) {
  2805  000212  0438               	decf	_dmxState,w,c
  2806  000214  A4D8               	btfss	status,2,c
  2807  000216  D006               	goto	i2l94
  2808  000218  5005               	movf	handleDMX@received,w,c
  2809  00021A  A4D8               	btfss	status,2,c
  2810  00021C  D003               	goto	i2l94
  2811                           
  2812                           ;dmx.c: 104: dmxState = 0x02;
  2813  00021E  0E02               	movlw	2
  2814  000220  6E38               	movwf	_dmxState,c
  2815                           
  2816                           ;dmx.c: 105: return;
  2817  000222  0012               	return	
  2818  000224                     i2l94:
  2819                           
  2820                           ;dmx.c: 106: }
  2821                           ;dmx.c: 108: if ( dmxState == 0x02) {
  2822  000224  0E02               	movlw	2
  2823  000226  1838               	xorwf	_dmxState,w,c
  2824  000228  A4D8               	btfss	status,2,c
  2825  00022A  0012               	return	
  2826                           
  2827                           ;dmx.c: 110: if ( (currentAdress >= baseAddress) && (currentAdress < topAddress)) {
  2828  00022C  5036               	movf	_baseAddress,w,c
  2829  00022E  5C37               	subwf	_currentAdress,w,c
  2830  000230  A0D8               	btfss	status,0,c
  2831  000232  D00F               	goto	i2l96
  2832  000234  5035               	movf	_topAddress,w,c
  2833  000236  5C37               	subwf	_currentAdress,w,c
  2834  000238  B0D8               	btfsc	status,0,c
  2835  00023A  D00B               	goto	i2l96
  2836                           
  2837                           ;dmx.c: 112: if (received > 0) {
  2838  00023C  5005               	movf	handleDMX@received,w,c
  2839  00023E  A4D8               	btfss	status,2,c
  2840                           
  2841                           ;dmx.c: 113: resetDataWatchdog();
  2842  000240  ECC3  F002         	call	_resetDataWatchdog	;wreg free
  2843                           
  2844                           ;dmx.c: 114: }
  2845                           ;dmx.c: 115: setChannelLevel((unsigned char)(currentAdress - baseAddress), received);
  2846  000244  C005  F001         	movff	handleDMX@received,setChannelLevel@level
  2847  000248  5036               	movf	_baseAddress,w,c
  2848  00024A  0800               	sublw	0
  2849  00024C  2437               	addwf	_currentAdress,w,c
  2850  00024E  EC30  F001         	call	_setChannelLevel
  2851  000252                     i2l96:
  2852                           
  2853                           ;dmx.c: 116: }
  2854                           ;dmx.c: 118: if ( ++currentAdress >= 128)
  2855  000252  2A37               	incf	_currentAdress,f,c
  2856  000254  0E7F               	movlw	127
  2857  000256  6437               	cpfsgt	_currentAdress,c
  2858  000258  0012               	return	
  2859                           
  2860                           ;dmx.c: 119: dmxState = 0x00;
  2861  00025A  0E00               	movlw	0
  2862  00025C  6E38               	movwf	_dmxState,c
  2863  00025E  0012               	return	
  2864  000260                     __end_of_handleDMX:
  2865                           	opt stack 0
  2866                           pclatu	equ	0xFFB
  2867                           pclath	equ	0xFFA
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           prodh	equ	0xFF4
  2873                           prodl	equ	0xFF3
  2874                           intcon	equ	0xFF2
  2875                           postinc0	equ	0xFEE
  2876                           fsr0h	equ	0xFEA
  2877                           fsr0l	equ	0xFE9
  2878                           wreg	equ	0xFE8
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           bsr	equ	0xFE0
  2882                           indf2	equ	0xFDF
  2883                           postinc2	equ	0xFDE
  2884                           fsr2h	equ	0xFDA
  2885                           fsr2l	equ	0xFD9
  2886                           status	equ	0xFD8
  2887                           
  2888 ;; *************** function _setChannelLevel *****************
  2889 ;; Defined at:
  2890 ;;		line 36 in file "channels.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  channel         1    wreg     unsigned char 
  2893 ;;  level           1    0[COMRAM] unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  channel         1    2[COMRAM] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1
  2905 ;;      Params:         1       0       0
  2906 ;;      Locals:         1       0       0
  2907 ;;      Temps:          1       0       0
  2908 ;;      Totals:         3       0       0
  2909 ;;Total ram usage:        3 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_handleDMX
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text24
  2919  000260                     __ptext24:
  2920                           	opt stack 0
  2921  000260                     _setChannelLevel:
  2922                           	opt stack 22
  2923                           
  2924                           ;incstack = 0
  2925                           ;setChannelLevel@channel stored from wreg
  2926  000260  6E03               	movwf	setChannelLevel@channel,c
  2927                           
  2928                           ;channels.c: 38: if ( channel >= 32U ) {
  2929  000262  0E1F               	movlw	31
  2930  000264  6403               	cpfsgt	setChannelLevel@channel,c
  2931  000266  D001               	goto	i2l16
  2932  000268  0012               	return	
  2933  00026A                     i2l16:
  2934                           
  2935                           ;channels.c: 40: }
  2936                           ;channels.c: 41: if ( channels[channel].level != level) {
  2937  00026A  5003               	movf	setChannelLevel@channel,w,c
  2938  00026C  0D02               	mullw	2
  2939  00026E  0E01               	movlw	1
  2940  000270  26F3               	addwf	prodl,f,c
  2941  000272  0E00               	movlw	0
  2942  000274  22F4               	addwfc	prodh,f,c
  2943  000276  0E60               	movlw	low _channels
  2944  000278  24F3               	addwf	prodl,w,c
  2945  00027A  6ED9               	movwf	fsr2l,c
  2946  00027C  0E00               	movlw	high _channels
  2947  00027E  20F4               	addwfc	prodh,w,c
  2948  000280  6EDA               	movwf	fsr2h,c
  2949  000282  5001               	movf	setChannelLevel@level,w,c
  2950  000284  18DE               	xorwf	postinc2,w,c
  2951  000286  B4D8               	btfsc	status,2,c
  2952  000288  0012               	return	
  2953                           
  2954                           ;channels.c: 42: channels[channel].level = level;
  2955  00028A  5003               	movf	setChannelLevel@channel,w,c
  2956  00028C  0D02               	mullw	2
  2957  00028E  0E01               	movlw	1
  2958  000290  26F3               	addwf	prodl,f,c
  2959  000292  0E00               	movlw	0
  2960  000294  22F4               	addwfc	prodh,f,c
  2961  000296  0E60               	movlw	low _channels
  2962  000298  24F3               	addwf	prodl,w,c
  2963  00029A  6ED9               	movwf	fsr2l,c
  2964  00029C  0E00               	movlw	high _channels
  2965  00029E  20F4               	addwfc	prodh,w,c
  2966  0002A0  6EDA               	movwf	fsr2h,c
  2967  0002A2  C001  FFDF         	movff	setChannelLevel@level,indf2
  2968                           
  2969                           ;channels.c: 43: channels[channel].bChanged = 1;
  2970  0002A6  5003               	movf	setChannelLevel@channel,w,c
  2971  0002A8  0D02               	mullw	2
  2972  0002AA  0E60               	movlw	low _channels
  2973  0002AC  24F3               	addwf	prodl,w,c
  2974  0002AE  6ED9               	movwf	fsr2l,c
  2975  0002B0  0E00               	movlw	high _channels
  2976  0002B2  20F4               	addwfc	prodh,w,c
  2977  0002B4  6EDA               	movwf	fsr2h,c
  2978  0002B6  0E01               	movlw	1
  2979  0002B8  6EDF               	movwf	indf2,c
  2980  0002BA  0012               	return	
  2981  0002BC                     __end_of_setChannelLevel:
  2982                           	opt stack 0
  2983                           pclatu	equ	0xFFB
  2984                           pclath	equ	0xFFA
  2985                           tblptru	equ	0xFF8
  2986                           tblptrh	equ	0xFF7
  2987                           tblptrl	equ	0xFF6
  2988                           tablat	equ	0xFF5
  2989                           prodh	equ	0xFF4
  2990                           prodl	equ	0xFF3
  2991                           intcon	equ	0xFF2
  2992                           postinc0	equ	0xFEE
  2993                           fsr0h	equ	0xFEA
  2994                           fsr0l	equ	0xFE9
  2995                           wreg	equ	0xFE8
  2996                           fsr1h	equ	0xFE2
  2997                           fsr1l	equ	0xFE1
  2998                           bsr	equ	0xFE0
  2999                           indf2	equ	0xFDF
  3000                           postinc2	equ	0xFDE
  3001                           fsr2h	equ	0xFDA
  3002                           fsr2l	equ	0xFD9
  3003                           status	equ	0xFD8
  3004                           
  3005 ;; *************** function _resetSignalWatchdog *****************
  3006 ;; Defined at:
  3007 ;;		line 158 in file "dmx.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1
  3021 ;;      Params:         0       0       0
  3022 ;;      Locals:         0       0       0
  3023 ;;      Temps:          0       0       0
  3024 ;;      Totals:         0       0       0
  3025 ;;Total ram usage:        0 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_handleDMX
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text25
  3035  00057C                     __ptext25:
  3036                           	opt stack 0
  3037  00057C                     _resetSignalWatchdog:
  3038                           	opt stack 22
  3039                           
  3040                           ;dmx.c: 160: signalWatchdog = 1000;
  3041                           
  3042                           ;incstack = 0
  3043  00057C  0E03               	movlw	3
  3044  00057E  6E30               	movwf	_signalWatchdog+1,c	;volatile
  3045  000580  0EE8               	movlw	232
  3046  000582  6E2F               	movwf	_signalWatchdog,c	;volatile
  3047  000584  0012               	return		;funcret
  3048  000586                     __end_of_resetSignalWatchdog:
  3049                           	opt stack 0
  3050                           pclatu	equ	0xFFB
  3051                           pclath	equ	0xFFA
  3052                           tblptru	equ	0xFF8
  3053                           tblptrh	equ	0xFF7
  3054                           tblptrl	equ	0xFF6
  3055                           tablat	equ	0xFF5
  3056                           prodh	equ	0xFF4
  3057                           prodl	equ	0xFF3
  3058                           intcon	equ	0xFF2
  3059                           postinc0	equ	0xFEE
  3060                           fsr0h	equ	0xFEA
  3061                           fsr0l	equ	0xFE9
  3062                           wreg	equ	0xFE8
  3063                           fsr1h	equ	0xFE2
  3064                           fsr1l	equ	0xFE1
  3065                           bsr	equ	0xFE0
  3066                           indf2	equ	0xFDF
  3067                           postinc2	equ	0xFDE
  3068                           fsr2h	equ	0xFDA
  3069                           fsr2l	equ	0xFD9
  3070                           status	equ	0xFD8
  3071                           
  3072 ;; *************** function _resetFramingWatchdog *****************
  3073 ;; Defined at:
  3074 ;;		line 185 in file "dmx.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1
  3088 ;;      Params:         0       0       0
  3089 ;;      Locals:         0       0       0
  3090 ;;      Temps:          0       0       0
  3091 ;;      Totals:         0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_handleDMX
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text26
  3102  000570                     __ptext26:
  3103                           	opt stack 0
  3104  000570                     _resetFramingWatchdog:
  3105                           	opt stack 22
  3106                           
  3107                           ;dmx.c: 186: LATCbits.LATC2 = 1;
  3108                           
  3109                           ;incstack = 0
  3110  000570  848B               	bsf	3979,2,c	;volatile
  3111                           
  3112                           ;dmx.c: 187: framingErrorWatchdog = 1000;
  3113  000572  0E03               	movlw	3
  3114  000574  6E2E               	movwf	_framingErrorWatchdog+1,c	;volatile
  3115  000576  0EE8               	movlw	232
  3116  000578  6E2D               	movwf	_framingErrorWatchdog,c	;volatile
  3117  00057A  0012               	return		;funcret
  3118  00057C                     __end_of_resetFramingWatchdog:
  3119                           	opt stack 0
  3120                           pclatu	equ	0xFFB
  3121                           pclath	equ	0xFFA
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           intcon	equ	0xFF2
  3129                           postinc0	equ	0xFEE
  3130                           fsr0h	equ	0xFEA
  3131                           fsr0l	equ	0xFE9
  3132                           wreg	equ	0xFE8
  3133                           fsr1h	equ	0xFE2
  3134                           fsr1l	equ	0xFE1
  3135                           bsr	equ	0xFE0
  3136                           indf2	equ	0xFDF
  3137                           postinc2	equ	0xFDE
  3138                           fsr2h	equ	0xFDA
  3139                           fsr2l	equ	0xFD9
  3140                           status	equ	0xFD8
  3141                           
  3142 ;; *************** function _resetDataWatchdog *****************
  3143 ;; Defined at:
  3144 ;;		line 137 in file "dmx.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1
  3158 ;;      Params:         0       0       0
  3159 ;;      Locals:         0       0       0
  3160 ;;      Temps:          0       0       0
  3161 ;;      Totals:         0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_handleDMX
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text27
  3172  000586                     __ptext27:
  3173                           	opt stack 0
  3174  000586                     _resetDataWatchdog:
  3175                           	opt stack 22
  3176                           
  3177                           ;dmx.c: 138: dataWatchdog = 100;
  3178                           
  3179                           ;incstack = 0
  3180  000586  0E00               	movlw	0
  3181  000588  6E32               	movwf	_dataWatchdog+1,c	;volatile
  3182  00058A  0E64               	movlw	100
  3183  00058C  6E31               	movwf	_dataWatchdog,c	;volatile
  3184  00058E  0012               	return		;funcret
  3185  000590                     __end_of_resetDataWatchdog:
  3186                           	opt stack 0
  3187                           pclatu	equ	0xFFB
  3188                           pclath	equ	0xFFA
  3189                           tblptru	equ	0xFF8
  3190                           tblptrh	equ	0xFF7
  3191                           tblptrl	equ	0xFF6
  3192                           tablat	equ	0xFF5
  3193                           prodh	equ	0xFF4
  3194                           prodl	equ	0xFF3
  3195                           intcon	equ	0xFF2
  3196                           postinc0	equ	0xFEE
  3197                           fsr0h	equ	0xFEA
  3198                           fsr0l	equ	0xFE9
  3199                           wreg	equ	0xFE8
  3200                           fsr1h	equ	0xFE2
  3201                           fsr1l	equ	0xFE1
  3202                           bsr	equ	0xFE0
  3203                           indf2	equ	0xFDF
  3204                           postinc2	equ	0xFDE
  3205                           fsr2h	equ	0xFDA
  3206                           fsr2l	equ	0xFD9
  3207                           status	equ	0xFD8
  3208                           pclatu	equ	0xFFB
  3209                           pclath	equ	0xFFA
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           intcon	equ	0xFF2
  3217                           postinc0	equ	0xFEE
  3218                           fsr0h	equ	0xFEA
  3219                           fsr0l	equ	0xFE9
  3220                           wreg	equ	0xFE8
  3221                           fsr1h	equ	0xFE2
  3222                           fsr1l	equ	0xFE1
  3223                           bsr	equ	0xFE0
  3224                           indf2	equ	0xFDF
  3225                           postinc2	equ	0xFDE
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           status	equ	0xFD8
  3229                           
  3230                           	psect	rparam
  3231  0000                     pclatu	equ	0xFFB
  3232                           pclath	equ	0xFFA
  3233                           tblptru	equ	0xFF8
  3234                           tblptrh	equ	0xFF7
  3235                           tblptrl	equ	0xFF6
  3236                           tablat	equ	0xFF5
  3237                           prodh	equ	0xFF4
  3238                           prodl	equ	0xFF3
  3239                           intcon	equ	0xFF2
  3240                           postinc0	equ	0xFEE
  3241                           fsr0h	equ	0xFEA
  3242                           fsr0l	equ	0xFE9
  3243                           wreg	equ	0xFE8
  3244                           fsr1h	equ	0xFE2
  3245                           fsr1l	equ	0xFE1
  3246                           bsr	equ	0xFE0
  3247                           indf2	equ	0xFDF
  3248                           postinc2	equ	0xFDE
  3249                           fsr2h	equ	0xFDA
  3250                           fsr2l	equ	0xFD9
  3251                           status	equ	0xFD8
  3252                           
  3253                           	psect	temp
  3254  00003A                     btemp:
  3255                           	opt stack 0
  3256  00003A                     	ds	1
  3257  0000                     int$flags	set	btemp
  3258  0000                     wtemp6	set	btemp+1
  3259                           pclatu	equ	0xFFB
  3260                           pclath	equ	0xFFA
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           prodh	equ	0xFF4
  3266                           prodl	equ	0xFF3
  3267                           intcon	equ	0xFF2
  3268                           postinc0	equ	0xFEE
  3269                           fsr0h	equ	0xFEA
  3270                           fsr0l	equ	0xFE9
  3271                           wreg	equ	0xFE8
  3272                           fsr1h	equ	0xFE2
  3273                           fsr1l	equ	0xFE1
  3274                           bsr	equ	0xFE0
  3275                           indf2	equ	0xFDF
  3276                           postinc2	equ	0xFDE
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    512
    Data        1
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      57
    BANK0           160     14      78
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_handleDMX
    _handleDMX->_setChannelLevel

Critical Paths under _main in BANK0

    _main->_sendChangedChannels
    _sendChangedChannels->_pcaSetChannelLog
    _pcaSetChannelLog->_pcaSetChannelRaw
    _pcaSetChannelRaw->_getLookup
    _pcaSetChannelRaw->_pcaGetAddress
    _pcaInit->_pcaWakeUp
    _pcaWakeUp->_pcaGetAddress

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1816
              _decrementDataWatchdog
           _decrementFramingWatchdog
            _decrementSignalWatchdog
                            _i2cInit
                       _initChannels
                            _initDMX
                       _initHardware
                            _pcaInit
                          _pcaWakeUp
                           _resetDMX
                _sendChangedChannels
 ---------------------------------------------------------------------------------
 (1) _sendChangedChannels                                  4     4      0    1395
                                             10 BANK0      4     4      0
                   _pcaSetChannelLog
 ---------------------------------------------------------------------------------
 (2) _pcaSetChannelLog                                     3     1      2    1067
                                              7 BANK0      3     1      2
                          _getLookup
                   _pcaSetChannelRaw
 ---------------------------------------------------------------------------------
 (3) _pcaSetChannelRaw                                     4     1      3     583
                                              3 BANK0      4     1      3
                          _getLookup (ARG)
                            _i2cSend
                           _i2cStart
                            _i2cStop
                      _pcaGetAddress
 ---------------------------------------------------------------------------------
 (3) _getLookup                                            3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _resetDMX                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pcaInit                                              1     1      0     161
                                              4 BANK0      1     1      0
                          _pcaWakeUp
 ---------------------------------------------------------------------------------
 (1) _pcaWakeUp                                            1     1      0     130
                                              3 BANK0      1     1      0
                            _i2cSend
                           _i2cStart
                            _i2cStop
                      _pcaGetAddress
 ---------------------------------------------------------------------------------
 (4) _pcaGetAddress                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _i2cStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2cStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2cSend                                              1     1      0      31
                                              0 BANK0      1     1      0
                            _i2cWait
 ---------------------------------------------------------------------------------
 (5) _i2cWait                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHardware                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDMX                                              0     0      0       0
                  _getDMXBaseAddress
 ---------------------------------------------------------------------------------
 (2) _getDMXBaseAddress                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initChannels                                         1     1      0     130
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2cInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementSignalWatchdog                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementFramingWatchdog                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementDataWatchdog                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                             21    21      0       0
                                             23 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            18    18      0     298
                                              5 COMRAM    18    18      0
                          _handleDMX
 ---------------------------------------------------------------------------------
 (8) _handleDMX                                            2     2      0     298
                                              3 COMRAM     2     2      0
                  _resetDataWatchdog
               _resetFramingWatchdog
                _resetSignalWatchdog
                    _setChannelLevel
 ---------------------------------------------------------------------------------
 (9) _setChannelLevel                                      3     2      1     208
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (9) _resetSignalWatchdog                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _resetFramingWatchdog                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _resetDataWatchdog                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _decrementDataWatchdog
   _decrementFramingWatchdog
   _decrementSignalWatchdog
   _i2cInit
   _initChannels
   _initDMX
     _getDMXBaseAddress
   _initHardware
   _pcaInit
     _pcaWakeUp
       _i2cSend
         _i2cWait
       _i2cStart
       _i2cStop
       _pcaGetAddress
   _pcaWakeUp
     _i2cSend
       _i2cWait
     _i2cStart
     _i2cStop
     _pcaGetAddress
   _resetDMX
   _sendChangedChannels
     _pcaSetChannelLog
       _getLookup
       _pcaSetChannelRaw
         _getLookup (ARG)
         _i2cSend (ARG)
           _i2cWait
         _i2cStart (ARG)
         _i2cStop (ARG)
         _pcaGetAddress (ARG)

 _low_isr (ROOT)

 _high_isr (ROOT)
   _handleDMX
     _resetDataWatchdog
     _resetFramingWatchdog
     _resetSignalWatchdog
     _setChannelLevel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      E      4E       4       48.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      39       1       60.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      87       7        0.0%
DATA                 0      0      87       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 27 21:19:12 2020

                       i2cSend@dat 00A0                        _SSPSTATbits 000FC7  
                               l11 03AE                                 l21 0176  
                               _BF 007E38                                 l23 01E0  
                               l24 01B2                                 l25 01BA  
                               bsr 000FE0            __end_of_setChannelLevel 02BC  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                              l106 0518                                l116 04E8  
                              l300 02EC                                l301 0304  
                              l126 052C                                l228 0538  
                              l190 059A                                l318 04C6  
                              l196 0592                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                       __CFG_BORV$19 000000  
                              prod 000FF3                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                               l1711 03A6  
                             l1723 016E                               _CREN 007D5C  
                             _FERR 007D5A                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _PEIE 007F96                               i2l16 026A  
                             i2l90 0212                               _OERR 007D59  
                             i2l91 020C                               i2l94 0224  
                             i2l96 0252                               _SYNC 007D64  
                      _bI2CTimeout 0034                               _main 02BC  
             _resetFramingWatchdog 0570                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             fsr0l 000FE9                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             btemp 003A                               prodh 000FF4  
                             prodl 000FF3               setChannelLevel@level 0001  
                             start 00C6                      __CFG_IESO$OFF 000000  
                    __CFG_FOSC$IRC 000000                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000000                    __end_of_i2cInit 0506  
                  __end_of_i2cSend 0542                    __end_of_i2cWait 0554  
                  __end_of_i2cStop 0598       __size_of_resetSignalWatchdog 000A  
                    __CFG_PLLEN$ON 000000                    ??_pcaGetAddress 00A0  
                            ?_main 0001                              _ANSEL 000F7E  
                            i2l246 011C                              _RCREG 000FAE  
                   __CFG_BBSIZ$OFF 000000                              _PORTA 000F80  
                            _PORTB 000F81                              _PORTC 000F82  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                       pcaInit@which 00A4  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                      __CFG_WRTB$OFF 000000  
                  __end_of_pcaInit 0570                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                    __end_of_initDMX 0446  
                   __CFG_EBTRB$OFF 000000                    __end_of_low_isr 00C6  
                            pclath 000FFA                              tablat 000FF5  
            ?_resetFramingWatchdog 0001                              status 000FD8  
                            wtemp6 003B                      ?_initChannels 0001  
                   __CFG_HFOFST$ON 000000                      ?_initHardware 0001  
                  __initialization 03E2                       __end_of_main 0316  
                 __end_of_i2cStart 05A0                     __CFG_PCLKEN$ON 000000  
                 ?_setChannelLevel 0001                             ??_main 00AE  
   __size_of_decrementDataWatchdog 0016                      __activetblptr 000002  
    __end_of_decrementDataWatchdog 051C                             _ANSELH 000F7F  
                   __CFG_WDTEN$OFF 000000                     ??_initChannels 00A0  
                           _SPBRG1 000FAF                             _SPBRGH 000FB0  
                           _SSPADD 000FC8                             _SSPBUF 000FC9  
                        ??_i2cInit 00A0                          ??_i2cSend 00A0  
                        ??_i2cWait 00A0                          ??_i2cStop 00A0  
                   ??_initHardware 00A0                     __CFG_PWRTEN$ON 000000  
                   __CFG_XINST$OFF 000000        __end_of_sendChangedChannels 01E6  
                 __end_of_high_isr 0168                     __CFG_STVREN$ON 000000  
         __end_of_pcaSetChannelLog 04B2           __end_of_pcaSetChannelRaw 035C  
                           clear_0 03FA                             clear_1 0406  
                           _lookup 3DFF                          ??_pcaInit 00A4  
                        ??_initDMX 00A0                   __end_of_resetDMX 0562  
           setChannelLevel@channel 0003                       __pdataCOMRAM 0039  
 __size_of_decrementSignalWatchdog 001A                       __mediumconst 3DFE  
                        ??_low_isr 0018                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
           ??_resetFramingWatchdog 0001                         __accesstop 0060  
          __end_of__initialization 040C                       _dataWatchdog 0031  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                _pcaGetAddress$902 00A1                 __size_of_handleDMX 007A  
         _decrementFramingWatchdog 051C                 __size_of_getLookup 0024  
                    _currentAdress 0037                _resetSignalWatchdog 057C  
               __size_of_pcaWakeUp 0026                         __pbssBANK0 0060  
                        ?_i2cStart 0001               ?_resetSignalWatchdog 0001  
                          _CM1CON0 000F6D                            _CM2CON0 000F6B  
             __end_of_initChannels 03E2               __end_of_initHardware 03A0  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                        ?_high_isr 0001                            _SSPSTAT 000FC7  
                       ??_i2cStart 00A0                            _i2cInit 04EE  
                          _i2cSend 0530                            _i2cWait 0542  
                          _i2cStop 0590                  __end_of_handleDMX 0260  
                __end_of_getLookup 0490                            __Hparam 0000  
                        ?_resetDMX 0001                            __Lparam 0000  
            ??_resetSignalWatchdog 0001                  __end_of_pcaWakeUp 046C  
          pcaSetChannelLog@channel 00A7                            __pcinit 03E2  
                          __ramtop 0200                            __ptext0 02BC  
                          __ptext1 0168                            __ptext2 0490  
                          __ptext3 0316                            __ptext4 046C  
                          __ptext5 0554                            __ptext6 0562  
                          __ptext7 0446                            __ptext8 04B2  
                          __ptext9 0590                            _pcaInit 0562  
            __end_of_pcaGetAddress 04D4            _decrementSignalWatchdog 04D4  
                          _initDMX 041A                            _low_isr 0018  
                       ??_high_isr 0006                     _signalWatchdog 002F  
                   __pintcode_body 00CA               end_of_initialization 040C  
                    __Lmediumconst 3DFE                            int_func 00CA  
                       ??_resetDMX 00A0            pcaSetChannelRaw@channel 00A3  
                _resetDataWatchdog 0586                            postinc0 000FEE  
                          postinc2 000FDE                         _topAddress 0035  
               ?_resetDataWatchdog 0001                  ?_pcaSetChannelLog 00A7  
                ?_pcaSetChannelRaw 00A3                 ??_pcaSetChannelLog 00A9  
               ??_pcaSetChannelRaw 00A6                ??_resetDataWatchdog 0001  
                        _TRISBbits 000F93              _decrementDataWatchdog 0506  
         __size_of_setChannelLevel 005C          __end_of_resetDataWatchdog 0590  
       ??_decrementFramingWatchdog 00A0              __size_of_initChannels 0042  
        ??_decrementSignalWatchdog 00A0                        _BAUDCONbits 000FB8  
                    __pidataCOMRAM 05A8              __size_of_initHardware 0044  
     __size_of_sendChangedChannels 007E                     __end_of_lookup 3FFF  
              start_initialization 03E2                        _baseAddress 0036  
                handleDMX@eFraming 0004      __size_of_resetFramingWatchdog 000C  
                     _initChannels 03A0                  __size_of_i2cStart 0008  
                     _initHardware 035C                     pcaWakeUp@which 00A3  
                    initChannels@i 00A0          sendChangedChannels@device 00AB  
           ?_decrementDataWatchdog 0001                        __pbssCOMRAM 002D  
                    __pcstackBANK0 00A0                  handleDMX@received 0005  
  __end_of_decrementSignalWatchdog 04EE                       _errorCounter 0033  
                __size_of_high_isr 0160                  ??_setChannelLevel 0002  
                         ?_i2cInit 0001                           ?_i2cSend 0001  
                         ?_i2cWait 0001                    _bAllChannelsOff 0039  
                         ?_i2cStop 0001         __size_of_resetDataWatchdog 000A  
                        __pintcode 0008                          _handleDMX 01E6  
                    __pmediumconst 3DFE                  __size_of_resetDMX 000E  
                        _getLookup 046C                        __pintcodelo 0018  
                         ?_pcaInit 0001                          _pcaWakeUp 0446  
                         ?_initDMX 0001                           ?_low_isr 0001  
      __end_of_resetSignalWatchdog 0586               sendChangedChannels@i 00AD  
                         _LATCbits 000F8B                           _IPR1bits 000F9F  
                         _PIE1bits 000F9D                     getLookup@value 00A2  
                         _PIR1bits 000F9E   __end_of_decrementFramingWatchdog 0530  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                       ?_handleDMX 0001                         ?_getLookup 00A0  
                       ?_pcaWakeUp 0001                  _getDMXBaseAddress 05A0  
               ?_getDMXBaseAddress 0001                           _i2cStart 0598  
        __size_of_pcaSetChannelLog 0022          __size_of_pcaSetChannelRaw 0046  
              _sendChangedChannels 0168                 pcaGetAddress@which 00A0  
                 __size_of_i2cInit 0018                   __size_of_i2cSend 0012  
                 __size_of_i2cWait 0012             __size_of_pcaGetAddress 0022  
              ??_getDMXBaseAddress 00A0                   __size_of_i2cStop 0008  
                         __Hrparam 0000                           __Lrparam 0000  
               __CFG_BOREN$SBORDIS 000000               ?_sendChangedChannels 0001  
                 __size_of_pcaInit 000E                   __size_of_initDMX 002C  
        __end_of_getDMXBaseAddress 05A8                           _channels 0060  
                 __size_of_low_isr 00AE                           __ptext10 0598  
                         __ptext11 0530                           __ptext20 0506  
                         __ptext12 0542                           __ptext13 035C  
                         __ptext14 041A                           __ptext23 01E6  
                         __ptext15 05A0                           __ptext24 0260  
                         __ptext16 03A0                           __ptext25 057C  
                         __ptext17 04EE                           __ptext26 0570  
                         __ptext18 04D4                           __ptext27 0586  
                         __ptext19 051C         sendChangedChannels@channel 00AC  
                         _high_isr 0008                           _dmxState 0038  
                    __size_of_main 005A              pcaSetChannelLog@value 00A8  
            pcaSetChannelLog@which 00A9                           _resetDMX 0554  
            pcaSetChannelRaw@level 00A4                        ??_handleDMX 0004  
            pcaSetChannelRaw@which 00A6                           int$flags 003A  
                      ??_getLookup 00A2       __end_of_resetFramingWatchdog 057C  
          ??_decrementDataWatchdog 00A0              ??_sendChangedChannels 00AA  
                      ??_pcaWakeUp 00A3                      _pcaGetAddress 04B2  
                      _OSCTUNEbits 000F9B                         _INTCONbits 000FF2  
                  _setChannelLevel 0260  __size_of_decrementFramingWatchdog 0014  
        ?_decrementFramingWatchdog 0001                           intlevel1 0000  
                         intlevel2 0000               _framingErrorWatchdog 002D  
                       _RCSTA1bits 000FAB                         _OSCCONbits 000FD3  
         ?_decrementSignalWatchdog 0001                     ?_pcaGetAddress 0001  
       __size_of_getDMXBaseAddress 0008                        _SSPCON1bits 000FC6  
                      _SSPCON2bits 000FC5                   _pcaSetChannelLog 0490  
                 _pcaSetChannelRaw 0316  
