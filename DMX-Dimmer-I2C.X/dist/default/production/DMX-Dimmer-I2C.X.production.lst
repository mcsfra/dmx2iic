

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Feb 05 08:16:42 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.45
    47                           ; Generated 16/11/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F14K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  0005B2                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _bAllChannelsOff
    86  0005B2  01                 	db	1
    87                           
    88                           	psect	mediumconst
    89  003DFE                     __pmediumconst:
    90                           	opt stack 0
    91  003DFE  00                 	db	0
    92  003DFF                     _lookup:
    93                           	opt stack 0
    94  003DFF  0000               	dw	0
    95  003E01  0001               	dw	1
    96  003E03  0002               	dw	2
    97  003E05  0003               	dw	3
    98  003E07  0004               	dw	4
    99  003E09  0005               	dw	5
   100  003E0B  0006               	dw	6
   101  003E0D  0007               	dw	7
   102  003E0F  0008               	dw	8
   103  003E11  0009               	dw	9
   104  003E13  000A               	dw	10
   105  003E15  000B               	dw	11
   106  003E17  000C               	dw	12
   107  003E19  000D               	dw	13
   108  003E1B  000E               	dw	14
   109  003E1D  000F               	dw	15
   110  003E1F  0010               	dw	16
   111  003E21  0012               	dw	18
   112  003E23  0013               	dw	19
   113  003E25  0014               	dw	20
   114  003E27  0015               	dw	21
   115  003E29  0017               	dw	23
   116  003E2B  0018               	dw	24
   117  003E2D  0019               	dw	25
   118  003E2F  001A               	dw	26
   119  003E31  001C               	dw	28
   120  003E33  001D               	dw	29
   121  003E35  001F               	dw	31
   122  003E37  0020               	dw	32
   123  003E39  0021               	dw	33
   124  003E3B  0023               	dw	35
   125  003E3D  0024               	dw	36
   126  003E3F  0026               	dw	38
   127  003E41  0028               	dw	40
   128  003E43  0029               	dw	41
   129  003E45  002B               	dw	43
   130  003E47  002C               	dw	44
   131  003E49  002E               	dw	46
   132  003E4B  0030               	dw	48
   133  003E4D  0031               	dw	49
   134  003E4F  0033               	dw	51
   135  003E51  0035               	dw	53
   136  003E53  0037               	dw	55
   137  003E55  0039               	dw	57
   138  003E57  003B               	dw	59
   139  003E59  003C               	dw	60
   140  003E5B  003E               	dw	62
   141  003E5D  0040               	dw	64
   142  003E5F  0042               	dw	66
   143  003E61  0044               	dw	68
   144  003E63  0047               	dw	71
   145  003E65  0049               	dw	73
   146  003E67  004B               	dw	75
   147  003E69  004D               	dw	77
   148  003E6B  004F               	dw	79
   149  003E6D  0052               	dw	82
   150  003E6F  0054               	dw	84
   151  003E71  0056               	dw	86
   152  003E73  0059               	dw	89
   153  003E75  005B               	dw	91
   154  003E77  005E               	dw	94
   155  003E79  0060               	dw	96
   156  003E7B  0063               	dw	99
   157  003E7D  0065               	dw	101
   158  003E7F  0068               	dw	104
   159  003E81  006B               	dw	107
   160  003E83  006D               	dw	109
   161  003E85  0070               	dw	112
   162  003E87  0073               	dw	115
   163  003E89  0076               	dw	118
   164  003E8B  0079               	dw	121
   165  003E8D  007C               	dw	124
   166  003E8F  007F               	dw	127
   167  003E91  0082               	dw	130
   168  003E93  0085               	dw	133
   169  003E95  0088               	dw	136
   170  003E97  008C               	dw	140
   171  003E99  008F               	dw	143
   172  003E9B  0092               	dw	146
   173  003E9D  0096               	dw	150
   174  003E9F  0099               	dw	153
   175  003EA1  009D               	dw	157
   176  003EA3  00A0               	dw	160
   177  003EA5  00A4               	dw	164
   178  003EA7  00A8               	dw	168
   179  003EA9  00AC               	dw	172
   180  003EAB  00AF               	dw	175
   181  003EAD  00B3               	dw	179
   182  003EAF  00B7               	dw	183
   183  003EB1  00BB               	dw	187
   184  003EB3  00C0               	dw	192
   185  003EB5  00C4               	dw	196
   186  003EB7  00C8               	dw	200
   187  003EB9  00CC               	dw	204
   188  003EBB  00D1               	dw	209
   189  003EBD  00D5               	dw	213
   190  003EBF  00DA               	dw	218
   191  003EC1  00DF               	dw	223
   192  003EC3  00E3               	dw	227
   193  003EC5  00E8               	dw	232
   194  003EC7  00ED               	dw	237
   195  003EC9  00F2               	dw	242
   196  003ECB  00F7               	dw	247
   197  003ECD  00FC               	dw	252
   198  003ECF  0102               	dw	258
   199  003ED1  0107               	dw	263
   200  003ED3  010D               	dw	269
   201  003ED5  0112               	dw	274
   202  003ED7  0118               	dw	280
   203  003ED9  011E               	dw	286
   204  003EDB  0123               	dw	291
   205  003EDD  0129               	dw	297
   206  003EDF  012F               	dw	303
   207  003EE1  0136               	dw	310
   208  003EE3  013C               	dw	316
   209  003EE5  0142               	dw	322
   210  003EE7  0149               	dw	329
   211  003EE9  014F               	dw	335
   212  003EEB  0156               	dw	342
   213  003EED  015D               	dw	349
   214  003EEF  0164               	dw	356
   215  003EF1  016B               	dw	363
   216  003EF3  0172               	dw	370
   217  003EF5  0179               	dw	377
   218  003EF7  0181               	dw	385
   219  003EF9  0188               	dw	392
   220  003EFB  0190               	dw	400
   221  003EFD  0198               	dw	408
   222  003EFF  01A0               	dw	416
   223  003F01  01A8               	dw	424
   224  003F03  01B0               	dw	432
   225  003F05  01B9               	dw	441
   226  003F07  01C1               	dw	449
   227  003F09  01CA               	dw	458
   228  003F0B  01D3               	dw	467
   229  003F0D  01DC               	dw	476
   230  003F0F  01E5               	dw	485
   231  003F11  01EE               	dw	494
   232  003F13  01F7               	dw	503
   233  003F15  0201               	dw	513
   234  003F17  020B               	dw	523
   235  003F19  0215               	dw	533
   236  003F1B  021F               	dw	543
   237  003F1D  0229               	dw	553
   238  003F1F  0234               	dw	564
   239  003F21  023E               	dw	574
   240  003F23  0249               	dw	585
   241  003F25  0254               	dw	596
   242  003F27  0260               	dw	608
   243  003F29  026B               	dw	619
   244  003F2B  0277               	dw	631
   245  003F2D  0282               	dw	642
   246  003F2F  028F               	dw	655
   247  003F31  029B               	dw	667
   248  003F33  02A7               	dw	679
   249  003F35  02B4               	dw	692
   250  003F37  02C1               	dw	705
   251  003F39  02CE               	dw	718
   252  003F3B  02DB               	dw	731
   253  003F3D  02E9               	dw	745
   254  003F3F  02F7               	dw	759
   255  003F41  0305               	dw	773
   256  003F43  0313               	dw	787
   257  003F45  0321               	dw	801
   258  003F47  0330               	dw	816
   259  003F49  033F               	dw	831
   260  003F4B  034F               	dw	847
   261  003F4D  035E               	dw	862
   262  003F4F  036E               	dw	878
   263  003F51  037E               	dw	894
   264  003F53  038F               	dw	911
   265  003F55  039F               	dw	927
   266  003F57  03B0               	dw	944
   267  003F59  03C1               	dw	961
   268  003F5B  03D3               	dw	979
   269  003F5D  03E5               	dw	997
   270  003F5F  03F7               	dw	1015
   271  003F61  040A               	dw	1034
   272  003F63  041C               	dw	1052
   273  003F65  0430               	dw	1072
   274  003F67  0443               	dw	1091
   275  003F69  0457               	dw	1111
   276  003F6B  046B               	dw	1131
   277  003F6D  047F               	dw	1151
   278  003F6F  0494               	dw	1172
   279  003F71  04AA               	dw	1194
   280  003F73  04BF               	dw	1215
   281  003F75  04D5               	dw	1237
   282  003F77  04EB               	dw	1259
   283  003F79  0502               	dw	1282
   284  003F7B  0519               	dw	1305
   285  003F7D  0531               	dw	1329
   286  003F7F  0549               	dw	1353
   287  003F81  0561               	dw	1377
   288  003F83  057A               	dw	1402
   289  003F85  0593               	dw	1427
   290  003F87  05AD               	dw	1453
   291  003F89  05C7               	dw	1479
   292  003F8B  05E1               	dw	1505
   293  003F8D  05FC               	dw	1532
   294  003F8F  0618               	dw	1560
   295  003F91  0634               	dw	1588
   296  003F93  0650               	dw	1616
   297  003F95  066D               	dw	1645
   298  003F97  068A               	dw	1674
   299  003F99  06A8               	dw	1704
   300  003F9B  06C7               	dw	1735
   301  003F9D  06E6               	dw	1766
   302  003F9F  0705               	dw	1797
   303  003FA1  0725               	dw	1829
   304  003FA3  0746               	dw	1862
   305  003FA5  0767               	dw	1895
   306  003FA7  0789               	dw	1929
   307  003FA9  07AB               	dw	1963
   308  003FAB  07CE               	dw	1998
   309  003FAD  07F2               	dw	2034
   310  003FAF  0816               	dw	2070
   311  003FB1  083B               	dw	2107
   312  003FB3  0860               	dw	2144
   313  003FB5  0886               	dw	2182
   314  003FB7  08AD               	dw	2221
   315  003FB9  08D4               	dw	2260
   316  003FBB  08FC               	dw	2300
   317  003FBD  0925               	dw	2341
   318  003FBF  094E               	dw	2382
   319  003FC1  0979               	dw	2425
   320  003FC3  09A4               	dw	2468
   321  003FC5  09CF               	dw	2511
   322  003FC7  09FC               	dw	2556
   323  003FC9  0A29               	dw	2601
   324  003FCB  0A57               	dw	2647
   325  003FCD  0A86               	dw	2694
   326  003FCF  0AB5               	dw	2741
   327  003FD1  0AE6               	dw	2790
   328  003FD3  0B17               	dw	2839
   329  003FD5  0B49               	dw	2889
   330  003FD7  0B7C               	dw	2940
   331  003FD9  0BB0               	dw	2992
   332  003FDB  0BE4               	dw	3044
   333  003FDD  0C1A               	dw	3098
   334  003FDF  0C51               	dw	3153
   335  003FE1  0C88               	dw	3208
   336  003FE3  0CC1               	dw	3265
   337  003FE5  0CFA               	dw	3322
   338  003FE7  0D35               	dw	3381
   339  003FE9  0D70               	dw	3440
   340  003FEB  0DAD               	dw	3501
   341  003FED  0DEA               	dw	3562
   342  003FEF  0E29               	dw	3625
   343  003FF1  0E69               	dw	3689
   344  003FF3  0EAA               	dw	3754
   345  003FF5  0EEC               	dw	3820
   346  003FF7  0F2F               	dw	3887
   347  003FF9  0F73               	dw	3955
   348  003FFB  0FB8               	dw	4024
   349  003FFD  0FFF               	dw	4095
   350  003FFF                     __end_of_lookup:
   351                           	opt stack 0
   352  0000                     _LATAbits	set	3977
   353  0000                     _INTCONbits	set	4082
   354  0000                     _RCONbits	set	4048
   355  0000                     _PIR1bits	set	3998
   356  0000                     _SSPSTATbits	set	4039
   357  0000                     _SSPBUF	set	4041
   358  0000                     _SSPCON2	set	4037
   359  0000                     _SSPCON2bits	set	4037
   360  0000                     _SSPSTAT	set	4039
   361  0000                     _SSPCON1	set	4038
   362  0000                     _SSPADD	set	4040
   363  0000                     _SSPCON1bits	set	4038
   364  0000                     _TRISBbits	set	3987
   365  0000                     _TRISC	set	3988
   366  0000                     _LATC	set	3979
   367  0000                     _TRISB	set	3987
   368  0000                     _LATB	set	3978
   369  0000                     _PORTB	set	3969
   370  0000                     _TRISA	set	3986
   371  0000                     _PORTA	set	3968
   372  0000                     _LATA	set	3977
   373  0000                     _ANSELH	set	3967
   374  0000                     _ANSEL	set	3966
   375  0000                     _CM2CON0	set	3947
   376  0000                     _CM1CON0	set	3949
   377  0000                     _OSCTUNEbits	set	3995
   378  0000                     _OSCCONbits	set	4051
   379  0000                     _LATCbits	set	3979
   380  0000                     _RCREG	set	4014
   381  0000                     _PORTC	set	3970
   382  0000                     _IPR1bits	set	3999
   383  0000                     _PIE1bits	set	3997
   384  0000                     _RCSTA1bits	set	4011
   385  0000                     _SPBRGH	set	4016
   386  0000                     _SPBRG1	set	4015
   387  0000                     _BAUDCONbits	set	4024
   388  0000                     _CREN	set	32092
   389  0000                     _OERR	set	32089
   390  0000                     _PEIE	set	32662
   391  0000                     _BF	set	32312
   392  0000                     _FERR	set	32090
   393  0000                     _SYNC	set	32100
   394                           
   395                           ; #config settings
   396  003FFF  00                 	db	0	; dummy byte at the end
   397  0000                     
   398                           	psect	cinit
   399  0003EC                     __pcinit:
   400                           	opt stack 0
   401  0003EC                     start_initialization:
   402                           	opt stack 0
   403  0003EC                     __initialization:
   404                           	opt stack 0
   405                           
   406                           ; Initialize objects allocated to COMRAM (1 bytes)
   407                           ; load TBLPTR registers with __pidataCOMRAM
   408  0003EC  0EB2               	movlw	low __pidataCOMRAM
   409  0003EE  6EF6               	movwf	tblptrl,c
   410  0003F0  0E05               	movlw	high __pidataCOMRAM
   411  0003F2  6EF7               	movwf	tblptrh,c
   412  0003F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   413  0003F6  6EF8               	movwf	tblptru,c
   414  0003F8  0009               	tblrd		*+	;fetch initializer
   415  0003FA  CFF5 F039          	movff	tablat,__pdataCOMRAM
   416                           
   417                           ; Clear objects allocated to BANK0 (64 bytes)
   418  0003FE  EE00  F060         	lfsr	0,__pbssBANK0
   419  000402  0E40               	movlw	64
   420  000404                     clear_0:
   421  000404  6AEE               	clrf	postinc0,c
   422  000406  06E8               	decf	wreg,f,c
   423  000408  E1FD               	bnz	clear_0
   424                           
   425                           ; Clear objects allocated to COMRAM (12 bytes)
   426  00040A  EE00  F02D         	lfsr	0,__pbssCOMRAM
   427  00040E  0E0C               	movlw	12
   428  000410                     clear_1:
   429  000410  6AEE               	clrf	postinc0,c
   430  000412  06E8               	decf	wreg,f,c
   431  000414  E1FD               	bnz	clear_1
   432  000416                     end_of_initialization:
   433                           	opt stack 0
   434  000416                     __end_of__initialization:
   435                           	opt stack 0
   436  000416  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   437  000418  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   438  00041A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   439  00041C  6EF8               	movwf	tblptru,c
   440  00041E  0100               	movlb	0
   441  000420  EF30  F001         	goto	_main	;jump to C main() function
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           
   449                           	psect	bssCOMRAM
   450  00002D                     __pbssCOMRAM:
   451                           	opt stack 0
   452  00002D                     _framingErrorWatchdog:
   453                           	opt stack 0
   454  00002D                     	ds	2
   455  00002F                     _signalWatchdog:
   456                           	opt stack 0
   457  00002F                     	ds	2
   458  000031                     _dataWatchdog:
   459                           	opt stack 0
   460  000031                     	ds	2
   461  000033                     _errorCounter:
   462                           	opt stack 0
   463  000033                     	ds	1
   464  000034                     _bI2CTimeout:
   465                           	opt stack 0
   466  000034                     	ds	1
   467  000035                     _topAddress:
   468                           	opt stack 0
   469  000035                     	ds	1
   470  000036                     _baseAddress:
   471                           	opt stack 0
   472  000036                     	ds	1
   473  000037                     _currentAdress:
   474                           	opt stack 0
   475  000037                     	ds	1
   476  000038                     _dmxState:
   477                           	opt stack 0
   478  000038                     	ds	1
   479                           tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           postinc0	equ	0xFEE
   484                           wreg	equ	0xFE8
   485                           
   486                           	psect	dataCOMRAM
   487  000039                     __pdataCOMRAM:
   488                           	opt stack 0
   489  000039                     _bAllChannelsOff:
   490                           	opt stack 0
   491  000039                     	ds	1
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           
   499                           	psect	bssBANK0
   500  000060                     __pbssBANK0:
   501                           	opt stack 0
   502  000060                     _channels:
   503                           	opt stack 0
   504  000060                     	ds	64
   505                           tblptru	equ	0xFF8
   506                           tblptrh	equ	0xFF7
   507                           tblptrl	equ	0xFF6
   508                           tablat	equ	0xFF5
   509                           postinc0	equ	0xFEE
   510                           wreg	equ	0xFE8
   511                           
   512                           	psect	cstackBANK0
   513  0000A0                     __pcstackBANK0:
   514                           	opt stack 0
   515  0000A0                     ?_getLookup:
   516                           	opt stack 0
   517  0000A0                     initChannels@i:
   518                           	opt stack 0
   519  0000A0                     i2cSend@dat:
   520                           	opt stack 0
   521  0000A0                     pcaGetAddress@which:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x0
   525  0000A0                     	ds	1
   526  0000A1                     _pcaGetAddress$940:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x1
   530  0000A1                     	ds	1
   531  0000A2                     getLookup@value:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x2
   535  0000A2                     	ds	1
   536  0000A3                     pcaSetChannelRaw@channel:
   537                           	opt stack 0
   538  0000A3                     pcaWakeUp@which:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x3
   542  0000A3                     	ds	1
   543  0000A4                     pcaInit@which:
   544                           	opt stack 0
   545  0000A4                     pcaSetChannelRaw@level:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x4
   549  0000A4                     	ds	2
   550  0000A6                     pcaSetChannelRaw@which:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x6
   554  0000A6                     	ds	1
   555  0000A7                     pcaSetChannelLog@channel:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x7
   559  0000A7                     	ds	1
   560  0000A8                     pcaSetChannelLog@value:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x8
   564  0000A8                     	ds	1
   565  0000A9                     pcaSetChannelLog@which:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x9
   569  0000A9                     	ds	1
   570  0000AA                     
   571                           ; 1 bytes @ 0xA
   572  0000AA                     	ds	1
   573  0000AB                     sendChangedChannels@device:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0xB
   577  0000AB                     	ds	1
   578  0000AC                     sendChangedChannels@channel:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0xC
   582  0000AC                     	ds	1
   583  0000AD                     sendChangedChannels@i:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0xD
   587  0000AD                     	ds	1
   588  0000AE                     tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           postinc0	equ	0xFEE
   593                           wreg	equ	0xFE8
   594                           
   595                           ; 1 bytes @ 0xE
   596                           
   597                           	psect	cstackCOMRAM
   598  000001                     __pcstackCOMRAM:
   599                           	opt stack 0
   600  000001                     setChannelLevel@level:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x0
   604  000001                     	ds	1
   605  000002                     
   606                           ; 1 bytes @ 0x1
   607  000002                     	ds	1
   608  000003                     setChannelLevel@channel:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x2
   612  000003                     	ds	1
   613  000004                     handleDMX@eFraming:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x3
   617  000004                     	ds	1
   618  000005                     handleDMX@received:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x4
   622  000005                     	ds	1
   623  000006                     ??_high_isr:
   624                           
   625                           ; 1 bytes @ 0x5
   626  000006                     	ds	18
   627  000018                     ??_low_isr:
   628                           
   629                           ; 1 bytes @ 0x17
   630  000018                     	ds	21
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           
   638 ;;
   639 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   640 ;;
   641 ;; *************** function _main *****************
   642 ;; Defined at:
   643 ;;		line 40 in file "main.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1
   657 ;;      Params:         0       0       0
   658 ;;      Locals:         0       0       0
   659 ;;      Temps:          0       0       0
   660 ;;      Totals:         0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels required when called:    9
   663 ;; This function calls:
   664 ;;		_decrementDataWatchdog
   665 ;;		_decrementFramingWatchdog
   666 ;;		_decrementSignalWatchdog
   667 ;;		_i2cInit
   668 ;;		_initChannels
   669 ;;		_initDMX
   670 ;;		_initHardware
   671 ;;		_pcaInit
   672 ;;		_pcaWakeUp
   673 ;;		_resetDMX
   674 ;;		_sendChangedChannels
   675 ;; This function is called by:
   676 ;;		Startup code after reset
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text0
   681  000260                     __ptext0:
   682                           	opt stack 0
   683  000260                     _main:
   684                           	opt stack 22
   685                           
   686                           ;main.c: 42: initHardware();
   687                           
   688                           ;incstack = 0
   689  000260  ECB3  F001         	call	_initHardware	;wreg free
   690                           
   691                           ;main.c: 43: initChannels();
   692  000264  ECD5  F001         	call	_initChannels	;wreg free
   693                           
   694                           ;main.c: 44: i2cInit();
   695  000268  EC7C  F002         	call	_i2cInit	;wreg free
   696                           
   697                           ;main.c: 45: pcaInit(0);
   698  00026C  0E00               	movlw	0
   699  00026E  ECB6  F002         	call	_pcaInit
   700                           
   701                           ;main.c: 46: pcaInit(1);
   702  000272  0E01               	movlw	1
   703  000274  ECB6  F002         	call	_pcaInit
   704                           
   705                           ;main.c: 47: initDMX();
   706  000278  EC12  F002         	call	_initDMX	;wreg free
   707                           
   708                           ;main.c: 49: RCONbits.IPEN = 1;
   709  00027C  8ED0               	bsf	4048,7,c	;volatile
   710                           
   711                           ;main.c: 56: INTCONbits.GIEH = 1;
   712  00027E  8EF2               	bsf	intcon,7,c	;volatile
   713                           
   714                           ;main.c: 57: INTCONbits.GIEL = 1;
   715  000280  8CF2               	bsf	intcon,6,c	;volatile
   716                           
   717                           ;main.c: 58: PEIE = 1;
   718  000282  8CF2               	bsf	intcon,6,c	;volatile
   719                           
   720                           ;main.c: 64: pcaWakeUp(0);
   721  000284  0E00               	movlw	0
   722  000286  EC28  F002         	call	_pcaWakeUp
   723                           
   724                           ;main.c: 65: pcaWakeUp(1);
   725  00028A  0E01               	movlw	1
   726  00028C  EC28  F002         	call	_pcaWakeUp
   727  000290                     
   728                           ;main.c: 71: if ( LATAbits.LATA2 == 1) {
   729  000290  A489               	btfss	3977,2,c	;volatile
   730  000292  D002               	goto	l303
   731                           
   732                           ;main.c: 72: LATAbits.LATA2 = 0;
   733  000294  9489               	bcf	3977,2,c	;volatile
   734                           
   735                           ;main.c: 73: }
   736  000296  D001               	goto	l304
   737  000298                     l303:
   738                           
   739                           ;main.c: 74: else {
   740                           ;main.c: 75: LATAbits.LATA2 = 1;
   741  000298  8489               	bsf	3977,2,c	;volatile
   742  00029A                     l304:
   743                           
   744                           ;main.c: 76: }
   745                           ;main.c: 78: if ( OERR ) {
   746  00029A  A2AB               	btfss	4011,1,c	;volatile
   747  00029C  D00A               	goto	l305
   748                           
   749                           ;main.c: 79: CREN = 0;
   750  00029E  98AB               	bcf	4011,4,c	;volatile
   751                           
   752                           ;main.c: 80: resetDMX();
   753  0002A0  ECAF  F002         	call	_resetDMX	;wreg free
   754                           
   755                           ;main.c: 82: __nop(); __nop(); __nop(); __nop(); __nop();
   756  0002A4  F000               	nop	
   757  0002A6  F000               	nop	
   758  0002A8  F000               	nop	
   759  0002AA  F000               	nop	
   760  0002AC  F000               	nop	
   761                           
   762                           ;main.c: 83: OERR = 0;
   763  0002AE  92AB               	bcf	4011,1,c	;volatile
   764                           
   765                           ;main.c: 84: CREN = 1;
   766  0002B0  88AB               	bsf	4011,4,c	;volatile
   767  0002B2                     l305:
   768                           
   769                           ;main.c: 85: }
   770                           ;main.c: 89: sendChangedChannels();
   771  0002B2  ECB4  F000         	call	_sendChangedChannels	;wreg free
   772                           
   773                           ;main.c: 92: decrementDataWatchdog();
   774  0002B6  EC88  F002         	call	_decrementDataWatchdog	;wreg free
   775                           
   776                           ;main.c: 93: decrementFramingWatchdog();
   777  0002BA  EC93  F002         	call	_decrementFramingWatchdog	;wreg free
   778                           
   779                           ;main.c: 96: if ( decrementSignalWatchdog() == 1 ) {
   780  0002BE  EC6F  F002         	call	_decrementSignalWatchdog	;wreg free
   781                           
   782                           ;main.c: 100: }
   783                           ;main.c: 104: }
   784  0002C2  D7E6               	goto	l302
   785  0002C4                     __end_of_main:
   786                           	opt stack 0
   787                           tblptru	equ	0xFF8
   788                           tblptrh	equ	0xFF7
   789                           tblptrl	equ	0xFF6
   790                           tablat	equ	0xFF5
   791                           intcon	equ	0xFF2
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           
   795 ;; *************** function _sendChangedChannels *****************
   796 ;; Defined at:
   797 ;;		line 51 in file "channels.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  i               1   13[BANK0 ] unsigned char 
   802 ;;  channel         1   12[BANK0 ] unsigned char 
   803 ;;  device          1   11[BANK0 ] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1
   813 ;;      Params:         0       0       0
   814 ;;      Locals:         0       3       0
   815 ;;      Temps:          0       1       0
   816 ;;      Totals:         0       4       0
   817 ;;Total ram usage:        4 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    8
   820 ;; This function calls:
   821 ;;		_pcaSetChannelLog
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text1
   828  000168                     __ptext1:
   829                           	opt stack 0
   830  000168                     _sendChangedChannels:
   831                           	opt stack 22
   832                           
   833                           ;channels.c: 53: unsigned char i;
   834                           ;channels.c: 54: unsigned char device ;
   835                           ;channels.c: 55: unsigned char channel;
   836                           ;channels.c: 57: for (i = 0; i < 32U; i++ ) {
   837                           
   838                           ;incstack = 0
   839  000168  0E00               	movlw	0
   840  00016A  0100               	movlb	0	; () banked
   841  00016C  6FAD               	movwf	sendChangedChannels@i& (0+255),b
   842  00016E                     l1731:
   843                           
   844                           ; BSR set to: 0
   845  00016E  0E1F               	movlw	31
   846  000170  65AD               	cpfsgt	sendChangedChannels@i& (0+255),b
   847  000172  D001               	goto	l21
   848  000174  0012               	return	
   849  000176                     l21:
   850                           
   851                           ; BSR set to: 0
   852                           ;channels.c: 61: if ( channels[i].bChanged == 1) {
   853                           
   854                           ; BSR set to: 0
   855  000176  51AD               	movf	sendChangedChannels@i& (0+255),w,b
   856  000178  0D02               	mullw	2
   857  00017A  0E60               	movlw	low _channels
   858  00017C  24F3               	addwf	prodl,w,c
   859  00017E  6ED9               	movwf	fsr2l,c
   860  000180  0E00               	movlw	high _channels
   861  000182  20F4               	addwfc	prodh,w,c
   862  000184  6EDA               	movwf	fsr2h,c
   863  000186  04DE               	decf	postinc2,w,c
   864  000188  A4D8               	btfss	status,2,c
   865  00018A  D02A               	goto	l23
   866                           
   867                           ; BSR set to: 0
   868                           ;channels.c: 62: channels[i].bChanged = 0;
   869  00018C  51AD               	movf	sendChangedChannels@i& (0+255),w,b
   870  00018E  0D02               	mullw	2
   871  000190  0E60               	movlw	low _channels
   872  000192  24F3               	addwf	prodl,w,c
   873  000194  6ED9               	movwf	fsr2l,c
   874  000196  0E00               	movlw	high _channels
   875  000198  20F4               	addwfc	prodh,w,c
   876  00019A  6EDA               	movwf	fsr2h,c
   877  00019C  0E00               	movlw	0
   878  00019E  6EDF               	movwf	indf2,c
   879                           
   880                           ; BSR set to: 0
   881                           ;channels.c: 64: if ( i > 15) {
   882  0001A0  0E0F               	movlw	15
   883  0001A2  65AD               	cpfsgt	sendChangedChannels@i& (0+255),b
   884  0001A4  D006               	goto	l24
   885                           
   886                           ; BSR set to: 0
   887                           ;channels.c: 65: device = 1;
   888  0001A6  0E01               	movlw	1
   889  0001A8  6FAB               	movwf	sendChangedChannels@device& (0+255),b
   890                           
   891                           ; BSR set to: 0
   892                           ;channels.c: 66: channel = i - 16U;
   893  0001AA  51AD               	movf	sendChangedChannels@i& (0+255),w,b
   894  0001AC  0FF0               	addlw	240
   895  0001AE  6FAC               	movwf	sendChangedChannels@channel& (0+255),b
   896                           
   897                           ;channels.c: 67: }
   898  0001B0  D004               	goto	l25
   899  0001B2                     l24:
   900                           
   901                           ; BSR set to: 0
   902                           ;channels.c: 68: else {
   903                           ;channels.c: 69: device = 0;
   904                           
   905                           ; BSR set to: 0
   906  0001B2  0E00               	movlw	0
   907  0001B4  6FAB               	movwf	sendChangedChannels@device& (0+255),b
   908                           
   909                           ; BSR set to: 0
   910                           ;channels.c: 70: channel = i;
   911  0001B6  C0AD  F0AC         	movff	sendChangedChannels@i,sendChangedChannels@channel
   912  0001BA                     l25:
   913                           
   914                           ; BSR set to: 0
   915                           ;channels.c: 71: }
   916                           ;channels.c: 73: pcaSetChannelLog(device, channel, channels[i].level);
   917                           
   918                           ; BSR set to: 0
   919  0001BA  C0AC  F0A7         	movff	sendChangedChannels@channel,pcaSetChannelLog@channel
   920  0001BE  51AD               	movf	sendChangedChannels@i& (0+255),w,b
   921  0001C0  0D02               	mullw	2
   922  0001C2  0E01               	movlw	1
   923  0001C4  26F3               	addwf	prodl,f,c
   924  0001C6  0E00               	movlw	0
   925  0001C8  22F4               	addwfc	prodh,f,c
   926  0001CA  0E60               	movlw	low _channels
   927  0001CC  24F3               	addwf	prodl,w,c
   928  0001CE  6ED9               	movwf	fsr2l,c
   929  0001D0  0E00               	movlw	high _channels
   930  0001D2  20F4               	addwfc	prodh,w,c
   931  0001D4  6EDA               	movwf	fsr2h,c
   932  0001D6  50DF               	movf	indf2,w,c
   933  0001D8  6FA8               	movwf	pcaSetChannelLog@value& (0+255),b
   934  0001DA  51AB               	movf	sendChangedChannels@device& (0+255),w,b
   935  0001DC  EC4D  F002         	call	_pcaSetChannelLog
   936  0001E0                     l23:
   937  0001E0  0100               	movlb	0	; () banked
   938  0001E2  2BAD               	incf	sendChangedChannels@i& (0+255),f,b
   939  0001E4  D7C4               	goto	l1731
   940  0001E6                     __end_of_sendChangedChannels:
   941                           	opt stack 0
   942                           tblptru	equ	0xFF8
   943                           tblptrh	equ	0xFF7
   944                           tblptrl	equ	0xFF6
   945                           tablat	equ	0xFF5
   946                           prodh	equ	0xFF4
   947                           prodl	equ	0xFF3
   948                           intcon	equ	0xFF2
   949                           postinc0	equ	0xFEE
   950                           wreg	equ	0xFE8
   951                           indf2	equ	0xFDF
   952                           postinc2	equ	0xFDE
   953                           fsr2h	equ	0xFDA
   954                           fsr2l	equ	0xFD9
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function _pcaSetChannelLog *****************
   958 ;; Defined at:
   959 ;;		line 50 in file "pca9685.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  which           1    wreg     unsigned char 
   962 ;;  channel         1    7[BANK0 ] unsigned char 
   963 ;;  value           1    8[BANK0 ] unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  which           1    9[BANK0 ] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1
   975 ;;      Params:         0       2       0
   976 ;;      Locals:         0       1       0
   977 ;;      Temps:          0       0       0
   978 ;;      Totals:         0       3       0
   979 ;;Total ram usage:        3 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    7
   982 ;; This function calls:
   983 ;;		_getLookup
   984 ;;		_pcaSetChannelRaw
   985 ;; This function is called by:
   986 ;;		_sendChangedChannels
   987 ;;		_pcaSweepTest
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text2
   992  00049A                     __ptext2:
   993                           	opt stack 0
   994  00049A                     _pcaSetChannelLog:
   995                           	opt stack 22
   996                           
   997                           ; BSR set to: 0
   998                           ;incstack = 0
   999                           ;pcaSetChannelLog@which stored from wreg
  1000  00049A  0100               	movlb	0	; () banked
  1001  00049C  6FA9               	movwf	pcaSetChannelLog@which& (0+255),b
  1002                           
  1003                           ;pca9685.c: 52: pcaSetChannelRaw(which, channel, getLookup(value));
  1004  00049E  C0A7  F0A3         	movff	pcaSetChannelLog@channel,pcaSetChannelRaw@channel
  1005  0004A2  0100               	movlb	0	; () banked
  1006  0004A4  51A8               	movf	pcaSetChannelLog@value& (0+255),w,b
  1007  0004A6  EC3B  F002         	call	_getLookup
  1008  0004AA  C0A0  F0A4         	movff	?_getLookup,pcaSetChannelRaw@level
  1009  0004AE  C0A1  F0A5         	movff	?_getLookup+1,pcaSetChannelRaw@level+1
  1010  0004B2  0100               	movlb	0	; () banked
  1011  0004B4  51A9               	movf	pcaSetChannelLog@which& (0+255),w,b
  1012  0004B6  EC90  F001         	call	_pcaSetChannelRaw
  1013  0004BA  0012               	return		;funcret
  1014  0004BC                     __end_of_pcaSetChannelLog:
  1015                           	opt stack 0
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           prodh	equ	0xFF4
  1021                           prodl	equ	0xFF3
  1022                           intcon	equ	0xFF2
  1023                           postinc0	equ	0xFEE
  1024                           wreg	equ	0xFE8
  1025                           indf2	equ	0xFDF
  1026                           postinc2	equ	0xFDE
  1027                           fsr2h	equ	0xFDA
  1028                           fsr2l	equ	0xFD9
  1029                           status	equ	0xFD8
  1030                           
  1031 ;; *************** function _pcaSetChannelRaw *****************
  1032 ;; Defined at:
  1033 ;;		line 32 in file "pca9685.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  which           1    wreg     unsigned char 
  1036 ;;  channel         1    3[BANK0 ] unsigned char 
  1037 ;;  level           2    4[BANK0 ] unsigned int 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  which           1    6[BANK0 ] unsigned char 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1
  1049 ;;      Params:         0       3       0
  1050 ;;      Locals:         0       1       0
  1051 ;;      Temps:          0       0       0
  1052 ;;      Totals:         0       4       0
  1053 ;;Total ram usage:        4 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    6
  1056 ;; This function calls:
  1057 ;;		_i2cSend
  1058 ;;		_i2cStart
  1059 ;;		_i2cStop
  1060 ;;		_pcaGetAddress
  1061 ;; This function is called by:
  1062 ;;		_pcaSetChannelLog
  1063 ;;		_pcaSetChannelLin
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text3
  1068  000320                     __ptext3:
  1069                           	opt stack 0
  1070  000320                     _pcaSetChannelRaw:
  1071                           	opt stack 22
  1072                           
  1073                           ;incstack = 0
  1074                           ;pcaSetChannelRaw@which stored from wreg
  1075  000320  0100               	movlb	0	; () banked
  1076  000322  6FA6               	movwf	pcaSetChannelRaw@which& (0+255),b
  1077                           
  1078                           ;pca9685.c: 34: i2cStart();
  1079  000324  ECD1  F002         	call	_i2cStart	;wreg free
  1080                           
  1081                           ;pca9685.c: 35: i2cSend(pcaGetAddress(which) );
  1082  000328  0100               	movlb	0	; () banked
  1083  00032A  51A6               	movf	pcaSetChannelRaw@which& (0+255),w,b
  1084  00032C  EC5E  F002         	call	_pcaGetAddress
  1085  000330  EC9D  F002         	call	_i2cSend
  1086                           
  1087                           ;pca9685.c: 36: i2cSend(( channel * 4U ) + 0x06U);
  1088  000334  0100               	movlb	0	; () banked
  1089  000336  51A3               	movf	pcaSetChannelRaw@channel& (0+255),w,b
  1090  000338  0D04               	mullw	4
  1091  00033A  50F3               	movf	prodl,w,c
  1092  00033C  0F06               	addlw	6
  1093  00033E  EC9D  F002         	call	_i2cSend
  1094                           
  1095                           ;pca9685.c: 37: i2cSend(0x00);
  1096  000342  0E00               	movlw	0
  1097  000344  EC9D  F002         	call	_i2cSend
  1098                           
  1099                           ;pca9685.c: 38: i2cSend(0x00);
  1100  000348  0E00               	movlw	0
  1101  00034A  EC9D  F002         	call	_i2cSend
  1102                           
  1103                           ;pca9685.c: 39: i2cSend((unsigned char)(level & 0xFF));
  1104  00034E  0100               	movlb	0	; () banked
  1105  000350  51A4               	movf	pcaSetChannelRaw@level& (0+255),w,b
  1106  000352  EC9D  F002         	call	_i2cSend
  1107                           
  1108                           ;pca9685.c: 40: i2cSend((unsigned char)((level >> 8 ) & 0x0F));
  1109  000356  0100               	movlb	0	; () banked
  1110  000358  51A5               	movf	(pcaSetChannelRaw@level+1)& (0+255),w,b
  1111  00035A  0B0F               	andlw	15
  1112  00035C  EC9D  F002         	call	_i2cSend
  1113                           
  1114                           ;pca9685.c: 41: i2cStop();
  1115  000360  ECCD  F002         	call	_i2cStop	;wreg free
  1116  000364  0012               	return		;funcret
  1117  000366                     __end_of_pcaSetChannelRaw:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           prodh	equ	0xFF4
  1124                           prodl	equ	0xFF3
  1125                           intcon	equ	0xFF2
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           indf2	equ	0xFDF
  1129                           postinc2	equ	0xFDE
  1130                           fsr2h	equ	0xFDA
  1131                           fsr2l	equ	0xFD9
  1132                           status	equ	0xFD8
  1133                           
  1134 ;; *************** function _getLookup *****************
  1135 ;; Defined at:
  1136 ;;		line 52 in file "lookuptable.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  value           1    wreg     unsigned char 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  value           1    2[BANK0 ] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2    0[BANK0 ] unsigned int 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1
  1150 ;;      Params:         0       2       0
  1151 ;;      Locals:         0       1       0
  1152 ;;      Temps:          0       0       0
  1153 ;;      Totals:         0       3       0
  1154 ;;Total ram usage:        3 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    4
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_pcaSetChannelLog
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text4
  1165  000476                     __ptext4:
  1166                           	opt stack 0
  1167  000476                     _getLookup:
  1168                           	opt stack 24
  1169                           
  1170                           ;incstack = 0
  1171                           ;getLookup@value stored from wreg
  1172  000476  0100               	movlb	0	; () banked
  1173  000478  6FA2               	movwf	getLookup@value& (0+255),b
  1174                           
  1175                           ;lookuptable.c: 54: return lookup[value];
  1176  00047A  0100               	movlb	0	; () banked
  1177  00047C  51A2               	movf	getLookup@value& (0+255),w,b
  1178  00047E  0D02               	mullw	2
  1179  000480  0EFF               	movlw	low _lookup
  1180  000482  24F3               	addwf	prodl,w,c
  1181  000484  6EF6               	movwf	tblptrl,c
  1182  000486  0E3D               	movlw	high _lookup
  1183  000488  20F4               	addwfc	prodh,w,c
  1184  00048A  6EF7               	movwf	tblptrh,c
  1185  00048C                     	if	0	;There are less than 3 active tblptr bytes
  1186  00048C                     	endif
  1187  00048C  0009               	tblrd		*+
  1188  00048E  CFF5 F0A0          	movff	tablat,?_getLookup
  1189  000492  000A               	tblrd		*-
  1190  000494  CFF5 F0A1          	movff	tablat,?_getLookup+1
  1191  000498  0012               	return	
  1192  00049A                     __end_of_getLookup:
  1193                           	opt stack 0
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           prodh	equ	0xFF4
  1199                           prodl	equ	0xFF3
  1200                           intcon	equ	0xFF2
  1201                           postinc0	equ	0xFEE
  1202                           wreg	equ	0xFE8
  1203                           indf2	equ	0xFDF
  1204                           postinc2	equ	0xFDE
  1205                           fsr2h	equ	0xFDA
  1206                           fsr2l	equ	0xFD9
  1207                           status	equ	0xFD8
  1208                           
  1209 ;; *************** function _resetDMX *****************
  1210 ;; Defined at:
  1211 ;;		line 63 in file "dmx.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1
  1225 ;;      Params:         0       0       0
  1226 ;;      Locals:         0       0       0
  1227 ;;      Temps:          0       0       0
  1228 ;;      Totals:         0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    4
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text5
  1240  00055E                     __ptext5:
  1241                           	opt stack 0
  1242  00055E                     _resetDMX:
  1243                           	opt stack 26
  1244                           
  1245                           ;dmx.c: 65: RCSTA1bits.CREN = 0;
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;incstack = 0
  1249  00055E  98AB               	bcf	4011,4,c	;volatile
  1250                           
  1251                           ;dmx.c: 66: currentAdress = 0;
  1252  000560  0E00               	movlw	0
  1253  000562  6E37               	movwf	_currentAdress,c
  1254                           
  1255                           ;dmx.c: 67: dmxState = 0x00;
  1256  000564  0E00               	movlw	0
  1257  000566  6E38               	movwf	_dmxState,c
  1258                           
  1259                           ;dmx.c: 68: RCSTA1bits.CREN = 1;
  1260  000568  88AB               	bsf	4011,4,c	;volatile
  1261  00056A  0012               	return		;funcret
  1262  00056C                     __end_of_resetDMX:
  1263                           	opt stack 0
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           prodh	equ	0xFF4
  1269                           prodl	equ	0xFF3
  1270                           intcon	equ	0xFF2
  1271                           postinc0	equ	0xFEE
  1272                           wreg	equ	0xFE8
  1273                           indf2	equ	0xFDF
  1274                           postinc2	equ	0xFDE
  1275                           fsr2h	equ	0xFDA
  1276                           fsr2l	equ	0xFD9
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function _pcaInit *****************
  1280 ;; Defined at:
  1281 ;;		line 15 in file "pca9685.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  which           1    wreg     unsigned char 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  which           1    4[BANK0 ] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1
  1295 ;;      Params:         0       0       0
  1296 ;;      Locals:         0       1       0
  1297 ;;      Temps:          0       0       0
  1298 ;;      Totals:         0       1       0
  1299 ;;Total ram usage:        1 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    7
  1302 ;; This function calls:
  1303 ;;		_pcaWakeUp
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text6
  1310  00056C                     __ptext6:
  1311                           	opt stack 0
  1312  00056C                     _pcaInit:
  1313                           	opt stack 23
  1314                           
  1315                           ;incstack = 0
  1316                           ;pcaInit@which stored from wreg
  1317  00056C  0100               	movlb	0	; () banked
  1318  00056E  6FA4               	movwf	pcaInit@which& (0+255),b
  1319                           
  1320                           ;pca9685.c: 27: pcaWakeUp(which);
  1321  000570  0100               	movlb	0	; () banked
  1322  000572  51A4               	movf	pcaInit@which& (0+255),w,b
  1323  000574  EC28  F002         	call	_pcaWakeUp
  1324  000578  0012               	return		;funcret
  1325  00057A                     __end_of_pcaInit:
  1326                           	opt stack 0
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           prodh	equ	0xFF4
  1332                           prodl	equ	0xFF3
  1333                           intcon	equ	0xFF2
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           indf2	equ	0xFDF
  1337                           postinc2	equ	0xFDE
  1338                           fsr2h	equ	0xFDA
  1339                           fsr2l	equ	0xFD9
  1340                           status	equ	0xFD8
  1341                           
  1342 ;; *************** function _pcaWakeUp *****************
  1343 ;; Defined at:
  1344 ;;		line 64 in file "pca9685.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  which           1    wreg     unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  which           1    3[BANK0 ] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1
  1358 ;;      Params:         0       0       0
  1359 ;;      Locals:         0       1       0
  1360 ;;      Temps:          0       0       0
  1361 ;;      Totals:         0       1       0
  1362 ;;Total ram usage:        1 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    6
  1365 ;; This function calls:
  1366 ;;		_i2cSend
  1367 ;;		_i2cStart
  1368 ;;		_i2cStop
  1369 ;;		_pcaGetAddress
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;;		_pcaInit
  1373 ;;		_testChannelLevels
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text7
  1378  000450                     __ptext7:
  1379                           	opt stack 0
  1380  000450                     _pcaWakeUp:
  1381                           	opt stack 24
  1382                           
  1383                           ;incstack = 0
  1384                           ;pcaWakeUp@which stored from wreg
  1385  000450  0100               	movlb	0	; () banked
  1386  000452  6FA3               	movwf	pcaWakeUp@which& (0+255),b
  1387                           
  1388                           ;pca9685.c: 66: i2cStart();
  1389  000454  ECD1  F002         	call	_i2cStart	;wreg free
  1390                           
  1391                           ;pca9685.c: 67: i2cSend(pcaGetAddress(which));
  1392  000458  0100               	movlb	0	; () banked
  1393  00045A  51A3               	movf	pcaWakeUp@which& (0+255),w,b
  1394  00045C  EC5E  F002         	call	_pcaGetAddress
  1395  000460  EC9D  F002         	call	_i2cSend
  1396                           
  1397                           ;pca9685.c: 68: i2cSend(0x00);
  1398  000464  0E00               	movlw	0
  1399  000466  EC9D  F002         	call	_i2cSend
  1400                           
  1401                           ;pca9685.c: 69: i2cSend(0x80 | 0x20);
  1402  00046A  0EA0               	movlw	160
  1403  00046C  EC9D  F002         	call	_i2cSend
  1404                           
  1405                           ;pca9685.c: 70: i2cStop();
  1406  000470  ECCD  F002         	call	_i2cStop	;wreg free
  1407  000474  0012               	return		;funcret
  1408  000476                     __end_of_pcaWakeUp:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           prodh	equ	0xFF4
  1415                           prodl	equ	0xFF3
  1416                           intcon	equ	0xFF2
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           indf2	equ	0xFDF
  1420                           postinc2	equ	0xFDE
  1421                           fsr2h	equ	0xFDA
  1422                           fsr2l	equ	0xFD9
  1423                           status	equ	0xFD8
  1424                           
  1425 ;; *************** function _pcaGetAddress *****************
  1426 ;; Defined at:
  1427 ;;		line 10 in file "pca9685.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  which           1    wreg     unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  which           1    0[BANK0 ] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      unsigned char 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1
  1441 ;;      Params:         0       0       0
  1442 ;;      Locals:         0       3       0
  1443 ;;      Temps:          0       0       0
  1444 ;;      Totals:         0       3       0
  1445 ;;Total ram usage:        3 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    4
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_pcaSetChannelRaw
  1452 ;;		_pcaWakeUp
  1453 ;;		_pcaSleep
  1454 ;;		_pcaSetSpeed
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text8
  1459  0004BC                     __ptext8:
  1460                           	opt stack 0
  1461  0004BC                     _pcaGetAddress:
  1462                           	opt stack 23
  1463                           
  1464                           ;incstack = 0
  1465                           ;pcaGetAddress@which stored from wreg
  1466  0004BC  0100               	movlb	0	; () banked
  1467  0004BE  6FA0               	movwf	pcaGetAddress@which& (0+255),b
  1468                           
  1469                           ;pca9685.c: 12: return (unsigned char)((unsigned char)0x80 + ( which == 0 ? 0 : 2));
  1470  0004C0  0100               	movlb	0	; () banked
  1471  0004C2  51A0               	movf	pcaGetAddress@which& (0+255),w,b
  1472  0004C4  B4D8               	btfsc	status,2,c
  1473  0004C6  D004               	goto	l322
  1474                           
  1475                           ; BSR set to: 0
  1476  0004C8  0E00               	movlw	0
  1477  0004CA  6FA2               	movwf	(_pcaGetAddress$940+1)& (0+255),b
  1478  0004CC  0E02               	movlw	2
  1479  0004CE  D003               	goto	L1
  1480  0004D0                     l322:
  1481                           
  1482                           ; BSR set to: 0
  1483                           
  1484                           ; BSR set to: 0
  1485  0004D0  0E00               	movlw	0
  1486  0004D2  6FA2               	movwf	(_pcaGetAddress$940+1)& (0+255),b
  1487  0004D4  0E00               	movlw	0
  1488  0004D6                     L1:
  1489  0004D6  6FA1               	movwf	_pcaGetAddress$940& (0+255),b
  1490                           
  1491                           ; BSR set to: 0
  1492                           
  1493                           ; BSR set to: 0
  1494  0004D8  51A1               	movf	_pcaGetAddress$940& (0+255),w,b
  1495  0004DA  0F80               	addlw	128
  1496  0004DC  0012               	return	
  1497  0004DE                     __end_of_pcaGetAddress:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           prodh	equ	0xFF4
  1504                           prodl	equ	0xFF3
  1505                           intcon	equ	0xFF2
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           indf2	equ	0xFDF
  1509                           postinc2	equ	0xFDE
  1510                           fsr2h	equ	0xFDA
  1511                           fsr2l	equ	0xFD9
  1512                           status	equ	0xFD8
  1513                           
  1514 ;; *************** function _i2cStop *****************
  1515 ;; Defined at:
  1516 ;;		line 38 in file "i2c.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		None
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1
  1530 ;;      Params:         0       0       0
  1531 ;;      Locals:         0       0       0
  1532 ;;      Temps:          0       0       0
  1533 ;;      Totals:         0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    4
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_pcaSetChannelRaw
  1541 ;;		_pcaWakeUp
  1542 ;;		_pcaSleep
  1543 ;;		_pcaSetSpeed
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text9
  1548  00059A                     __ptext9:
  1549                           	opt stack 0
  1550  00059A                     _i2cStop:
  1551                           	opt stack 23
  1552                           
  1553                           ;i2c.c: 40: SSPCON2bits.PEN = 1;
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;incstack = 0
  1557  00059A  84C5               	bsf	4037,2,c	;volatile
  1558  00059C                     
  1559                           ;i2c.c: 42: ;
  1560  00059C  A4C5               	btfss	4037,2,c	;volatile
  1561  00059E  0012               	return	
  1562  0005A0  D7FD               	goto	l196
  1563  0005A2                     __end_of_i2cStop:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           prodh	equ	0xFF4
  1570                           prodl	equ	0xFF3
  1571                           intcon	equ	0xFF2
  1572                           postinc0	equ	0xFEE
  1573                           wreg	equ	0xFE8
  1574                           indf2	equ	0xFDF
  1575                           postinc2	equ	0xFDE
  1576                           fsr2h	equ	0xFDA
  1577                           fsr2l	equ	0xFD9
  1578                           status	equ	0xFD8
  1579                           
  1580 ;; *************** function _i2cStart *****************
  1581 ;; Defined at:
  1582 ;;		line 28 in file "i2c.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		None
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1
  1596 ;;      Params:         0       0       0
  1597 ;;      Locals:         0       0       0
  1598 ;;      Temps:          0       0       0
  1599 ;;      Totals:         0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    4
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_pcaSetChannelRaw
  1607 ;;		_pcaWakeUp
  1608 ;;		_pcaSleep
  1609 ;;		_pcaSetSpeed
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text10
  1614  0005A2                     __ptext10:
  1615                           	opt stack 0
  1616  0005A2                     _i2cStart:
  1617                           	opt stack 23
  1618                           
  1619                           ;i2c.c: 30: SSPCON2bits.SEN = 1;
  1620                           
  1621                           ;incstack = 0
  1622  0005A2  80C5               	bsf	4037,0,c	;volatile
  1623  0005A4                     
  1624                           ;i2c.c: 32: ;
  1625  0005A4  A0C5               	btfss	4037,0,c	;volatile
  1626  0005A6  0012               	return	
  1627  0005A8  D7FD               	goto	l190
  1628  0005AA                     __end_of_i2cStart:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           tblptrh	equ	0xFF7
  1632                           tblptrl	equ	0xFF6
  1633                           tablat	equ	0xFF5
  1634                           prodh	equ	0xFF4
  1635                           prodl	equ	0xFF3
  1636                           intcon	equ	0xFF2
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           indf2	equ	0xFDF
  1640                           postinc2	equ	0xFDE
  1641                           fsr2h	equ	0xFDA
  1642                           fsr2l	equ	0xFD9
  1643                           status	equ	0xFD8
  1644                           
  1645 ;; *************** function _i2cSend *****************
  1646 ;; Defined at:
  1647 ;;		line 115 in file "i2c.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  dat             1    wreg     unsigned char 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  dat             1    0[BANK0 ] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1
  1661 ;;      Params:         0       0       0
  1662 ;;      Locals:         0       1       0
  1663 ;;      Temps:          0       0       0
  1664 ;;      Totals:         0       1       0
  1665 ;;Total ram usage:        1 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    5
  1668 ;; This function calls:
  1669 ;;		_i2cWait
  1670 ;; This function is called by:
  1671 ;;		_pcaSetChannelRaw
  1672 ;;		_pcaWakeUp
  1673 ;;		_pcaSleep
  1674 ;;		_pcaSetSpeed
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text11
  1679  00053A                     __ptext11:
  1680                           	opt stack 0
  1681  00053A                     _i2cSend:
  1682                           	opt stack 22
  1683                           
  1684                           ;incstack = 0
  1685                           ;i2cSend@dat stored from wreg
  1686  00053A  0100               	movlb	0	; () banked
  1687  00053C  6FA0               	movwf	i2cSend@dat& (0+255),b
  1688                           
  1689                           ;i2c.c: 117: SSPBUF = dat;
  1690  00053E  C0A0  FFC9         	movff	i2cSend@dat,4041	;volatile
  1691  000542                     
  1692                           ;i2c.c: 119: ;
  1693  000542  B0C7               	btfsc	4039,0,c	;volatile
  1694  000544  D7FE               	goto	l228
  1695                           
  1696                           ;i2c.c: 120: i2cWait();
  1697  000546  ECA6  F002         	call	_i2cWait	;wreg free
  1698  00054A  0012               	return		;funcret
  1699  00054C                     __end_of_i2cSend:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           tblptrh	equ	0xFF7
  1703                           tblptrl	equ	0xFF6
  1704                           tablat	equ	0xFF5
  1705                           prodh	equ	0xFF4
  1706                           prodl	equ	0xFF3
  1707                           intcon	equ	0xFF2
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           indf2	equ	0xFDF
  1711                           postinc2	equ	0xFDE
  1712                           fsr2h	equ	0xFDA
  1713                           fsr2l	equ	0xFD9
  1714                           status	equ	0xFD8
  1715                           
  1716 ;; *************** function _i2cWait *****************
  1717 ;; Defined at:
  1718 ;;		line 102 in file "i2c.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1
  1732 ;;      Params:         0       0       0
  1733 ;;      Locals:         0       0       0
  1734 ;;      Temps:          0       0       0
  1735 ;;      Totals:         0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    4
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_i2cSend
  1743 ;;		_i2cRead
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text12
  1748  00054C                     __ptext12:
  1749                           	opt stack 0
  1750  00054C                     _i2cWait:
  1751                           	opt stack 22
  1752                           
  1753                           ;i2c.c: 105: ;
  1754                           
  1755                           ;i2c.c: 104: while ((SSPCON2 == 0x1F ) || ( SSPSTAT == 0x04 ) )
  1756                           
  1757                           ;incstack = 0
  1758  00054C  0E1F               	movlw	31
  1759  00054E  18C5               	xorwf	4037,w,c	;volatile
  1760  000550  B4D8               	btfsc	status,2,c
  1761  000552  D7FC               	goto	_i2cWait
  1762  000554  0E04               	movlw	4
  1763  000556  18C7               	xorwf	4039,w,c	;volatile
  1764  000558  A4D8               	btfss	status,2,c
  1765  00055A  0012               	return	
  1766  00055C  D7F7               	goto	_i2cWait
  1767  00055E                     __end_of_i2cWait:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           prodh	equ	0xFF4
  1774                           prodl	equ	0xFF3
  1775                           intcon	equ	0xFF2
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           indf2	equ	0xFDF
  1779                           postinc2	equ	0xFDE
  1780                           fsr2h	equ	0xFDA
  1781                           fsr2l	equ	0xFD9
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function _initHardware *****************
  1785 ;; Defined at:
  1786 ;;		line 6 in file "hardware.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1
  1800 ;;      Params:         0       0       0
  1801 ;;      Locals:         0       0       0
  1802 ;;      Temps:          0       0       0
  1803 ;;      Totals:         0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    4
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text13
  1815  000366                     __ptext13:
  1816                           	opt stack 0
  1817  000366                     _initHardware:
  1818                           	opt stack 26
  1819                           
  1820                           ;hardware.c: 8: OSCCONbits.IDLEN = 0;
  1821                           
  1822                           ;incstack = 0
  1823  000366  9ED3               	bcf	4051,7,c	;volatile
  1824                           
  1825                           ;hardware.c: 10: OSCCONbits.IRCF2 = 1;
  1826  000368  8CD3               	bsf	4051,6,c	;volatile
  1827                           
  1828                           ;hardware.c: 11: OSCCONbits.IRCF1 = 1;
  1829  00036A  8AD3               	bsf	4051,5,c	;volatile
  1830                           
  1831                           ;hardware.c: 13: OSCCONbits.IRCF0 = 1;
  1832  00036C  88D3               	bsf	4051,4,c	;volatile
  1833                           
  1834                           ;hardware.c: 15: OSCCONbits.SCS1 = 1;
  1835  00036E  82D3               	bsf	4051,1,c	;volatile
  1836                           
  1837                           ;hardware.c: 16: OSCCONbits.SCS0 = 0;
  1838  000370  90D3               	bcf	4051,0,c	;volatile
  1839                           
  1840                           ;hardware.c: 18: OSCTUNEbits.PLLEN = 1;
  1841  000372  8C9B               	bsf	3995,6,c	;volatile
  1842                           
  1843                           ;hardware.c: 24: CM1CON0 = 0;
  1844  000374  0E00               	movlw	0
  1845  000376  6E6D               	movwf	3949,c	;volatile
  1846                           
  1847                           ;hardware.c: 25: CM2CON0 = 0;
  1848  000378  0E00               	movlw	0
  1849  00037A  6E6B               	movwf	3947,c	;volatile
  1850                           
  1851                           ;hardware.c: 27: ANSEL = 0x00;
  1852  00037C  0E00               	movlw	0
  1853  00037E  6E7E               	movwf	3966,c	;volatile
  1854                           
  1855                           ;hardware.c: 28: ANSELH = 0x00;
  1856  000380  0E00               	movlw	0
  1857  000382  6E7F               	movwf	3967,c	;volatile
  1858                           
  1859                           ;hardware.c: 30: LATA = 0x00;
  1860  000384  0E00               	movlw	0
  1861  000386  6E89               	movwf	3977,c	;volatile
  1862                           
  1863                           ;hardware.c: 31: PORTA = 0x00;
  1864  000388  0E00               	movlw	0
  1865  00038A  6E80               	movwf	3968,c	;volatile
  1866                           
  1867                           ;hardware.c: 32: TRISA = 0b00000011;
  1868  00038C  0E03               	movlw	3
  1869  00038E  6E92               	movwf	3986,c	;volatile
  1870                           
  1871                           ;hardware.c: 34: PORTB = 0x00;
  1872  000390  0E00               	movlw	0
  1873  000392  6E81               	movwf	3969,c	;volatile
  1874                           
  1875                           ;hardware.c: 35: LATB = 0x00;
  1876  000394  0E00               	movlw	0
  1877  000396  6E8A               	movwf	3978,c	;volatile
  1878                           
  1879                           ;hardware.c: 36: TRISB = 0b10100111;
  1880  000398  0EA7               	movlw	167
  1881  00039A  6E93               	movwf	3987,c	;volatile
  1882                           
  1883                           ;hardware.c: 38: LATC = 0x00;
  1884  00039C  0E00               	movlw	0
  1885  00039E  6E8B               	movwf	3979,c	;volatile
  1886                           
  1887                           ;hardware.c: 39: PORTC = 0x00;
  1888  0003A0  0E00               	movlw	0
  1889  0003A2  6E82               	movwf	3970,c	;volatile
  1890                           
  1891                           ;hardware.c: 40: TRISC = 0b11111000;
  1892  0003A4  0EF8               	movlw	248
  1893  0003A6  6E94               	movwf	3988,c	;volatile
  1894  0003A8  0012               	return		;funcret
  1895  0003AA                     __end_of_initHardware:
  1896                           	opt stack 0
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           prodh	equ	0xFF4
  1902                           prodl	equ	0xFF3
  1903                           intcon	equ	0xFF2
  1904                           postinc0	equ	0xFEE
  1905                           wreg	equ	0xFE8
  1906                           indf2	equ	0xFDF
  1907                           postinc2	equ	0xFDE
  1908                           fsr2h	equ	0xFDA
  1909                           fsr2l	equ	0xFD9
  1910                           status	equ	0xFD8
  1911                           
  1912 ;; *************** function _initDMX *****************
  1913 ;; Defined at:
  1914 ;;		line 39 in file "dmx.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1
  1928 ;;      Params:         0       0       0
  1929 ;;      Locals:         0       0       0
  1930 ;;      Temps:          0       0       0
  1931 ;;      Totals:         0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    5
  1935 ;; This function calls:
  1936 ;;		_getDMXBaseAddress
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text14
  1943  000424                     __ptext14:
  1944                           	opt stack 0
  1945  000424                     _initDMX:
  1946                           	opt stack 25
  1947                           
  1948                           ;dmx.c: 41: baseAddress = getDMXBaseAddress();
  1949                           
  1950                           ;incstack = 0
  1951  000424  ECD5  F002         	call	_getDMXBaseAddress	;wreg free
  1952  000428  6E36               	movwf	_baseAddress,c
  1953                           
  1954                           ;dmx.c: 42: topAddress = baseAddress + 32U;
  1955  00042A  5036               	movf	_baseAddress,w,c
  1956  00042C  0F20               	addlw	32
  1957  00042E  6E35               	movwf	_topAddress,c
  1958                           
  1959                           ;dmx.c: 44: currentAdress = 0;
  1960  000430  0E00               	movlw	0
  1961  000432  6E37               	movwf	_currentAdress,c
  1962                           
  1963                           ;dmx.c: 45: dmxState = 0x00;
  1964  000434  0E00               	movlw	0
  1965  000436  6E38               	movwf	_dmxState,c
  1966                           
  1967                           ;dmx.c: 47: BAUDCONbits.BRG16 = 1;
  1968  000438  86B8               	bsf	4024,3,c	;volatile
  1969                           
  1970                           ;dmx.c: 49: SPBRG1 = 3;
  1971  00043A  0E03               	movlw	3
  1972  00043C  6EAF               	movwf	4015,c	;volatile
  1973                           
  1974                           ;dmx.c: 50: SPBRGH = 0;
  1975  00043E  0E00               	movlw	0
  1976  000440  6EB0               	movwf	4016,c	;volatile
  1977                           
  1978                           ;dmx.c: 52: BAUDCONbits.CKTXP = 1;
  1979  000442  88B8               	bsf	4024,4,c	;volatile
  1980                           
  1981                           ;dmx.c: 54: RCSTA1bits.CREN = 1;
  1982  000444  88AB               	bsf	4011,4,c	;volatile
  1983                           
  1984                           ;dmx.c: 55: RCSTA1bits.SPEN = 1;
  1985  000446  8EAB               	bsf	4011,7,c	;volatile
  1986                           
  1987                           ;dmx.c: 56: SYNC = 0;
  1988  000448  98AC               	bcf	4012,4,c	;volatile
  1989                           
  1990                           ;dmx.c: 58: PIE1bits.RCIE = 1;
  1991  00044A  8A9D               	bsf	3997,5,c	;volatile
  1992                           
  1993                           ;dmx.c: 59: IPR1bits.RCIP = 1;
  1994  00044C  8A9F               	bsf	3999,5,c	;volatile
  1995  00044E  0012               	return		;funcret
  1996  000450                     __end_of_initDMX:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           prodh	equ	0xFF4
  2003                           prodl	equ	0xFF3
  2004                           intcon	equ	0xFF2
  2005                           postinc0	equ	0xFEE
  2006                           wreg	equ	0xFE8
  2007                           indf2	equ	0xFDF
  2008                           postinc2	equ	0xFDE
  2009                           fsr2h	equ	0xFDA
  2010                           fsr2l	equ	0xFD9
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function _getDMXBaseAddress *****************
  2014 ;; Defined at:
  2015 ;;		line 78 in file "dmx.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1
  2029 ;;      Params:         0       0       0
  2030 ;;      Locals:         0       0       0
  2031 ;;      Temps:          0       0       0
  2032 ;;      Totals:         0       0       0
  2033 ;;Total ram usage:        0 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    4
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_initDMX
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text15
  2044  0005AA                     __ptext15:
  2045                           	opt stack 0
  2046  0005AA                     _getDMXBaseAddress:
  2047                           	opt stack 25
  2048                           
  2049                           ;dmx.c: 80: return (unsigned char)(PORTC >> 1U) & 0b01111100U;
  2050                           
  2051                           ;incstack = 0
  2052  0005AA  90D8               	bcf	status,0,c
  2053  0005AC  3082               	rrcf	3970,w,c	;volatile
  2054  0005AE  0B7C               	andlw	124
  2055  0005B0  0012               	return	
  2056  0005B2                     __end_of_getDMXBaseAddress:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           prodh	equ	0xFF4
  2063                           prodl	equ	0xFF3
  2064                           intcon	equ	0xFF2
  2065                           postinc0	equ	0xFEE
  2066                           wreg	equ	0xFE8
  2067                           indf2	equ	0xFDF
  2068                           postinc2	equ	0xFDE
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function _initChannels *****************
  2074 ;; Defined at:
  2075 ;;		line 18 in file "channels.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  i               1    0[BANK0 ] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1
  2089 ;;      Params:         0       0       0
  2090 ;;      Locals:         0       1       0
  2091 ;;      Temps:          0       0       0
  2092 ;;      Totals:         0       1       0
  2093 ;;Total ram usage:        1 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    4
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text16
  2104  0003AA                     __ptext16:
  2105                           	opt stack 0
  2106  0003AA                     _initChannels:
  2107                           	opt stack 26
  2108                           
  2109                           ;channels.c: 20: unsigned char i;
  2110                           ;channels.c: 22: for (i = 0; i < 32U; i++) {
  2111                           
  2112                           ;incstack = 0
  2113  0003AA  0E00               	movlw	0
  2114  0003AC  0100               	movlb	0	; () banked
  2115  0003AE  6FA0               	movwf	initChannels@i& (0+255),b
  2116  0003B0                     l1719:
  2117                           
  2118                           ; BSR set to: 0
  2119  0003B0  0E1F               	movlw	31
  2120  0003B2  65A0               	cpfsgt	initChannels@i& (0+255),b
  2121  0003B4  D001               	goto	l11
  2122  0003B6  0012               	return	
  2123  0003B8                     l11:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;channels.c: 23: channels[i].bChanged = 0;
  2127                           
  2128                           ; BSR set to: 0
  2129  0003B8  51A0               	movf	initChannels@i& (0+255),w,b
  2130  0003BA  0D02               	mullw	2
  2131  0003BC  0E60               	movlw	low _channels
  2132  0003BE  24F3               	addwf	prodl,w,c
  2133  0003C0  6ED9               	movwf	fsr2l,c
  2134  0003C2  0E00               	movlw	high _channels
  2135  0003C4  20F4               	addwfc	prodh,w,c
  2136  0003C6  6EDA               	movwf	fsr2h,c
  2137  0003C8  0E00               	movlw	0
  2138  0003CA  6EDF               	movwf	indf2,c
  2139                           
  2140                           ;channels.c: 24: channels[i].level = 0;
  2141  0003CC  51A0               	movf	initChannels@i& (0+255),w,b
  2142  0003CE  0D02               	mullw	2
  2143  0003D0  0E01               	movlw	1
  2144  0003D2  26F3               	addwf	prodl,f,c
  2145  0003D4  0E00               	movlw	0
  2146  0003D6  22F4               	addwfc	prodh,f,c
  2147  0003D8  0E60               	movlw	low _channels
  2148  0003DA  24F3               	addwf	prodl,w,c
  2149  0003DC  6ED9               	movwf	fsr2l,c
  2150  0003DE  0E00               	movlw	high _channels
  2151  0003E0  20F4               	addwfc	prodh,w,c
  2152  0003E2  6EDA               	movwf	fsr2h,c
  2153  0003E4  0E00               	movlw	0
  2154  0003E6  6EDF               	movwf	indf2,c
  2155                           
  2156                           ; BSR set to: 0
  2157  0003E8  2BA0               	incf	initChannels@i& (0+255),f,b
  2158  0003EA  D7E2               	goto	l1719
  2159  0003EC                     __end_of_initChannels:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           prodh	equ	0xFF4
  2166                           prodl	equ	0xFF3
  2167                           intcon	equ	0xFF2
  2168                           postinc0	equ	0xFEE
  2169                           wreg	equ	0xFE8
  2170                           indf2	equ	0xFDF
  2171                           postinc2	equ	0xFDE
  2172                           fsr2h	equ	0xFDA
  2173                           fsr2l	equ	0xFD9
  2174                           status	equ	0xFD8
  2175                           
  2176 ;; *************** function _i2cInit *****************
  2177 ;; Defined at:
  2178 ;;		line 7 in file "i2c.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1
  2192 ;;      Params:         0       0       0
  2193 ;;      Locals:         0       0       0
  2194 ;;      Temps:          0       0       0
  2195 ;;      Totals:         0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    4
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text17
  2207  0004F8                     __ptext17:
  2208                           	opt stack 0
  2209  0004F8                     _i2cInit:
  2210                           	opt stack 26
  2211                           
  2212                           ;i2c.c: 9: TRISBbits.RB4 = 1;
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;incstack = 0
  2216  0004F8  8893               	bsf	3987,4,c	;volatile
  2217                           
  2218                           ;i2c.c: 10: TRISBbits.RB6 = 1;
  2219  0004FA  8C93               	bsf	3987,6,c	;volatile
  2220                           
  2221                           ;i2c.c: 12: SSPCON1bits.SSPEN = 1;
  2222  0004FC  8AC6               	bsf	4038,5,c	;volatile
  2223                           
  2224                           ;i2c.c: 13: SSPADD = 0x08;
  2225  0004FE  0E08               	movlw	8
  2226  000500  6EC8               	movwf	4040,c	;volatile
  2227                           
  2228                           ;i2c.c: 14: SSPCON1 = 0x28;
  2229  000502  0E28               	movlw	40
  2230  000504  6EC6               	movwf	4038,c	;volatile
  2231                           
  2232                           ;i2c.c: 15: SSPSTAT = 0x00;
  2233  000506  0E00               	movlw	0
  2234  000508  6EC7               	movwf	4039,c	;volatile
  2235                           
  2236                           ;i2c.c: 17: bI2CTimeout = 0;
  2237  00050A  0E00               	movlw	0
  2238  00050C  6E34               	movwf	_bI2CTimeout,c
  2239  00050E  0012               	return		;funcret
  2240  000510                     __end_of_i2cInit:
  2241                           	opt stack 0
  2242                           tblptru	equ	0xFF8
  2243                           tblptrh	equ	0xFF7
  2244                           tblptrl	equ	0xFF6
  2245                           tablat	equ	0xFF5
  2246                           prodh	equ	0xFF4
  2247                           prodl	equ	0xFF3
  2248                           intcon	equ	0xFF2
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           indf2	equ	0xFDF
  2252                           postinc2	equ	0xFDE
  2253                           fsr2h	equ	0xFDA
  2254                           fsr2l	equ	0xFD9
  2255                           status	equ	0xFD8
  2256                           
  2257 ;; *************** function _decrementSignalWatchdog *****************
  2258 ;; Defined at:
  2259 ;;		line 163 in file "dmx.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      unsigned char 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1
  2273 ;;      Params:         0       0       0
  2274 ;;      Locals:         0       0       0
  2275 ;;      Temps:          0       0       0
  2276 ;;      Totals:         0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text18
  2288  0004DE                     __ptext18:
  2289                           	opt stack 0
  2290  0004DE                     _decrementSignalWatchdog:
  2291                           	opt stack 26
  2292                           
  2293                           ;dmx.c: 165: if ( signalWatchdog > 0) {
  2294                           
  2295                           ;incstack = 0
  2296  0004DE  502F               	movf	_signalWatchdog,w,c	;volatile
  2297  0004E0  1030               	iorwf	_signalWatchdog+1,w,c	;volatile
  2298  0004E2  B4D8               	btfsc	status,2,c
  2299  0004E4  D006               	goto	l116
  2300                           
  2301                           ;dmx.c: 166: signalWatchdog--;
  2302  0004E6  062F               	decf	_signalWatchdog,f,c	;volatile
  2303  0004E8  A0D8               	btfss	status,0,c
  2304  0004EA  0630               	decf	_signalWatchdog+1,f,c	;volatile
  2305                           
  2306                           ;dmx.c: 167: LATCbits.LATC1 = 0;
  2307  0004EC  928B               	bcf	3979,1,c	;volatile
  2308                           
  2309                           ;dmx.c: 168: return 0;
  2310  0004EE  0E00               	movlw	0
  2311                           
  2312                           ;dmx.c: 169: }
  2313  0004F0  0012               	return	
  2314  0004F2                     l116:
  2315                           
  2316                           ;dmx.c: 170: else {
  2317                           ;dmx.c: 171: LATCbits.LATC1 = 1;
  2318  0004F2  828B               	bsf	3979,1,c	;volatile
  2319                           
  2320                           ;dmx.c: 172: return 1;
  2321  0004F4  0E01               	movlw	1
  2322  0004F6  0012               	return	
  2323  0004F8                     __end_of_decrementSignalWatchdog:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           prodh	equ	0xFF4
  2330                           prodl	equ	0xFF3
  2331                           intcon	equ	0xFF2
  2332                           postinc0	equ	0xFEE
  2333                           wreg	equ	0xFE8
  2334                           indf2	equ	0xFDF
  2335                           postinc2	equ	0xFDE
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8
  2339                           
  2340 ;; *************** function _decrementFramingWatchdog *****************
  2341 ;; Defined at:
  2342 ;;		line 190 in file "dmx.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1
  2356 ;;      Params:         0       0       0
  2357 ;;      Locals:         0       0       0
  2358 ;;      Temps:          0       0       0
  2359 ;;      Totals:         0       0       0
  2360 ;;Total ram usage:        0 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    4
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text19
  2371  000526                     __ptext19:
  2372                           	opt stack 0
  2373  000526                     _decrementFramingWatchdog:
  2374                           	opt stack 26
  2375                           
  2376                           ;dmx.c: 192: if (framingErrorWatchdog > 0) {
  2377                           
  2378                           ;incstack = 0
  2379  000526  502D               	movf	_framingErrorWatchdog,w,c	;volatile
  2380  000528  102E               	iorwf	_framingErrorWatchdog+1,w,c	;volatile
  2381  00052A  B4D8               	btfsc	status,2,c
  2382  00052C  D004               	goto	l126
  2383                           
  2384                           ;dmx.c: 193: framingErrorWatchdog--;
  2385  00052E  062D               	decf	_framingErrorWatchdog,f,c	;volatile
  2386  000530  A0D8               	btfss	status,0,c
  2387  000532  062E               	decf	_framingErrorWatchdog+1,f,c	;volatile
  2388                           
  2389                           ;dmx.c: 194: }
  2390  000534  0012               	return	
  2391  000536                     l126:
  2392                           
  2393                           ;dmx.c: 195: else {
  2394                           ;dmx.c: 196: LATCbits.LATC2 = 0;
  2395  000536  948B               	bcf	3979,2,c	;volatile
  2396  000538  0012               	return	
  2397  00053A                     __end_of_decrementFramingWatchdog:
  2398                           	opt stack 0
  2399                           tblptru	equ	0xFF8
  2400                           tblptrh	equ	0xFF7
  2401                           tblptrl	equ	0xFF6
  2402                           tablat	equ	0xFF5
  2403                           prodh	equ	0xFF4
  2404                           prodl	equ	0xFF3
  2405                           intcon	equ	0xFF2
  2406                           postinc0	equ	0xFEE
  2407                           wreg	equ	0xFE8
  2408                           indf2	equ	0xFDF
  2409                           postinc2	equ	0xFDE
  2410                           fsr2h	equ	0xFDA
  2411                           fsr2l	equ	0xFD9
  2412                           status	equ	0xFD8
  2413                           
  2414 ;; *************** function _decrementDataWatchdog *****************
  2415 ;; Defined at:
  2416 ;;		line 141 in file "dmx.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1
  2430 ;;      Params:         0       0       0
  2431 ;;      Locals:         0       0       0
  2432 ;;      Temps:          0       0       0
  2433 ;;      Totals:         0       0       0
  2434 ;;Total ram usage:        0 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    4
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text20
  2445  000510                     __ptext20:
  2446                           	opt stack 0
  2447  000510                     _decrementDataWatchdog:
  2448                           	opt stack 26
  2449                           
  2450                           ;dmx.c: 143: if ( dataWatchdog > 0) {
  2451                           
  2452                           ;incstack = 0
  2453  000510  5031               	movf	_dataWatchdog,w,c	;volatile
  2454  000512  1032               	iorwf	_dataWatchdog+1,w,c	;volatile
  2455  000514  B4D8               	btfsc	status,2,c
  2456  000516  D005               	goto	l106
  2457                           
  2458                           ;dmx.c: 144: dataWatchdog--;
  2459  000518  0631               	decf	_dataWatchdog,f,c	;volatile
  2460  00051A  A0D8               	btfss	status,0,c
  2461  00051C  0632               	decf	_dataWatchdog+1,f,c	;volatile
  2462                           
  2463                           ;dmx.c: 145: LATCbits.LATC0 = 1;
  2464  00051E  808B               	bsf	3979,0,c	;volatile
  2465                           
  2466                           ;dmx.c: 146: }
  2467  000520  0012               	return	
  2468  000522                     l106:
  2469                           
  2470                           ;dmx.c: 147: else {
  2471                           ;dmx.c: 148: LATCbits.LATC0 = 0;
  2472  000522  908B               	bcf	3979,0,c	;volatile
  2473  000524  0012               	return	
  2474  000526                     __end_of_decrementDataWatchdog:
  2475                           	opt stack 0
  2476                           tblptru	equ	0xFF8
  2477                           tblptrh	equ	0xFF7
  2478                           tblptrl	equ	0xFF6
  2479                           tablat	equ	0xFF5
  2480                           prodh	equ	0xFF4
  2481                           prodl	equ	0xFF3
  2482                           intcon	equ	0xFF2
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           indf2	equ	0xFDF
  2486                           postinc2	equ	0xFDE
  2487                           fsr2h	equ	0xFDA
  2488                           fsr2l	equ	0xFD9
  2489                           status	equ	0xFD8
  2490                           
  2491 ;; *************** function _low_isr *****************
  2492 ;; Defined at:
  2493 ;;		line 32 in file "interrupts.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		None
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1
  2507 ;;      Params:         0       0       0
  2508 ;;      Locals:         0       0       0
  2509 ;;      Temps:         21       0       0
  2510 ;;      Totals:        21       0       0
  2511 ;;Total ram usage:       21 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    3
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		Interrupt level 1
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	intcodelo
  2522  000018                     __pintcodelo:
  2523                           	opt stack 0
  2524  000018                     _low_isr:
  2525                           	opt stack 22
  2526                           
  2527                           ;incstack = 0
  2528  000018  803A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2529  00001A  CFD8 F018          	movff	status,??_low_isr
  2530  00001E  CFE8 F019          	movff	wreg,??_low_isr+1
  2531  000022  CFE0 F01A          	movff	bsr,??_low_isr+2
  2532  000026  CFFA F01B          	movff	pclath,??_low_isr+3
  2533  00002A  CFFB F01C          	movff	pclatu,??_low_isr+4
  2534  00002E  CFE9 F01D          	movff	fsr0l,??_low_isr+5
  2535  000032  CFEA F01E          	movff	fsr0h,??_low_isr+6
  2536  000036  CFE1 F01F          	movff	fsr1l,??_low_isr+7
  2537  00003A  CFE2 F020          	movff	fsr1h,??_low_isr+8
  2538  00003E  CFD9 F021          	movff	fsr2l,??_low_isr+9
  2539  000042  CFDA F022          	movff	fsr2h,??_low_isr+10
  2540  000046  CFF3 F023          	movff	prodl,??_low_isr+11
  2541  00004A  CFF4 F024          	movff	prodh,??_low_isr+12
  2542  00004E  CFF6 F025          	movff	tblptrl,??_low_isr+13
  2543  000052  CFF7 F026          	movff	tblptrh,??_low_isr+14
  2544  000056  CFF8 F027          	movff	tblptru,??_low_isr+15
  2545  00005A  CFF5 F028          	movff	tablat,??_low_isr+16
  2546  00005E  C03A  F029         	movff	btemp,??_low_isr+17
  2547  000062  C03B  F02A         	movff	btemp+1,??_low_isr+18
  2548  000066  C03C  F02B         	movff	btemp+2,??_low_isr+19
  2549  00006A  C03D  F02C         	movff	btemp+3,??_low_isr+20
  2550  00006E  C02C  F03D         	movff	??_low_isr+20,btemp+3
  2551  000072  C02B  F03C         	movff	??_low_isr+19,btemp+2
  2552  000076  C02A  F03B         	movff	??_low_isr+18,btemp+1
  2553  00007A  C029  F03A         	movff	??_low_isr+17,btemp
  2554  00007E  C028  FFF5         	movff	??_low_isr+16,tablat
  2555  000082  C027  FFF8         	movff	??_low_isr+15,tblptru
  2556  000086  C026  FFF7         	movff	??_low_isr+14,tblptrh
  2557  00008A  C025  FFF6         	movff	??_low_isr+13,tblptrl
  2558  00008E  C024  FFF4         	movff	??_low_isr+12,prodh
  2559  000092  C023  FFF3         	movff	??_low_isr+11,prodl
  2560  000096  C022  FFDA         	movff	??_low_isr+10,fsr2h
  2561  00009A  C021  FFD9         	movff	??_low_isr+9,fsr2l
  2562  00009E  C020  FFE2         	movff	??_low_isr+8,fsr1h
  2563  0000A2  C01F  FFE1         	movff	??_low_isr+7,fsr1l
  2564  0000A6  C01E  FFEA         	movff	??_low_isr+6,fsr0h
  2565  0000AA  C01D  FFE9         	movff	??_low_isr+5,fsr0l
  2566  0000AE  C01C  FFFB         	movff	??_low_isr+4,pclatu
  2567  0000B2  C01B  FFFA         	movff	??_low_isr+3,pclath
  2568  0000B6  C01A  FFE0         	movff	??_low_isr+2,bsr
  2569  0000BA  C019  FFE8         	movff	??_low_isr+1,wreg
  2570  0000BE  C018  FFD8         	movff	??_low_isr,status
  2571  0000C2  903A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2572  0000C4  0010               	retfie	
  2573  0000C6                     __end_of_low_isr:
  2574                           	opt stack 0
  2575                           pclatu	equ	0xFFB
  2576                           pclath	equ	0xFFA
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           prodh	equ	0xFF4
  2582                           prodl	equ	0xFF3
  2583                           intcon	equ	0xFF2
  2584                           postinc0	equ	0xFEE
  2585                           fsr0h	equ	0xFEA
  2586                           fsr0l	equ	0xFE9
  2587                           wreg	equ	0xFE8
  2588                           fsr1h	equ	0xFE2
  2589                           fsr1l	equ	0xFE1
  2590                           bsr	equ	0xFE0
  2591                           indf2	equ	0xFDF
  2592                           postinc2	equ	0xFDE
  2593                           fsr2h	equ	0xFDA
  2594                           fsr2l	equ	0xFD9
  2595                           status	equ	0xFD8
  2596                           
  2597 ;; *************** function _high_isr *****************
  2598 ;; Defined at:
  2599 ;;		line 14 in file "interrupts.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1
  2613 ;;      Params:         0       0       0
  2614 ;;      Locals:         0       0       0
  2615 ;;      Temps:         18       0       0
  2616 ;;      Totals:        18       0       0
  2617 ;;Total ram usage:       18 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    2
  2620 ;; This function calls:
  2621 ;;		_handleDMX
  2622 ;; This function is called by:
  2623 ;;		Interrupt level 2
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	intcode
  2628  000008                     __pintcode:
  2629                           	opt stack 0
  2630  000008                     _high_isr:
  2631                           	opt stack 22
  2632                           
  2633                           ;incstack = 0
  2634  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2635  00000A  EF65  F000         	goto	int_func
  2636                           pclatu	equ	0xFFB
  2637                           pclath	equ	0xFFA
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           prodh	equ	0xFF4
  2643                           prodl	equ	0xFF3
  2644                           intcon	equ	0xFF2
  2645                           postinc0	equ	0xFEE
  2646                           fsr0h	equ	0xFEA
  2647                           fsr0l	equ	0xFE9
  2648                           wreg	equ	0xFE8
  2649                           fsr1h	equ	0xFE2
  2650                           fsr1l	equ	0xFE1
  2651                           bsr	equ	0xFE0
  2652                           indf2	equ	0xFDF
  2653                           postinc2	equ	0xFDE
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658                           	psect	intcode_body
  2659  0000CA                     __pintcode_body:
  2660                           	opt stack 22
  2661  0000CA                     int_func:
  2662                           	opt stack 22
  2663  0000CA  CFFA F006          	movff	pclath,??_high_isr
  2664  0000CE  CFFB F007          	movff	pclatu,??_high_isr+1
  2665  0000D2  CFE9 F008          	movff	fsr0l,??_high_isr+2
  2666  0000D6  CFEA F009          	movff	fsr0h,??_high_isr+3
  2667  0000DA  CFE1 F00A          	movff	fsr1l,??_high_isr+4
  2668  0000DE  CFE2 F00B          	movff	fsr1h,??_high_isr+5
  2669  0000E2  CFD9 F00C          	movff	fsr2l,??_high_isr+6
  2670  0000E6  CFDA F00D          	movff	fsr2h,??_high_isr+7
  2671  0000EA  CFF3 F00E          	movff	prodl,??_high_isr+8
  2672  0000EE  CFF4 F00F          	movff	prodh,??_high_isr+9
  2673  0000F2  CFF6 F010          	movff	tblptrl,??_high_isr+10
  2674  0000F6  CFF7 F011          	movff	tblptrh,??_high_isr+11
  2675  0000FA  CFF8 F012          	movff	tblptru,??_high_isr+12
  2676  0000FE  CFF5 F013          	movff	tablat,??_high_isr+13
  2677  000102  C03A  F014         	movff	btemp,??_high_isr+14
  2678  000106  C03B  F015         	movff	btemp+1,??_high_isr+15
  2679  00010A  C03C  F016         	movff	btemp+2,??_high_isr+16
  2680  00010E  C03D  F017         	movff	btemp+3,??_high_isr+17
  2681                           
  2682                           ;interrupts.c: 19: if (PIR1bits.RCIF == 1) {
  2683  000112  AA9E               	btfss	3998,5,c	;volatile
  2684  000114  D003               	goto	i2l246
  2685                           
  2686                           ;interrupts.c: 20: handleDMX();
  2687  000116  ECF3  F000         	call	_handleDMX	;wreg free
  2688                           
  2689                           ;interrupts.c: 21: PIR1bits.RCIF = 0;
  2690  00011A  9A9E               	bcf	3998,5,c	;volatile
  2691  00011C                     i2l246:
  2692  00011C  C017  F03D         	movff	??_high_isr+17,btemp+3
  2693  000120  C016  F03C         	movff	??_high_isr+16,btemp+2
  2694  000124  C015  F03B         	movff	??_high_isr+15,btemp+1
  2695  000128  C014  F03A         	movff	??_high_isr+14,btemp
  2696  00012C  C013  FFF5         	movff	??_high_isr+13,tablat
  2697  000130  C012  FFF8         	movff	??_high_isr+12,tblptru
  2698  000134  C011  FFF7         	movff	??_high_isr+11,tblptrh
  2699  000138  C010  FFF6         	movff	??_high_isr+10,tblptrl
  2700  00013C  C00F  FFF4         	movff	??_high_isr+9,prodh
  2701  000140  C00E  FFF3         	movff	??_high_isr+8,prodl
  2702  000144  C00D  FFDA         	movff	??_high_isr+7,fsr2h
  2703  000148  C00C  FFD9         	movff	??_high_isr+6,fsr2l
  2704  00014C  C00B  FFE2         	movff	??_high_isr+5,fsr1h
  2705  000150  C00A  FFE1         	movff	??_high_isr+4,fsr1l
  2706  000154  C009  FFEA         	movff	??_high_isr+3,fsr0h
  2707  000158  C008  FFE9         	movff	??_high_isr+2,fsr0l
  2708  00015C  C007  FFFB         	movff	??_high_isr+1,pclatu
  2709  000160  C006  FFFA         	movff	??_high_isr,pclath
  2710  000164  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2711  000166  0011               	retfie		f
  2712  000168                     __end_of_high_isr:
  2713                           	opt stack 0
  2714                           pclatu	equ	0xFFB
  2715                           pclath	equ	0xFFA
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           prodh	equ	0xFF4
  2721                           prodl	equ	0xFF3
  2722                           intcon	equ	0xFF2
  2723                           postinc0	equ	0xFEE
  2724                           fsr0h	equ	0xFEA
  2725                           fsr0l	equ	0xFE9
  2726                           wreg	equ	0xFE8
  2727                           fsr1h	equ	0xFE2
  2728                           fsr1l	equ	0xFE1
  2729                           bsr	equ	0xFE0
  2730                           indf2	equ	0xFDF
  2731                           postinc2	equ	0xFDE
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _handleDMX *****************
  2737 ;; Defined at:
  2738 ;;		line 83 in file "dmx.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  received        1    4[COMRAM] unsigned char 
  2743 ;;  eFraming        1    3[COMRAM] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1
  2753 ;;      Params:         0       0       0
  2754 ;;      Locals:         2       0       0
  2755 ;;      Temps:          0       0       0
  2756 ;;      Totals:         2       0       0
  2757 ;;Total ram usage:        2 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    1
  2760 ;; This function calls:
  2761 ;;		_resetDataWatchdog
  2762 ;;		_resetFramingWatchdog
  2763 ;;		_resetSignalWatchdog
  2764 ;;		_setChannelLevel
  2765 ;; This function is called by:
  2766 ;;		_high_isr
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text23
  2771  0001E6                     __ptext23:
  2772                           	opt stack 0
  2773  0001E6                     _handleDMX:
  2774                           	opt stack 22
  2775                           
  2776                           ;dmx.c: 85: unsigned char eFraming = (unsigned char)FERR;
  2777                           
  2778                           ;incstack = 0
  2779  0001E6  0E00               	movlw	0
  2780  0001E8  B4AB               	btfsc	4011,2,c	;volatile
  2781  0001EA  0E01               	movlw	1
  2782  0001EC  6E04               	movwf	handleDMX@eFraming,c
  2783                           
  2784                           ;dmx.c: 86: unsigned char received = RCREG;
  2785  0001EE  CFAE F005          	movff	4014,handleDMX@received	;volatile
  2786                           
  2787                           ;dmx.c: 88: resetSignalWatchdog();
  2788  0001F2  ECC3  F002         	call	_resetSignalWatchdog	;wreg free
  2789                           
  2790                           ;dmx.c: 90: if ( eFraming == 1) {
  2791  0001F6  0404               	decf	handleDMX@eFraming,w,c
  2792  0001F8  A4D8               	btfss	status,2,c
  2793  0001FA  D00B               	goto	i2l90
  2794                           
  2795                           ;dmx.c: 92: if ( dmxState == 0x00 ) {
  2796  0001FC  5038               	movf	_dmxState,w,c
  2797  0001FE  A4D8               	btfss	status,2,c
  2798  000200  D005               	goto	i2l91
  2799                           
  2800                           ;dmx.c: 93: currentAdress = 0;
  2801  000202  0E00               	movlw	0
  2802  000204  6E37               	movwf	_currentAdress,c
  2803                           
  2804                           ;dmx.c: 94: dmxState = 0x01;
  2805  000206  0E01               	movlw	1
  2806  000208  6E38               	movwf	_dmxState,c
  2807                           
  2808                           ;dmx.c: 95: }
  2809  00020A  0012               	return	
  2810  00020C                     i2l91:
  2811                           
  2812                           ;dmx.c: 96: else {
  2813                           ;dmx.c: 97: resetFramingWatchdog();
  2814  00020C  ECBD  F002         	call	_resetFramingWatchdog	;wreg free
  2815                           
  2816                           ;dmx.c: 98: }
  2817                           ;dmx.c: 99: return;
  2818  000210  0012               	return	
  2819  000212                     i2l90:
  2820                           
  2821                           ;dmx.c: 100: }
  2822                           ;dmx.c: 102: if ( (dmxState == 0x01) && (received == 0x00) ) {
  2823  000212  0438               	decf	_dmxState,w,c
  2824  000214  A4D8               	btfss	status,2,c
  2825  000216  D006               	goto	i2l94
  2826  000218  5005               	movf	handleDMX@received,w,c
  2827  00021A  A4D8               	btfss	status,2,c
  2828  00021C  D003               	goto	i2l94
  2829                           
  2830                           ;dmx.c: 104: dmxState = 0x02;
  2831  00021E  0E02               	movlw	2
  2832  000220  6E38               	movwf	_dmxState,c
  2833                           
  2834                           ;dmx.c: 105: return;
  2835  000222  0012               	return	
  2836  000224                     i2l94:
  2837                           
  2838                           ;dmx.c: 106: }
  2839                           ;dmx.c: 108: if ( dmxState == 0x02) {
  2840  000224  0E02               	movlw	2
  2841  000226  1838               	xorwf	_dmxState,w,c
  2842  000228  A4D8               	btfss	status,2,c
  2843  00022A  0012               	return	
  2844                           
  2845                           ;dmx.c: 110: if ( (currentAdress >= baseAddress) && (currentAdress < topAddress)) {
  2846  00022C  5036               	movf	_baseAddress,w,c
  2847  00022E  5C37               	subwf	_currentAdress,w,c
  2848  000230  A0D8               	btfss	status,0,c
  2849  000232  D00F               	goto	i2l96
  2850  000234  5035               	movf	_topAddress,w,c
  2851  000236  5C37               	subwf	_currentAdress,w,c
  2852  000238  B0D8               	btfsc	status,0,c
  2853  00023A  D00B               	goto	i2l96
  2854                           
  2855                           ;dmx.c: 112: if (received > 0) {
  2856  00023C  5005               	movf	handleDMX@received,w,c
  2857  00023E  A4D8               	btfss	status,2,c
  2858                           
  2859                           ;dmx.c: 113: resetDataWatchdog();
  2860  000240  ECC8  F002         	call	_resetDataWatchdog	;wreg free
  2861                           
  2862                           ;dmx.c: 114: }
  2863                           ;dmx.c: 115: setChannelLevel((unsigned char)(currentAdress - baseAddress), received);
  2864  000244  C005  F001         	movff	handleDMX@received,setChannelLevel@level
  2865  000248  5036               	movf	_baseAddress,w,c
  2866  00024A  0800               	sublw	0
  2867  00024C  2437               	addwf	_currentAdress,w,c
  2868  00024E  EC62  F001         	call	_setChannelLevel
  2869  000252                     i2l96:
  2870                           
  2871                           ;dmx.c: 116: }
  2872                           ;dmx.c: 118: if ( ++currentAdress >= 128)
  2873  000252  2A37               	incf	_currentAdress,f,c
  2874  000254  0E7F               	movlw	127
  2875  000256  6437               	cpfsgt	_currentAdress,c
  2876  000258  0012               	return	
  2877                           
  2878                           ;dmx.c: 119: dmxState = 0x00;
  2879  00025A  0E00               	movlw	0
  2880  00025C  6E38               	movwf	_dmxState,c
  2881  00025E  0012               	return	
  2882  000260                     __end_of_handleDMX:
  2883                           	opt stack 0
  2884                           pclatu	equ	0xFFB
  2885                           pclath	equ	0xFFA
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           prodh	equ	0xFF4
  2891                           prodl	equ	0xFF3
  2892                           intcon	equ	0xFF2
  2893                           postinc0	equ	0xFEE
  2894                           fsr0h	equ	0xFEA
  2895                           fsr0l	equ	0xFE9
  2896                           wreg	equ	0xFE8
  2897                           fsr1h	equ	0xFE2
  2898                           fsr1l	equ	0xFE1
  2899                           bsr	equ	0xFE0
  2900                           indf2	equ	0xFDF
  2901                           postinc2	equ	0xFDE
  2902                           fsr2h	equ	0xFDA
  2903                           fsr2l	equ	0xFD9
  2904                           status	equ	0xFD8
  2905                           
  2906 ;; *************** function _setChannelLevel *****************
  2907 ;; Defined at:
  2908 ;;		line 36 in file "channels.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  channel         1    wreg     unsigned char 
  2911 ;;  level           1    0[COMRAM] unsigned char 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  channel         1    2[COMRAM] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1
  2923 ;;      Params:         1       0       0
  2924 ;;      Locals:         1       0       0
  2925 ;;      Temps:          1       0       0
  2926 ;;      Totals:         3       0       0
  2927 ;;Total ram usage:        3 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_handleDMX
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text24
  2937  0002C4                     __ptext24:
  2938                           	opt stack 0
  2939  0002C4                     _setChannelLevel:
  2940                           	opt stack 22
  2941                           
  2942                           ;incstack = 0
  2943                           ;setChannelLevel@channel stored from wreg
  2944  0002C4  6E03               	movwf	setChannelLevel@channel,c
  2945                           
  2946                           ;channels.c: 38: if ( channel >= 32U ) {
  2947  0002C6  0E1F               	movlw	31
  2948  0002C8  6403               	cpfsgt	setChannelLevel@channel,c
  2949  0002CA  D001               	goto	i2l16
  2950  0002CC  0012               	return	
  2951  0002CE                     i2l16:
  2952                           
  2953                           ;channels.c: 40: }
  2954                           ;channels.c: 41: if ( channels[channel].level != level) {
  2955  0002CE  5003               	movf	setChannelLevel@channel,w,c
  2956  0002D0  0D02               	mullw	2
  2957  0002D2  0E01               	movlw	1
  2958  0002D4  26F3               	addwf	prodl,f,c
  2959  0002D6  0E00               	movlw	0
  2960  0002D8  22F4               	addwfc	prodh,f,c
  2961  0002DA  0E60               	movlw	low _channels
  2962  0002DC  24F3               	addwf	prodl,w,c
  2963  0002DE  6ED9               	movwf	fsr2l,c
  2964  0002E0  0E00               	movlw	high _channels
  2965  0002E2  20F4               	addwfc	prodh,w,c
  2966  0002E4  6EDA               	movwf	fsr2h,c
  2967  0002E6  5001               	movf	setChannelLevel@level,w,c
  2968  0002E8  18DE               	xorwf	postinc2,w,c
  2969  0002EA  B4D8               	btfsc	status,2,c
  2970  0002EC  0012               	return	
  2971                           
  2972                           ;channels.c: 42: channels[channel].level = level;
  2973  0002EE  5003               	movf	setChannelLevel@channel,w,c
  2974  0002F0  0D02               	mullw	2
  2975  0002F2  0E01               	movlw	1
  2976  0002F4  26F3               	addwf	prodl,f,c
  2977  0002F6  0E00               	movlw	0
  2978  0002F8  22F4               	addwfc	prodh,f,c
  2979  0002FA  0E60               	movlw	low _channels
  2980  0002FC  24F3               	addwf	prodl,w,c
  2981  0002FE  6ED9               	movwf	fsr2l,c
  2982  000300  0E00               	movlw	high _channels
  2983  000302  20F4               	addwfc	prodh,w,c
  2984  000304  6EDA               	movwf	fsr2h,c
  2985  000306  C001  FFDF         	movff	setChannelLevel@level,indf2
  2986                           
  2987                           ;channels.c: 43: channels[channel].bChanged = 1;
  2988  00030A  5003               	movf	setChannelLevel@channel,w,c
  2989  00030C  0D02               	mullw	2
  2990  00030E  0E60               	movlw	low _channels
  2991  000310  24F3               	addwf	prodl,w,c
  2992  000312  6ED9               	movwf	fsr2l,c
  2993  000314  0E00               	movlw	high _channels
  2994  000316  20F4               	addwfc	prodh,w,c
  2995  000318  6EDA               	movwf	fsr2h,c
  2996  00031A  0E01               	movlw	1
  2997  00031C  6EDF               	movwf	indf2,c
  2998  00031E  0012               	return	
  2999  000320                     __end_of_setChannelLevel:
  3000                           	opt stack 0
  3001                           pclatu	equ	0xFFB
  3002                           pclath	equ	0xFFA
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           prodh	equ	0xFF4
  3008                           prodl	equ	0xFF3
  3009                           intcon	equ	0xFF2
  3010                           postinc0	equ	0xFEE
  3011                           fsr0h	equ	0xFEA
  3012                           fsr0l	equ	0xFE9
  3013                           wreg	equ	0xFE8
  3014                           fsr1h	equ	0xFE2
  3015                           fsr1l	equ	0xFE1
  3016                           bsr	equ	0xFE0
  3017                           indf2	equ	0xFDF
  3018                           postinc2	equ	0xFDE
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _resetSignalWatchdog *****************
  3024 ;; Defined at:
  3025 ;;		line 158 in file "dmx.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1
  3039 ;;      Params:         0       0       0
  3040 ;;      Locals:         0       0       0
  3041 ;;      Temps:          0       0       0
  3042 ;;      Totals:         0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_handleDMX
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text25
  3053  000586                     __ptext25:
  3054                           	opt stack 0
  3055  000586                     _resetSignalWatchdog:
  3056                           	opt stack 22
  3057                           
  3058                           ;dmx.c: 160: signalWatchdog = 1000;
  3059                           
  3060                           ;incstack = 0
  3061  000586  0E03               	movlw	3
  3062  000588  6E30               	movwf	_signalWatchdog+1,c	;volatile
  3063  00058A  0EE8               	movlw	232
  3064  00058C  6E2F               	movwf	_signalWatchdog,c	;volatile
  3065  00058E  0012               	return		;funcret
  3066  000590                     __end_of_resetSignalWatchdog:
  3067                           	opt stack 0
  3068                           pclatu	equ	0xFFB
  3069                           pclath	equ	0xFFA
  3070                           tblptru	equ	0xFF8
  3071                           tblptrh	equ	0xFF7
  3072                           tblptrl	equ	0xFF6
  3073                           tablat	equ	0xFF5
  3074                           prodh	equ	0xFF4
  3075                           prodl	equ	0xFF3
  3076                           intcon	equ	0xFF2
  3077                           postinc0	equ	0xFEE
  3078                           fsr0h	equ	0xFEA
  3079                           fsr0l	equ	0xFE9
  3080                           wreg	equ	0xFE8
  3081                           fsr1h	equ	0xFE2
  3082                           fsr1l	equ	0xFE1
  3083                           bsr	equ	0xFE0
  3084                           indf2	equ	0xFDF
  3085                           postinc2	equ	0xFDE
  3086                           fsr2h	equ	0xFDA
  3087                           fsr2l	equ	0xFD9
  3088                           status	equ	0xFD8
  3089                           
  3090 ;; *************** function _resetFramingWatchdog *****************
  3091 ;; Defined at:
  3092 ;;		line 185 in file "dmx.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1
  3106 ;;      Params:         0       0       0
  3107 ;;      Locals:         0       0       0
  3108 ;;      Temps:          0       0       0
  3109 ;;      Totals:         0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_handleDMX
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text26
  3120  00057A                     __ptext26:
  3121                           	opt stack 0
  3122  00057A                     _resetFramingWatchdog:
  3123                           	opt stack 22
  3124                           
  3125                           ;dmx.c: 186: LATCbits.LATC2 = 1;
  3126                           
  3127                           ;incstack = 0
  3128  00057A  848B               	bsf	3979,2,c	;volatile
  3129                           
  3130                           ;dmx.c: 187: framingErrorWatchdog = 1000;
  3131  00057C  0E03               	movlw	3
  3132  00057E  6E2E               	movwf	_framingErrorWatchdog+1,c	;volatile
  3133  000580  0EE8               	movlw	232
  3134  000582  6E2D               	movwf	_framingErrorWatchdog,c	;volatile
  3135  000584  0012               	return		;funcret
  3136  000586                     __end_of_resetFramingWatchdog:
  3137                           	opt stack 0
  3138                           pclatu	equ	0xFFB
  3139                           pclath	equ	0xFFA
  3140                           tblptru	equ	0xFF8
  3141                           tblptrh	equ	0xFF7
  3142                           tblptrl	equ	0xFF6
  3143                           tablat	equ	0xFF5
  3144                           prodh	equ	0xFF4
  3145                           prodl	equ	0xFF3
  3146                           intcon	equ	0xFF2
  3147                           postinc0	equ	0xFEE
  3148                           fsr0h	equ	0xFEA
  3149                           fsr0l	equ	0xFE9
  3150                           wreg	equ	0xFE8
  3151                           fsr1h	equ	0xFE2
  3152                           fsr1l	equ	0xFE1
  3153                           bsr	equ	0xFE0
  3154                           indf2	equ	0xFDF
  3155                           postinc2	equ	0xFDE
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function _resetDataWatchdog *****************
  3161 ;; Defined at:
  3162 ;;		line 137 in file "dmx.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1
  3176 ;;      Params:         0       0       0
  3177 ;;      Locals:         0       0       0
  3178 ;;      Temps:          0       0       0
  3179 ;;      Totals:         0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_handleDMX
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text27
  3190  000590                     __ptext27:
  3191                           	opt stack 0
  3192  000590                     _resetDataWatchdog:
  3193                           	opt stack 22
  3194                           
  3195                           ;dmx.c: 138: dataWatchdog = 100;
  3196                           
  3197                           ;incstack = 0
  3198  000590  0E00               	movlw	0
  3199  000592  6E32               	movwf	_dataWatchdog+1,c	;volatile
  3200  000594  0E64               	movlw	100
  3201  000596  6E31               	movwf	_dataWatchdog,c	;volatile
  3202  000598  0012               	return		;funcret
  3203  00059A                     __end_of_resetDataWatchdog:
  3204                           	opt stack 0
  3205                           pclatu	equ	0xFFB
  3206                           pclath	equ	0xFFA
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           prodh	equ	0xFF4
  3212                           prodl	equ	0xFF3
  3213                           intcon	equ	0xFF2
  3214                           postinc0	equ	0xFEE
  3215                           fsr0h	equ	0xFEA
  3216                           fsr0l	equ	0xFE9
  3217                           wreg	equ	0xFE8
  3218                           fsr1h	equ	0xFE2
  3219                           fsr1l	equ	0xFE1
  3220                           bsr	equ	0xFE0
  3221                           indf2	equ	0xFDF
  3222                           postinc2	equ	0xFDE
  3223                           fsr2h	equ	0xFDA
  3224                           fsr2l	equ	0xFD9
  3225                           status	equ	0xFD8
  3226                           pclatu	equ	0xFFB
  3227                           pclath	equ	0xFFA
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           prodh	equ	0xFF4
  3233                           prodl	equ	0xFF3
  3234                           intcon	equ	0xFF2
  3235                           postinc0	equ	0xFEE
  3236                           fsr0h	equ	0xFEA
  3237                           fsr0l	equ	0xFE9
  3238                           wreg	equ	0xFE8
  3239                           fsr1h	equ	0xFE2
  3240                           fsr1l	equ	0xFE1
  3241                           bsr	equ	0xFE0
  3242                           indf2	equ	0xFDF
  3243                           postinc2	equ	0xFDE
  3244                           fsr2h	equ	0xFDA
  3245                           fsr2l	equ	0xFD9
  3246                           status	equ	0xFD8
  3247                           
  3248                           	psect	rparam
  3249  0000                     pclatu	equ	0xFFB
  3250                           pclath	equ	0xFFA
  3251                           tblptru	equ	0xFF8
  3252                           tblptrh	equ	0xFF7
  3253                           tblptrl	equ	0xFF6
  3254                           tablat	equ	0xFF5
  3255                           prodh	equ	0xFF4
  3256                           prodl	equ	0xFF3
  3257                           intcon	equ	0xFF2
  3258                           postinc0	equ	0xFEE
  3259                           fsr0h	equ	0xFEA
  3260                           fsr0l	equ	0xFE9
  3261                           wreg	equ	0xFE8
  3262                           fsr1h	equ	0xFE2
  3263                           fsr1l	equ	0xFE1
  3264                           bsr	equ	0xFE0
  3265                           indf2	equ	0xFDF
  3266                           postinc2	equ	0xFDE
  3267                           fsr2h	equ	0xFDA
  3268                           fsr2l	equ	0xFD9
  3269                           status	equ	0xFD8
  3270                           
  3271                           	psect	temp
  3272  00003A                     btemp:
  3273                           	opt stack 0
  3274  00003A                     	ds	1
  3275  0000                     int$flags	set	btemp
  3276  0000                     wtemp6	set	btemp+1
  3277                           pclatu	equ	0xFFB
  3278                           pclath	equ	0xFFA
  3279                           tblptru	equ	0xFF8
  3280                           tblptrh	equ	0xFF7
  3281                           tblptrl	equ	0xFF6
  3282                           tablat	equ	0xFF5
  3283                           prodh	equ	0xFF4
  3284                           prodl	equ	0xFF3
  3285                           intcon	equ	0xFF2
  3286                           postinc0	equ	0xFEE
  3287                           fsr0h	equ	0xFEA
  3288                           fsr0l	equ	0xFE9
  3289                           wreg	equ	0xFE8
  3290                           fsr1h	equ	0xFE2
  3291                           fsr1l	equ	0xFE1
  3292                           bsr	equ	0xFE0
  3293                           indf2	equ	0xFDF
  3294                           postinc2	equ	0xFDE
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    512
    Data        1
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      57
    BANK0           160     14      78
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_handleDMX
    _handleDMX->_setChannelLevel

Critical Paths under _main in BANK0

    _main->_sendChangedChannels
    _sendChangedChannels->_pcaSetChannelLog
    _pcaSetChannelLog->_pcaSetChannelRaw
    _pcaSetChannelRaw->_getLookup
    _pcaSetChannelRaw->_pcaGetAddress
    _pcaInit->_pcaWakeUp
    _pcaWakeUp->_pcaGetAddress

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1816
              _decrementDataWatchdog
           _decrementFramingWatchdog
            _decrementSignalWatchdog
                            _i2cInit
                       _initChannels
                            _initDMX
                       _initHardware
                            _pcaInit
                          _pcaWakeUp
                           _resetDMX
                _sendChangedChannels
 ---------------------------------------------------------------------------------
 (1) _sendChangedChannels                                  4     4      0    1395
                                             10 BANK0      4     4      0
                   _pcaSetChannelLog
 ---------------------------------------------------------------------------------
 (2) _pcaSetChannelLog                                     3     1      2    1067
                                              7 BANK0      3     1      2
                          _getLookup
                   _pcaSetChannelRaw
 ---------------------------------------------------------------------------------
 (3) _pcaSetChannelRaw                                     4     1      3     583
                                              3 BANK0      4     1      3
                          _getLookup (ARG)
                            _i2cSend
                           _i2cStart
                            _i2cStop
                      _pcaGetAddress
 ---------------------------------------------------------------------------------
 (3) _getLookup                                            3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _resetDMX                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pcaInit                                              1     1      0     161
                                              4 BANK0      1     1      0
                          _pcaWakeUp
 ---------------------------------------------------------------------------------
 (1) _pcaWakeUp                                            1     1      0     130
                                              3 BANK0      1     1      0
                            _i2cSend
                           _i2cStart
                            _i2cStop
                      _pcaGetAddress
 ---------------------------------------------------------------------------------
 (4) _pcaGetAddress                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _i2cStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2cStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2cSend                                              1     1      0      31
                                              0 BANK0      1     1      0
                            _i2cWait
 ---------------------------------------------------------------------------------
 (5) _i2cWait                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHardware                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDMX                                              0     0      0       0
                  _getDMXBaseAddress
 ---------------------------------------------------------------------------------
 (2) _getDMXBaseAddress                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initChannels                                         1     1      0     130
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2cInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementSignalWatchdog                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementFramingWatchdog                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementDataWatchdog                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                             21    21      0       0
                                             23 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            18    18      0     298
                                              5 COMRAM    18    18      0
                          _handleDMX
 ---------------------------------------------------------------------------------
 (8) _handleDMX                                            2     2      0     298
                                              3 COMRAM     2     2      0
                  _resetDataWatchdog
               _resetFramingWatchdog
                _resetSignalWatchdog
                    _setChannelLevel
 ---------------------------------------------------------------------------------
 (9) _setChannelLevel                                      3     2      1     208
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (9) _resetSignalWatchdog                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _resetFramingWatchdog                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _resetDataWatchdog                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _decrementDataWatchdog
   _decrementFramingWatchdog
   _decrementSignalWatchdog
   _i2cInit
   _initChannels
   _initDMX
     _getDMXBaseAddress
   _initHardware
   _pcaInit
     _pcaWakeUp
       _i2cSend
         _i2cWait
       _i2cStart
       _i2cStop
       _pcaGetAddress
   _pcaWakeUp
     _i2cSend
       _i2cWait
     _i2cStart
     _i2cStop
     _pcaGetAddress
   _resetDMX
   _sendChangedChannels
     _pcaSetChannelLog
       _getLookup
       _pcaSetChannelRaw
         _getLookup (ARG)
         _i2cSend (ARG)
           _i2cWait
         _i2cStart (ARG)
         _i2cStop (ARG)
         _pcaGetAddress (ARG)

 _low_isr (ROOT)

 _high_isr (ROOT)
   _handleDMX
     _resetDataWatchdog
     _resetFramingWatchdog
     _resetSignalWatchdog
     _setChannelLevel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      E      4E       4       48.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      39       1       60.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      87       7        0.0%
DATA                 0      0      87       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Feb 05 08:16:42 2022

                       i2cSend@dat 00A0                        _SSPSTATbits 000FC7  
                               l11 03B8                                 l21 0176  
                               _BF 007E38                                 l23 01E0  
                               l24 01B2                                 l25 01BA  
                               bsr 000FE0            __end_of_setChannelLevel 0320  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                              l106 0522                                l116 04F2  
                              l126 0536                                l302 0290  
                              l303 0298                                l304 029A  
                              l305 02B2                                l322 04D0  
                              l228 0542                                l190 05A4  
                              l196 059C                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                       __CFG_BORV$19 000000  
                              prod 000FF3                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                               l1731 016E  
                             l1719 03B0                               _CREN 007D5C  
                             _FERR 007D5A                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _PEIE 007F96                               i2l16 02CE  
                             i2l90 0212                               _OERR 007D59  
                             i2l91 020C                               i2l94 0224  
                             i2l96 0252                               _SYNC 007D64  
                      _bI2CTimeout 0034                               _main 0260  
             _resetFramingWatchdog 057A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             fsr0l 000FE9                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             btemp 003A                               prodh 000FF4  
                             prodl 000FF3               setChannelLevel@level 0001  
                             start 00C6                      __CFG_IESO$OFF 000000  
                    __CFG_FOSC$IRC 000000                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000000                    __end_of_i2cInit 0510  
                  __end_of_i2cSend 054C                    __end_of_i2cWait 055E  
                  __end_of_i2cStop 05A2       __size_of_resetSignalWatchdog 000A  
                    __CFG_PLLEN$ON 000000                    ??_pcaGetAddress 00A0  
                            ?_main 0001                              _ANSEL 000F7E  
                            i2l246 011C                              _RCREG 000FAE  
                   __CFG_BBSIZ$OFF 000000                              _PORTA 000F80  
                            _PORTB 000F81                              _PORTC 000F82  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                       pcaInit@which 00A4  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                      __CFG_WRTB$OFF 000000  
                  __end_of_pcaInit 057A                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                    __end_of_initDMX 0450  
                   __CFG_EBTRB$OFF 000000                    __end_of_low_isr 00C6  
                            pclath 000FFA                              tablat 000FF5  
            ?_resetFramingWatchdog 0001                              status 000FD8  
                            wtemp6 003B                      ?_initChannels 0001  
                   __CFG_HFOFST$ON 000000                      ?_initHardware 0001  
                  __initialization 03EC                       __end_of_main 02C4  
                 __end_of_i2cStart 05AA                     __CFG_PCLKEN$ON 000000  
                 ?_setChannelLevel 0001                             ??_main 00AE  
   __size_of_decrementDataWatchdog 0016                      __activetblptr 000002  
    __end_of_decrementDataWatchdog 0526                             _ANSELH 000F7F  
                   __CFG_WDTEN$OFF 000000                     ??_initChannels 00A0  
                           _SPBRG1 000FAF                             _SPBRGH 000FB0  
                           _SSPADD 000FC8                             _SSPBUF 000FC9  
                        ??_i2cInit 00A0                          ??_i2cSend 00A0  
                        ??_i2cWait 00A0                          ??_i2cStop 00A0  
                   ??_initHardware 00A0                     __CFG_PWRTEN$ON 000000  
                   __CFG_XINST$OFF 000000        __end_of_sendChangedChannels 01E6  
                 __end_of_high_isr 0168                     __CFG_STVREN$ON 000000  
         __end_of_pcaSetChannelLog 04BC           __end_of_pcaSetChannelRaw 0366  
                           clear_0 0404                             clear_1 0410  
                           _lookup 3DFF                          ??_pcaInit 00A4  
                        ??_initDMX 00A0                   __end_of_resetDMX 056C  
           setChannelLevel@channel 0003                       __pdataCOMRAM 0039  
 __size_of_decrementSignalWatchdog 001A                       __mediumconst 3DFE  
                        ??_low_isr 0018                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
           ??_resetFramingWatchdog 0001                         __accesstop 0060  
          __end_of__initialization 0416                       _dataWatchdog 0031  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                _pcaGetAddress$940 00A1                 __size_of_handleDMX 007A  
         _decrementFramingWatchdog 0526                 __size_of_getLookup 0024  
                    _currentAdress 0037                _resetSignalWatchdog 0586  
               __size_of_pcaWakeUp 0026                         __pbssBANK0 0060  
                        ?_i2cStart 0001               ?_resetSignalWatchdog 0001  
                          _CM1CON0 000F6D                            _CM2CON0 000F6B  
             __end_of_initChannels 03EC               __end_of_initHardware 03AA  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                        ?_high_isr 0001                            _SSPSTAT 000FC7  
                       ??_i2cStart 00A0                            _i2cInit 04F8  
                          _i2cSend 053A                            _i2cWait 054C  
                          _i2cStop 059A                  __end_of_handleDMX 0260  
                __end_of_getLookup 049A                            __Hparam 0000  
                        ?_resetDMX 0001                            __Lparam 0000  
            ??_resetSignalWatchdog 0001                  __end_of_pcaWakeUp 0476  
          pcaSetChannelLog@channel 00A7                            __pcinit 03EC  
                          __ramtop 0200                            __ptext0 0260  
                          __ptext1 0168                            __ptext2 049A  
                          __ptext3 0320                            __ptext4 0476  
                          __ptext5 055E                            __ptext6 056C  
                          __ptext7 0450                            __ptext8 04BC  
                          __ptext9 059A                            _pcaInit 056C  
            __end_of_pcaGetAddress 04DE            _decrementSignalWatchdog 04DE  
                          _initDMX 0424                            _low_isr 0018  
                       ??_high_isr 0006                     _signalWatchdog 002F  
                   __pintcode_body 00CA               end_of_initialization 0416  
                    __Lmediumconst 3DFE                            int_func 00CA  
                       ??_resetDMX 00A0            pcaSetChannelRaw@channel 00A3  
                _resetDataWatchdog 0590                            postinc0 000FEE  
                          postinc2 000FDE                         _topAddress 0035  
               ?_resetDataWatchdog 0001                  ?_pcaSetChannelLog 00A7  
                ?_pcaSetChannelRaw 00A3                 ??_pcaSetChannelLog 00A9  
               ??_pcaSetChannelRaw 00A6                ??_resetDataWatchdog 0001  
                        _TRISBbits 000F93              _decrementDataWatchdog 0510  
         __size_of_setChannelLevel 005C          __end_of_resetDataWatchdog 059A  
       ??_decrementFramingWatchdog 00A0              __size_of_initChannels 0042  
        ??_decrementSignalWatchdog 00A0                        _BAUDCONbits 000FB8  
                    __pidataCOMRAM 05B2              __size_of_initHardware 0044  
     __size_of_sendChangedChannels 007E                     __end_of_lookup 3FFF  
              start_initialization 03EC                        _baseAddress 0036  
                handleDMX@eFraming 0004      __size_of_resetFramingWatchdog 000C  
                     _initChannels 03AA                  __size_of_i2cStart 0008  
                     _initHardware 0366                     pcaWakeUp@which 00A3  
                    initChannels@i 00A0          sendChangedChannels@device 00AB  
           ?_decrementDataWatchdog 0001                        __pbssCOMRAM 002D  
                    __pcstackBANK0 00A0                  handleDMX@received 0005  
  __end_of_decrementSignalWatchdog 04F8                       _errorCounter 0033  
                __size_of_high_isr 0160                  ??_setChannelLevel 0002  
                         ?_i2cInit 0001                           ?_i2cSend 0001  
                         ?_i2cWait 0001                    _bAllChannelsOff 0039  
                         ?_i2cStop 0001         __size_of_resetDataWatchdog 000A  
                        __pintcode 0008                          _handleDMX 01E6  
                    __pmediumconst 3DFE                  __size_of_resetDMX 000E  
                        _getLookup 0476                        __pintcodelo 0018  
                         ?_pcaInit 0001                          _pcaWakeUp 0450  
                         ?_initDMX 0001                           ?_low_isr 0001  
      __end_of_resetSignalWatchdog 0590               sendChangedChannels@i 00AD  
                         _LATAbits 000F89                           _LATCbits 000F8B  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
                   getLookup@value 00A2                           _PIR1bits 000F9E  
 __end_of_decrementFramingWatchdog 053A                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                         ?_handleDMX 0001  
                       ?_getLookup 00A0                         ?_pcaWakeUp 0001  
                _getDMXBaseAddress 05AA                 ?_getDMXBaseAddress 0001  
                         _i2cStart 05A2          __size_of_pcaSetChannelLog 0022  
        __size_of_pcaSetChannelRaw 0046                _sendChangedChannels 0168  
               pcaGetAddress@which 00A0                   __size_of_i2cInit 0018  
                 __size_of_i2cSend 0012                   __size_of_i2cWait 0012  
           __size_of_pcaGetAddress 0022                ??_getDMXBaseAddress 00A0  
                 __size_of_i2cStop 0008                           __Hrparam 0000  
                         __Lrparam 0000                 __CFG_BOREN$SBORDIS 000000  
             ?_sendChangedChannels 0001                   __size_of_pcaInit 000E  
                 __size_of_initDMX 002C          __end_of_getDMXBaseAddress 05B2  
                         _channels 0060                   __size_of_low_isr 00AE  
                         __ptext10 05A2                           __ptext11 053A  
                         __ptext20 0510                           __ptext12 054C  
                         __ptext13 0366                           __ptext14 0424  
                         __ptext23 01E6                           __ptext15 05AA  
                         __ptext24 02C4                           __ptext16 03AA  
                         __ptext25 0586                           __ptext17 04F8  
                         __ptext26 057A                           __ptext18 04DE  
                         __ptext27 0590                           __ptext19 0526  
       sendChangedChannels@channel 00AC                           _high_isr 0008  
                         _dmxState 0038                      __size_of_main 0064  
            pcaSetChannelLog@value 00A8              pcaSetChannelLog@which 00A9  
                         _resetDMX 055E              pcaSetChannelRaw@level 00A4  
                      ??_handleDMX 0004              pcaSetChannelRaw@which 00A6  
                         int$flags 003A                        ??_getLookup 00A2  
     __end_of_resetFramingWatchdog 0586            ??_decrementDataWatchdog 00A0  
            ??_sendChangedChannels 00AA                        ??_pcaWakeUp 00A3  
                    _pcaGetAddress 04BC                        _OSCTUNEbits 000F9B  
                       _INTCONbits 000FF2                    _setChannelLevel 02C4  
__size_of_decrementFramingWatchdog 0014          ?_decrementFramingWatchdog 0001  
                         intlevel1 0000                           intlevel2 0000  
             _framingErrorWatchdog 002D                         _RCSTA1bits 000FAB  
                       _OSCCONbits 000FD3           ?_decrementSignalWatchdog 0001  
                   ?_pcaGetAddress 0001         __size_of_getDMXBaseAddress 0008  
                      _SSPCON1bits 000FC6                        _SSPCON2bits 000FC5  
                 _pcaSetChannelLog 049A                   _pcaSetChannelRaw 0320  
